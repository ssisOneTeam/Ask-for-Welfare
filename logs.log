2023-10-12 19:11:12,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-12 19:11:12,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-12 19:11:12,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-12 19:11:12,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-12 19:11:12,365:INFO:Initializing load_model()
2023-10-12 19:11:12,365:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:12:01,871:INFO:Initializing load_model()
2023-10-12 19:12:01,873:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:12:02,016:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:12:02,017:INFO:Initializing load_model()
2023-10-12 19:12:02,017:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:12:02,026:INFO:Initializing load_model()
2023-10-12 19:12:02,026:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:12:02,028:INFO:Initializing load_model()
2023-10-12 19:12:02,028:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:12:07,287:INFO:Initializing load_model()
2023-10-12 19:12:07,287:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:12:07,288:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:12:07,289:INFO:Initializing load_model()
2023-10-12 19:12:07,289:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:12:07,290:INFO:Initializing load_model()
2023-10-12 19:12:07,290:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:12:07,292:INFO:Initializing load_model()
2023-10-12 19:12:07,292:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:12:07,309:INFO:Initializing predict_model()
2023-10-12 19:12:07,309:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1785d1ae0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Diameter', 'C', 'Si', 'Mn', 'P',
                                             'S', 'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'V', 'W', 'Ti', 'B', 'N',
                                             'Co', 'Nb', 'AS', 'Mg', 'Zn', 'Fe',
                                             'Ta', 'Sb', 'Ca', 'Ce', 'Se', 'Pb',
                                             'Zr', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x287067100>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4b520>)
2023-10-12 19:12:07,309:INFO:Checking exceptions
2023-10-12 19:12:07,309:INFO:Preloading libraries
2023-10-12 19:12:07,309:INFO:Set up data.
2023-10-12 19:12:07,315:INFO:Set up index.
2023-10-12 19:12:07,412:INFO:Initializing predict_model()
2023-10-12 19:12:07,412:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178423e20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Diameter', 'C', 'Si', 'Mn', 'P',
                                             'S', 'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'V', 'W', 'Ti', 'B', 'N',
                                             'Co', 'Nb', 'AS', 'Mg', 'Zn', 'Fe',
                                             'Ta', 'Sb', 'Ca', 'Ce', 'Se', 'Pb',
                                             'Zr', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=957))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f8efd00>)
2023-10-12 19:12:07,412:INFO:Checking exceptions
2023-10-12 19:12:07,412:INFO:Preloading libraries
2023-10-12 19:12:07,412:INFO:Set up data.
2023-10-12 19:12:07,416:INFO:Set up index.
2023-10-12 19:12:07,478:INFO:Initializing predict_model()
2023-10-12 19:12:07,478:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178423e20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Diameter', 'C', 'Si', 'Mn', 'P',
                                             'S', 'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'V', 'W', 'Ti', 'B', 'N',
                                             'Co', 'Nb', 'AS', 'Mg', 'Zn', 'Fe',
                                             'Ta', 'Sb', 'Ca', 'Ce', 'Se', 'Pb',
                                             'Zr', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=671))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f8efd00>)
2023-10-12 19:12:07,479:INFO:Checking exceptions
2023-10-12 19:12:07,479:INFO:Preloading libraries
2023-10-12 19:12:07,479:INFO:Set up data.
2023-10-12 19:12:07,482:INFO:Set up index.
2023-10-12 19:12:07,534:INFO:Initializing predict_model()
2023-10-12 19:12:07,534:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178423e20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Diameter', 'C', 'Si', 'Mn', 'P',
                                             'S', 'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'V', 'W', 'Ti', 'B', 'N',
                                             'Co', 'Nb', 'AS', 'Mg', 'Zn', 'Fe',
                                             'Ta', 'Sb', 'Ca', 'Ce', 'Se', 'Pb',
                                             'Zr', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f8efd00>)
2023-10-12 19:12:07,534:INFO:Checking exceptions
2023-10-12 19:12:07,534:INFO:Preloading libraries
2023-10-12 19:12:07,534:INFO:Set up data.
2023-10-12 19:12:07,537:INFO:Set up index.
2023-10-12 19:35:06,697:INFO:Initializing load_model()
2023-10-12 19:35:06,698:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:35:06,716:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:35:06,718:INFO:Initializing load_model()
2023-10-12 19:35:06,718:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:35:06,730:INFO:Initializing load_model()
2023-10-12 19:35:06,730:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:35:06,735:INFO:Initializing load_model()
2023-10-12 19:35:06,735:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:35:16,224:INFO:Initializing load_model()
2023-10-12 19:35:16,225:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:35:16,228:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:35:16,228:INFO:Initializing load_model()
2023-10-12 19:35:16,228:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:35:16,231:INFO:Initializing load_model()
2023-10-12 19:35:16,231:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:35:16,233:INFO:Initializing load_model()
2023-10-12 19:35:16,233:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:36:53,957:INFO:Initializing load_model()
2023-10-12 19:36:53,958:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:36:53,964:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:36:53,964:INFO:Initializing load_model()
2023-10-12 19:36:53,964:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:36:53,969:INFO:Initializing load_model()
2023-10-12 19:36:53,969:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:36:53,971:INFO:Initializing load_model()
2023-10-12 19:36:53,971:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:37:08,083:INFO:Initializing load_model()
2023-10-12 19:37:08,083:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:37:08,091:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:37:08,092:INFO:Initializing load_model()
2023-10-12 19:37:08,092:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:37:08,097:INFO:Initializing load_model()
2023-10-12 19:37:08,097:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:37:08,100:INFO:Initializing load_model()
2023-10-12 19:37:08,100:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:37:09,934:INFO:Initializing load_model()
2023-10-12 19:37:09,934:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:37:09,936:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:37:09,936:INFO:Initializing load_model()
2023-10-12 19:37:09,936:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:37:09,938:INFO:Initializing load_model()
2023-10-12 19:37:09,938:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:37:09,939:INFO:Initializing load_model()
2023-10-12 19:37:09,939:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:39:20,960:INFO:Initializing load_model()
2023-10-12 19:39:20,963:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:39:20,967:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:39:20,967:INFO:Initializing load_model()
2023-10-12 19:39:20,967:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:39:20,972:INFO:Initializing load_model()
2023-10-12 19:39:20,972:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:39:20,975:INFO:Initializing load_model()
2023-10-12 19:39:20,975:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:39:58,254:INFO:Initializing load_model()
2023-10-12 19:39:58,255:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:39:58,263:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:39:58,263:INFO:Initializing load_model()
2023-10-12 19:39:58,263:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:39:58,269:INFO:Initializing load_model()
2023-10-12 19:39:58,269:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:39:58,272:INFO:Initializing load_model()
2023-10-12 19:39:58,272:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:01,520:INFO:Initializing load_model()
2023-10-12 19:40:01,520:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:01,523:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:40:01,523:INFO:Initializing load_model()
2023-10-12 19:40:01,523:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:01,531:INFO:Initializing load_model()
2023-10-12 19:40:01,531:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:01,535:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:40:01,536:INFO:Initializing load_model()
2023-10-12 19:40:01,536:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:01,653:INFO:Initializing load_model()
2023-10-12 19:40:01,653:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:01,655:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:40:01,655:INFO:Initializing load_model()
2023-10-12 19:40:01,655:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:01,657:INFO:Initializing load_model()
2023-10-12 19:40:01,657:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:01,659:INFO:Initializing load_model()
2023-10-12 19:40:01,659:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:04,236:INFO:Initializing load_model()
2023-10-12 19:40:04,236:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:04,238:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:40:04,238:INFO:Initializing load_model()
2023-10-12 19:40:04,238:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:04,239:INFO:Initializing load_model()
2023-10-12 19:40:04,239:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:04,241:INFO:Initializing load_model()
2023-10-12 19:40:04,241:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:04,724:INFO:Initializing load_model()
2023-10-12 19:40:04,724:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:04,726:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:40:04,726:INFO:Initializing load_model()
2023-10-12 19:40:04,726:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:04,728:INFO:Initializing load_model()
2023-10-12 19:40:04,728:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:04,729:INFO:Initializing load_model()
2023-10-12 19:40:04,729:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:38,490:INFO:Initializing load_model()
2023-10-12 19:40:38,491:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:38,495:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:40:38,495:INFO:Initializing load_model()
2023-10-12 19:40:38,495:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:38,498:INFO:Initializing load_model()
2023-10-12 19:40:38,498:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:38,499:INFO:Initializing load_model()
2023-10-12 19:40:38,500:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:40,257:INFO:Initializing load_model()
2023-10-12 19:40:40,257:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:40,258:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:40:40,258:INFO:Initializing load_model()
2023-10-12 19:40:40,258:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:40,259:INFO:Initializing load_model()
2023-10-12 19:40:40,259:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:40,261:INFO:Initializing load_model()
2023-10-12 19:40:40,261:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:40,417:INFO:Initializing load_model()
2023-10-12 19:40:40,417:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:40,418:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:40:40,418:INFO:Initializing load_model()
2023-10-12 19:40:40,418:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:40,419:INFO:Initializing load_model()
2023-10-12 19:40:40,419:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:40:40,421:INFO:Initializing load_model()
2023-10-12 19:40:40,421:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:25,918:INFO:Initializing load_model()
2023-10-12 19:42:25,919:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:25,924:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:42:25,925:INFO:Initializing load_model()
2023-10-12 19:42:25,925:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:25,929:INFO:Initializing load_model()
2023-10-12 19:42:25,929:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:25,932:INFO:Initializing load_model()
2023-10-12 19:42:25,932:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:39,438:INFO:Initializing load_model()
2023-10-12 19:42:39,439:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:39,446:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:42:39,447:INFO:Initializing load_model()
2023-10-12 19:42:39,447:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:39,450:INFO:Initializing load_model()
2023-10-12 19:42:39,450:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:39,452:INFO:Initializing load_model()
2023-10-12 19:42:39,452:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:40,380:INFO:Initializing load_model()
2023-10-12 19:42:40,380:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:40,381:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:42:40,381:INFO:Initializing load_model()
2023-10-12 19:42:40,381:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:40,382:INFO:Initializing load_model()
2023-10-12 19:42:40,382:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:42:40,384:INFO:Initializing load_model()
2023-10-12 19:42:40,384:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:41,754:INFO:Initializing load_model()
2023-10-12 19:50:41,755:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:41,761:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:50:41,761:INFO:Initializing load_model()
2023-10-12 19:50:41,761:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:41,766:INFO:Initializing load_model()
2023-10-12 19:50:41,766:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:41,768:INFO:Initializing load_model()
2023-10-12 19:50:41,768:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:52,088:INFO:Initializing load_model()
2023-10-12 19:50:52,089:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:52,094:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:50:52,095:INFO:Initializing load_model()
2023-10-12 19:50:52,095:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:52,104:INFO:Initializing load_model()
2023-10-12 19:50:52,104:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:52,113:INFO:Initializing load_model()
2023-10-12 19:50:52,113:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:52,345:INFO:Initializing load_model()
2023-10-12 19:50:52,345:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:52,347:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:50:52,347:INFO:Initializing load_model()
2023-10-12 19:50:52,347:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:52,349:INFO:Initializing load_model()
2023-10-12 19:50:52,349:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:50:52,352:INFO:Initializing load_model()
2023-10-12 19:50:52,352:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:17,616:INFO:Initializing load_model()
2023-10-12 19:51:17,616:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:17,619:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:51:17,619:INFO:Initializing load_model()
2023-10-12 19:51:17,619:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:17,625:INFO:Initializing load_model()
2023-10-12 19:51:17,625:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:17,627:INFO:Initializing load_model()
2023-10-12 19:51:17,627:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:20,110:INFO:Initializing load_model()
2023-10-12 19:51:20,110:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:20,111:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:51:20,111:INFO:Initializing load_model()
2023-10-12 19:51:20,111:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:20,113:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:51:20,114:INFO:Initializing load_model()
2023-10-12 19:51:20,114:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:20,116:INFO:Initializing load_model()
2023-10-12 19:51:20,116:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:20,176:INFO:Initializing load_model()
2023-10-12 19:51:20,176:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:20,177:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:51:20,177:INFO:Initializing load_model()
2023-10-12 19:51:20,177:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:20,178:INFO:Initializing load_model()
2023-10-12 19:51:20,178:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:51:20,180:INFO:Initializing load_model()
2023-10-12 19:51:20,180:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:09,146:INFO:Initializing load_model()
2023-10-12 19:52:09,146:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:09,149:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:52:09,149:INFO:Initializing load_model()
2023-10-12 19:52:09,149:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:09,155:INFO:Initializing load_model()
2023-10-12 19:52:09,155:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:09,158:INFO:Initializing load_model()
2023-10-12 19:52:09,158:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:12,688:INFO:Initializing load_model()
2023-10-12 19:52:12,688:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:12,690:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:52:12,690:INFO:Initializing load_model()
2023-10-12 19:52:12,690:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:12,691:INFO:Initializing load_model()
2023-10-12 19:52:12,691:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:12,693:INFO:Initializing load_model()
2023-10-12 19:52:12,693:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:12,753:INFO:Initializing load_model()
2023-10-12 19:52:12,753:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:12,755:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:52:12,755:INFO:Initializing load_model()
2023-10-12 19:52:12,755:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:12,757:INFO:Initializing load_model()
2023-10-12 19:52:12,757:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:52:12,759:INFO:Initializing load_model()
2023-10-12 19:52:12,759:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:05,978:INFO:Initializing load_model()
2023-10-12 19:56:05,979:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:05,988:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:56:05,988:INFO:Initializing load_model()
2023-10-12 19:56:05,988:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:05,996:INFO:Initializing load_model()
2023-10-12 19:56:05,996:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:05,999:INFO:Initializing load_model()
2023-10-12 19:56:05,999:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:31,601:INFO:Initializing load_model()
2023-10-12 19:56:31,601:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:31,604:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:56:31,605:INFO:Initializing load_model()
2023-10-12 19:56:31,605:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:31,607:INFO:Initializing load_model()
2023-10-12 19:56:31,607:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:31,609:INFO:Initializing load_model()
2023-10-12 19:56:31,609:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:32,106:INFO:Initializing load_model()
2023-10-12 19:56:32,106:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:32,107:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:56:32,107:INFO:Initializing load_model()
2023-10-12 19:56:32,107:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:32,112:INFO:Initializing load_model()
2023-10-12 19:56:32,112:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:32,113:INFO:Initializing load_model()
2023-10-12 19:56:32,113:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:39,643:INFO:Initializing load_model()
2023-10-12 19:56:39,643:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:39,645:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 19:56:39,645:INFO:Initializing load_model()
2023-10-12 19:56:39,645:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:39,646:INFO:Initializing load_model()
2023-10-12 19:56:39,646:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 19:56:39,648:INFO:Initializing load_model()
2023-10-12 19:56:39,648:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:24,466:INFO:Initializing load_model()
2023-10-12 20:00:24,467:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:24,480:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:00:24,481:INFO:Initializing load_model()
2023-10-12 20:00:24,481:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:24,488:INFO:Initializing load_model()
2023-10-12 20:00:24,488:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:24,491:INFO:Initializing load_model()
2023-10-12 20:00:24,491:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:36,483:INFO:Initializing load_model()
2023-10-12 20:00:36,484:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:36,487:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:00:36,488:INFO:Initializing load_model()
2023-10-12 20:00:36,488:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:36,491:INFO:Initializing load_model()
2023-10-12 20:00:36,491:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:36,496:INFO:Initializing load_model()
2023-10-12 20:00:36,496:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:36,710:INFO:Initializing load_model()
2023-10-12 20:00:36,710:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:36,712:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:00:36,712:INFO:Initializing load_model()
2023-10-12 20:00:36,712:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:36,714:INFO:Initializing load_model()
2023-10-12 20:00:36,714:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:00:36,715:INFO:Initializing load_model()
2023-10-12 20:00:36,715:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:05:56,837:INFO:Initializing load_model()
2023-10-12 20:05:56,838:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:05:56,873:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:05:56,874:INFO:Initializing load_model()
2023-10-12 20:05:56,874:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:05:56,885:INFO:Initializing load_model()
2023-10-12 20:05:56,885:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:05:56,887:INFO:Initializing load_model()
2023-10-12 20:05:56,887:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:03,425:INFO:Initializing load_model()
2023-10-12 20:06:03,427:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:03,443:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:06:03,443:INFO:Initializing load_model()
2023-10-12 20:06:03,443:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:03,446:INFO:Initializing load_model()
2023-10-12 20:06:03,446:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:03,448:INFO:Initializing load_model()
2023-10-12 20:06:03,448:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:03,595:INFO:Initializing load_model()
2023-10-12 20:06:03,595:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:03,596:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:06:03,596:INFO:Initializing load_model()
2023-10-12 20:06:03,596:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:03,598:INFO:Initializing load_model()
2023-10-12 20:06:03,598:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:03,601:INFO:Initializing load_model()
2023-10-12 20:06:03,601:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:05,920:INFO:Initializing load_model()
2023-10-12 20:06:05,920:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:05,922:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:06:05,922:INFO:Initializing load_model()
2023-10-12 20:06:05,922:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:05,935:INFO:Initializing load_model()
2023-10-12 20:06:05,935:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:05,937:INFO:Initializing load_model()
2023-10-12 20:06:05,937:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:58,986:INFO:Initializing load_model()
2023-10-12 20:06:58,986:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:58,989:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:06:58,989:INFO:Initializing load_model()
2023-10-12 20:06:58,989:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:58,992:INFO:Initializing load_model()
2023-10-12 20:06:58,992:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:06:58,993:INFO:Initializing load_model()
2023-10-12 20:06:58,993:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:45,658:INFO:Initializing load_model()
2023-10-12 20:07:45,658:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:45,662:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:07:45,662:INFO:Initializing load_model()
2023-10-12 20:07:45,662:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:45,665:INFO:Initializing load_model()
2023-10-12 20:07:45,665:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:45,668:INFO:Initializing load_model()
2023-10-12 20:07:45,668:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:49,966:INFO:Initializing load_model()
2023-10-12 20:07:49,966:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:49,967:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:07:49,967:INFO:Initializing load_model()
2023-10-12 20:07:49,968:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:49,970:INFO:Initializing load_model()
2023-10-12 20:07:49,970:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:49,971:INFO:Initializing load_model()
2023-10-12 20:07:49,971:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:50,065:INFO:Initializing load_model()
2023-10-12 20:07:50,065:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:50,066:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:07:50,066:INFO:Initializing load_model()
2023-10-12 20:07:50,066:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:50,068:INFO:Initializing load_model()
2023-10-12 20:07:50,068:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:07:50,069:INFO:Initializing load_model()
2023-10-12 20:07:50,069:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:21,538:INFO:Initializing load_model()
2023-10-12 20:12:21,539:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:21,545:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:12:21,546:INFO:Initializing load_model()
2023-10-12 20:12:21,546:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:21,551:INFO:Initializing load_model()
2023-10-12 20:12:21,551:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:21,555:INFO:Initializing load_model()
2023-10-12 20:12:21,555:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:34,135:INFO:Initializing load_model()
2023-10-12 20:12:34,135:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:34,139:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:12:34,139:INFO:Initializing load_model()
2023-10-12 20:12:34,139:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:34,145:INFO:Initializing load_model()
2023-10-12 20:12:34,145:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:34,151:INFO:Initializing load_model()
2023-10-12 20:12:34,151:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:34,153:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:12:34,240:INFO:Initializing load_model()
2023-10-12 20:12:34,240:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:34,241:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:12:34,241:INFO:Initializing load_model()
2023-10-12 20:12:34,241:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:34,243:INFO:Initializing load_model()
2023-10-12 20:12:34,243:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:34,244:INFO:Initializing load_model()
2023-10-12 20:12:34,244:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:38,736:INFO:Initializing load_model()
2023-10-12 20:12:38,736:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:38,739:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:12:38,739:INFO:Initializing load_model()
2023-10-12 20:12:38,739:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:38,741:INFO:Initializing load_model()
2023-10-12 20:12:38,741:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:12:38,742:INFO:Initializing load_model()
2023-10-12 20:12:38,742:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:11,088:INFO:Initializing load_model()
2023-10-12 20:14:11,088:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:11,093:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:14:11,093:INFO:Initializing load_model()
2023-10-12 20:14:11,093:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:11,096:INFO:Initializing load_model()
2023-10-12 20:14:11,096:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:11,097:INFO:Initializing load_model()
2023-10-12 20:14:11,097:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:24,377:INFO:Initializing load_model()
2023-10-12 20:14:24,377:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:24,382:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:14:24,383:INFO:Initializing load_model()
2023-10-12 20:14:24,383:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:24,391:INFO:Initializing load_model()
2023-10-12 20:14:24,391:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:24,394:INFO:Initializing load_model()
2023-10-12 20:14:24,394:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:24,531:INFO:Initializing load_model()
2023-10-12 20:14:24,531:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:24,532:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:14:24,532:INFO:Initializing load_model()
2023-10-12 20:14:24,532:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:24,533:INFO:Initializing load_model()
2023-10-12 20:14:24,533:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:14:24,535:INFO:Initializing load_model()
2023-10-12 20:14:24,535:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:21,313:INFO:Initializing load_model()
2023-10-12 20:15:21,314:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:21,317:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:15:21,317:INFO:Initializing load_model()
2023-10-12 20:15:21,317:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:21,319:INFO:Initializing load_model()
2023-10-12 20:15:21,320:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:21,322:INFO:Initializing load_model()
2023-10-12 20:15:21,322:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:34,281:INFO:Initializing load_model()
2023-10-12 20:15:34,282:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:34,285:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:15:34,285:INFO:Initializing load_model()
2023-10-12 20:15:34,285:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:34,288:INFO:Initializing load_model()
2023-10-12 20:15:34,288:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:34,296:INFO:Initializing load_model()
2023-10-12 20:15:34,296:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:34,422:INFO:Initializing load_model()
2023-10-12 20:15:34,422:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:34,425:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:15:34,425:INFO:Initializing load_model()
2023-10-12 20:15:34,425:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:34,427:INFO:Initializing load_model()
2023-10-12 20:15:34,427:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:34,429:INFO:Initializing load_model()
2023-10-12 20:15:34,429:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:41,555:INFO:Initializing load_model()
2023-10-12 20:15:41,555:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:41,556:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:15:41,556:INFO:Initializing load_model()
2023-10-12 20:15:41,556:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:41,558:INFO:Initializing load_model()
2023-10-12 20:15:41,558:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:41,559:INFO:Initializing load_model()
2023-10-12 20:15:41,559:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:15:41,597:INFO:Initializing predict_model()
2023-10-12 20:15:41,597:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1785ffb80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Diameter', 'C', 'Si', 'Mn', 'P',
                                             'S', 'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'V', 'W', 'Ti', 'B', 'N',
                                             'Co', 'Nb', 'AS', 'Mg', 'Zn', 'Fe',
                                             'Ta', 'Sb', 'Ca', 'Ce', 'Se', 'Pb',
                                             'Zr', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2871ad2d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 20:15:41,597:INFO:Checking exceptions
2023-10-12 20:15:41,597:INFO:Preloading libraries
2023-10-12 20:15:41,598:INFO:Set up data.
2023-10-12 20:15:41,607:INFO:Set up index.
2023-10-12 20:18:17,357:INFO:Initializing load_model()
2023-10-12 20:18:17,357:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:18:17,363:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:18:17,363:INFO:Initializing load_model()
2023-10-12 20:18:17,363:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:18:17,371:INFO:Initializing load_model()
2023-10-12 20:18:17,372:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:18:17,374:INFO:Initializing load_model()
2023-10-12 20:18:17,374:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:18:23,716:INFO:Initializing load_model()
2023-10-12 20:18:23,717:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:18:23,720:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:18:23,720:INFO:Initializing load_model()
2023-10-12 20:18:23,720:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:18:23,730:INFO:Initializing load_model()
2023-10-12 20:18:23,730:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:18:23,732:INFO:Initializing load_model()
2023-10-12 20:18:23,732:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:18:23,748:INFO:Initializing predict_model()
2023-10-12 20:18:23,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2871ad900>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Diameter', 'C', 'Si', 'Mn', 'P',
                                             'S', 'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'V', 'W', 'Ti', 'B', 'N',
                                             'Co', 'Nb', 'AS', 'Mg', 'Zn', 'Fe',
                                             'Ta', 'Sb', 'Ca', 'Ce', 'Se', 'Pb',
                                             'Zr', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x178676380>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28707bac0>)
2023-10-12 20:18:23,748:INFO:Checking exceptions
2023-10-12 20:18:23,748:INFO:Preloading libraries
2023-10-12 20:18:23,749:INFO:Set up data.
2023-10-12 20:18:23,754:INFO:Set up index.
2023-10-12 20:19:32,465:INFO:Initializing load_model()
2023-10-12 20:19:32,465:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:32,468:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:19:32,469:INFO:Initializing load_model()
2023-10-12 20:19:32,469:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:32,475:INFO:Initializing load_model()
2023-10-12 20:19:32,475:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:32,478:INFO:Initializing load_model()
2023-10-12 20:19:32,478:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:46,763:INFO:Initializing load_model()
2023-10-12 20:19:46,764:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:46,768:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:19:46,768:INFO:Initializing load_model()
2023-10-12 20:19:46,768:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:46,771:INFO:Initializing load_model()
2023-10-12 20:19:46,771:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:46,773:INFO:Initializing load_model()
2023-10-12 20:19:46,773:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:46,906:INFO:Initializing load_model()
2023-10-12 20:19:46,906:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:46,907:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:19:46,907:INFO:Initializing load_model()
2023-10-12 20:19:46,907:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:46,908:INFO:Initializing load_model()
2023-10-12 20:19:46,908:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:46,910:INFO:Initializing load_model()
2023-10-12 20:19:46,910:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:49,993:INFO:Initializing load_model()
2023-10-12 20:19:49,994:INFO:load_model(model_name=model/TS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:49,995:WARNING:/Users/siina/anaconda3/envs/pj02/lib/python3.10/site-packages/pycaret/internal/pipeline.py:139: UserWarning:

Version mismatch:
current: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.1.0', 'IPython': '8.16.1', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.2', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.8.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.17.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.7.2', 'pycaret': '3.1.0', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.66.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.2', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.31.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.0.3'}, 'python': {'version': '3.10.12', 'machine': 'x86_64'}}


2023-10-12 20:19:49,995:INFO:Initializing load_model()
2023-10-12 20:19:49,995:INFO:load_model(model_name=model/YS_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:49,997:INFO:Initializing load_model()
2023-10-12 20:19:49,997:INFO:load_model(model_name=model/EL_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:49,998:INFO:Initializing load_model()
2023-10-12 20:19:49,998:INFO:load_model(model_name=model/RA_pipeline, platform=None, authentication=None, verbose=True)
2023-10-12 20:19:50,009:INFO:Initializing predict_model()
2023-10-12 20:19:50,009:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1786195a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Diameter', 'C', 'Si', 'Mn', 'P',
                                             'S', 'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'V', 'W', 'Ti', 'B', 'N',
                                             'Co', 'Nb', 'AS', 'Mg', 'Zn', 'Fe',
                                             'Ta', 'Sb', 'Ca', 'Ce', 'Se', 'Pb',
                                             'Zr', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x178677880>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28755e320>)
2023-10-12 20:19:50,009:INFO:Checking exceptions
2023-10-12 20:19:50,009:INFO:Preloading libraries
2023-10-12 20:19:50,010:INFO:Set up data.
2023-10-12 20:19:50,014:INFO:Set up index.
2023-10-12 20:20:54,800:INFO:Initializing load_model()
2023-10-12 20:20:54,801:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:20:54,804:INFO:Initializing load_model()
2023-10-12 20:20:54,804:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:20:54,806:INFO:Initializing load_model()
2023-10-12 20:20:54,806:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:20:54,809:INFO:Initializing load_model()
2023-10-12 20:20:54,809:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:20:58,962:INFO:Initializing load_model()
2023-10-12 20:20:58,962:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:20:58,963:INFO:Initializing load_model()
2023-10-12 20:20:58,963:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:20:58,964:INFO:Initializing load_model()
2023-10-12 20:20:58,964:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:20:58,966:INFO:Initializing load_model()
2023-10-12 20:20:58,966:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:20:58,977:INFO:Initializing predict_model()
2023-10-12 20:20:58,977:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178675b70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1785d0eb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1785cbd00>)
2023-10-12 20:20:58,977:INFO:Checking exceptions
2023-10-12 20:20:58,977:INFO:Preloading libraries
2023-10-12 20:20:58,978:INFO:Set up data.
2023-10-12 20:20:58,982:INFO:Set up index.
2023-10-12 20:20:59,079:INFO:Initializing predict_model()
2023-10-12 20:20:59,079:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a470>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe3010>)
2023-10-12 20:20:59,079:INFO:Checking exceptions
2023-10-12 20:20:59,079:INFO:Preloading libraries
2023-10-12 20:20:59,079:INFO:Set up data.
2023-10-12 20:20:59,083:INFO:Set up index.
2023-10-12 20:20:59,148:INFO:Initializing predict_model()
2023-10-12 20:20:59,148:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a470>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe3010>)
2023-10-12 20:20:59,148:INFO:Checking exceptions
2023-10-12 20:20:59,148:INFO:Preloading libraries
2023-10-12 20:20:59,148:INFO:Set up data.
2023-10-12 20:20:59,152:INFO:Set up index.
2023-10-12 20:20:59,208:INFO:Initializing predict_model()
2023-10-12 20:20:59,208:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88ff70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe3010>)
2023-10-12 20:20:59,208:INFO:Checking exceptions
2023-10-12 20:20:59,208:INFO:Preloading libraries
2023-10-12 20:20:59,208:INFO:Set up data.
2023-10-12 20:20:59,212:INFO:Set up index.
2023-10-12 20:23:19,181:INFO:Initializing load_model()
2023-10-12 20:23:19,181:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:19,190:INFO:Initializing load_model()
2023-10-12 20:23:19,190:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:19,197:INFO:Initializing load_model()
2023-10-12 20:23:19,197:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:19,200:INFO:Initializing load_model()
2023-10-12 20:23:19,200:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:22,551:INFO:Initializing load_model()
2023-10-12 20:23:22,551:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:22,552:INFO:Initializing load_model()
2023-10-12 20:23:22,552:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:22,555:INFO:Initializing load_model()
2023-10-12 20:23:22,555:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:22,556:INFO:Initializing load_model()
2023-10-12 20:23:22,556:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:22,572:INFO:Initializing predict_model()
2023-10-12 20:23:22,572:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178618af0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x178618a90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe3010>)
2023-10-12 20:23:22,572:INFO:Checking exceptions
2023-10-12 20:23:22,572:INFO:Preloading libraries
2023-10-12 20:23:22,572:INFO:Set up data.
2023-10-12 20:23:22,576:INFO:Set up index.
2023-10-12 20:23:22,638:INFO:Initializing predict_model()
2023-10-12 20:23:22,638:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88fcd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe3010>)
2023-10-12 20:23:22,638:INFO:Checking exceptions
2023-10-12 20:23:22,638:INFO:Preloading libraries
2023-10-12 20:23:22,638:INFO:Set up data.
2023-10-12 20:23:22,642:INFO:Set up index.
2023-10-12 20:23:22,702:INFO:Initializing predict_model()
2023-10-12 20:23:22,702:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88fcd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe3010>)
2023-10-12 20:23:22,702:INFO:Checking exceptions
2023-10-12 20:23:22,702:INFO:Preloading libraries
2023-10-12 20:23:22,702:INFO:Set up data.
2023-10-12 20:23:22,706:INFO:Set up index.
2023-10-12 20:23:22,763:INFO:Initializing predict_model()
2023-10-12 20:23:22,763:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88fcd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe3010>)
2023-10-12 20:23:22,764:INFO:Checking exceptions
2023-10-12 20:23:22,764:INFO:Preloading libraries
2023-10-12 20:23:22,764:INFO:Set up data.
2023-10-12 20:23:22,768:INFO:Set up index.
2023-10-12 20:23:40,105:INFO:Initializing load_model()
2023-10-12 20:23:40,105:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:40,109:INFO:Initializing load_model()
2023-10-12 20:23:40,109:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:40,111:INFO:Initializing load_model()
2023-10-12 20:23:40,111:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:40,113:INFO:Initializing load_model()
2023-10-12 20:23:40,113:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:40,779:INFO:Initializing load_model()
2023-10-12 20:23:40,779:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:40,780:INFO:Initializing load_model()
2023-10-12 20:23:40,781:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:40,782:INFO:Initializing load_model()
2023-10-12 20:23:40,782:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:40,783:INFO:Initializing load_model()
2023-10-12 20:23:40,783:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:44,865:INFO:Initializing load_model()
2023-10-12 20:23:44,865:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:44,866:INFO:Initializing load_model()
2023-10-12 20:23:44,866:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:44,867:INFO:Initializing load_model()
2023-10-12 20:23:44,867:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:44,869:INFO:Initializing load_model()
2023-10-12 20:23:44,869:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:23:44,880:INFO:Initializing predict_model()
2023-10-12 20:23:44,880:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178675d20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x14fa6fbe0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28707bac0>)
2023-10-12 20:23:44,880:INFO:Checking exceptions
2023-10-12 20:23:44,880:INFO:Preloading libraries
2023-10-12 20:23:44,880:INFO:Set up data.
2023-10-12 20:23:44,884:INFO:Set up index.
2023-10-12 20:23:44,941:INFO:Initializing predict_model()
2023-10-12 20:23:44,941:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 20:23:44,941:INFO:Checking exceptions
2023-10-12 20:23:44,941:INFO:Preloading libraries
2023-10-12 20:23:44,942:INFO:Set up data.
2023-10-12 20:23:44,946:INFO:Set up index.
2023-10-12 20:23:45,002:INFO:Initializing predict_model()
2023-10-12 20:23:45,002:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 20:23:45,002:INFO:Checking exceptions
2023-10-12 20:23:45,002:INFO:Preloading libraries
2023-10-12 20:23:45,002:INFO:Set up data.
2023-10-12 20:23:45,006:INFO:Set up index.
2023-10-12 20:23:45,062:INFO:Initializing predict_model()
2023-10-12 20:23:45,062:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 20:23:45,062:INFO:Checking exceptions
2023-10-12 20:23:45,062:INFO:Preloading libraries
2023-10-12 20:23:45,062:INFO:Set up data.
2023-10-12 20:23:45,066:INFO:Set up index.
2023-10-12 20:24:11,921:INFO:Initializing load_model()
2023-10-12 20:24:11,921:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:11,924:INFO:Initializing load_model()
2023-10-12 20:24:11,924:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:11,928:INFO:Initializing load_model()
2023-10-12 20:24:11,928:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:11,931:INFO:Initializing load_model()
2023-10-12 20:24:11,931:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:11,944:INFO:Initializing predict_model()
2023-10-12 20:24:11,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2871ada20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2870b6a70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fa57d90>)
2023-10-12 20:24:11,944:INFO:Checking exceptions
2023-10-12 20:24:11,944:INFO:Preloading libraries
2023-10-12 20:24:11,944:INFO:Set up data.
2023-10-12 20:24:11,948:INFO:Set up index.
2023-10-12 20:24:12,047:INFO:Initializing predict_model()
2023-10-12 20:24:12,047:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2870677c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fa57d90>)
2023-10-12 20:24:12,047:INFO:Checking exceptions
2023-10-12 20:24:12,047:INFO:Preloading libraries
2023-10-12 20:24:12,047:INFO:Set up data.
2023-10-12 20:24:12,051:INFO:Set up index.
2023-10-12 20:24:12,109:INFO:Initializing predict_model()
2023-10-12 20:24:12,109:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fa57d90>)
2023-10-12 20:24:12,109:INFO:Checking exceptions
2023-10-12 20:24:12,109:INFO:Preloading libraries
2023-10-12 20:24:12,110:INFO:Set up data.
2023-10-12 20:24:12,113:INFO:Set up index.
2023-10-12 20:24:12,167:INFO:Initializing predict_model()
2023-10-12 20:24:12,167:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fa57d90>)
2023-10-12 20:24:12,167:INFO:Checking exceptions
2023-10-12 20:24:12,167:INFO:Preloading libraries
2023-10-12 20:24:12,167:INFO:Set up data.
2023-10-12 20:24:12,171:INFO:Set up index.
2023-10-12 20:24:15,000:INFO:Initializing load_model()
2023-10-12 20:24:15,000:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:15,001:INFO:Initializing load_model()
2023-10-12 20:24:15,001:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:15,003:INFO:Initializing load_model()
2023-10-12 20:24:15,003:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:15,005:INFO:Initializing load_model()
2023-10-12 20:24:15,005:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:17,195:INFO:Initializing load_model()
2023-10-12 20:24:17,195:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:17,196:INFO:Initializing load_model()
2023-10-12 20:24:17,196:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:17,197:INFO:Initializing load_model()
2023-10-12 20:24:17,197:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:17,198:INFO:Initializing load_model()
2023-10-12 20:24:17,198:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:17,211:INFO:Initializing predict_model()
2023-10-12 20:24:17,211:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2871ace50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x178675b70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa06950>)
2023-10-12 20:24:17,211:INFO:Checking exceptions
2023-10-12 20:24:17,211:INFO:Preloading libraries
2023-10-12 20:24:17,211:INFO:Set up data.
2023-10-12 20:24:17,215:INFO:Set up index.
2023-10-12 20:24:17,271:INFO:Initializing predict_model()
2023-10-12 20:24:17,271:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14fa27370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa06950>)
2023-10-12 20:24:17,271:INFO:Checking exceptions
2023-10-12 20:24:17,271:INFO:Preloading libraries
2023-10-12 20:24:17,271:INFO:Set up data.
2023-10-12 20:24:17,275:INFO:Set up index.
2023-10-12 20:24:17,331:INFO:Initializing predict_model()
2023-10-12 20:24:17,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14fa27370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa06950>)
2023-10-12 20:24:17,331:INFO:Checking exceptions
2023-10-12 20:24:17,331:INFO:Preloading libraries
2023-10-12 20:24:17,331:INFO:Set up data.
2023-10-12 20:24:17,335:INFO:Set up index.
2023-10-12 20:24:17,392:INFO:Initializing predict_model()
2023-10-12 20:24:17,392:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14fa27370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa06950>)
2023-10-12 20:24:17,392:INFO:Checking exceptions
2023-10-12 20:24:17,392:INFO:Preloading libraries
2023-10-12 20:24:17,392:INFO:Set up data.
2023-10-12 20:24:17,396:INFO:Set up index.
2023-10-12 20:24:23,076:INFO:Initializing load_model()
2023-10-12 20:24:23,077:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:23,078:INFO:Initializing load_model()
2023-10-12 20:24:23,079:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:23,080:INFO:Initializing load_model()
2023-10-12 20:24:23,080:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:23,082:INFO:Initializing load_model()
2023-10-12 20:24:23,082:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:33,145:INFO:Initializing load_model()
2023-10-12 20:24:33,146:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:33,149:INFO:Initializing load_model()
2023-10-12 20:24:33,149:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:33,154:INFO:Initializing load_model()
2023-10-12 20:24:33,154:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:33,157:INFO:Initializing load_model()
2023-10-12 20:24:33,157:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:24:33,172:INFO:Initializing predict_model()
2023-10-12 20:24:33,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1786184c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2870b5810>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fa57d90>)
2023-10-12 20:24:33,172:INFO:Checking exceptions
2023-10-12 20:24:33,172:INFO:Preloading libraries
2023-10-12 20:24:33,172:INFO:Set up data.
2023-10-12 20:24:33,178:INFO:Set up index.
2023-10-12 20:24:33,270:INFO:Initializing predict_model()
2023-10-12 20:24:33,270:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 20:24:33,270:INFO:Checking exceptions
2023-10-12 20:24:33,270:INFO:Preloading libraries
2023-10-12 20:24:33,270:INFO:Set up data.
2023-10-12 20:24:33,274:INFO:Set up index.
2023-10-12 20:24:33,331:INFO:Initializing predict_model()
2023-10-12 20:24:33,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 20:24:33,331:INFO:Checking exceptions
2023-10-12 20:24:33,331:INFO:Preloading libraries
2023-10-12 20:24:33,331:INFO:Set up data.
2023-10-12 20:24:33,335:INFO:Set up index.
2023-10-12 20:24:33,391:INFO:Initializing predict_model()
2023-10-12 20:24:33,391:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 20:24:33,391:INFO:Checking exceptions
2023-10-12 20:24:33,391:INFO:Preloading libraries
2023-10-12 20:24:33,391:INFO:Set up data.
2023-10-12 20:24:33,395:INFO:Set up index.
2023-10-12 20:26:52,723:INFO:Initializing load_model()
2023-10-12 20:26:52,724:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:26:52,727:INFO:Initializing load_model()
2023-10-12 20:26:52,727:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:26:52,730:INFO:Initializing load_model()
2023-10-12 20:26:52,730:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:26:52,732:INFO:Initializing load_model()
2023-10-12 20:26:52,732:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:10,460:INFO:Initializing load_model()
2023-10-12 20:27:10,460:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:10,468:INFO:Initializing load_model()
2023-10-12 20:27:10,468:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:10,474:INFO:Initializing load_model()
2023-10-12 20:27:10,474:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:10,476:INFO:Initializing load_model()
2023-10-12 20:27:10,476:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:21,377:INFO:Initializing load_model()
2023-10-12 20:27:21,377:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:21,380:INFO:Initializing load_model()
2023-10-12 20:27:21,380:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:21,389:INFO:Initializing load_model()
2023-10-12 20:27:21,389:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:21,392:INFO:Initializing load_model()
2023-10-12 20:27:21,392:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:21,527:INFO:Initializing load_model()
2023-10-12 20:27:21,527:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:21,529:INFO:Initializing load_model()
2023-10-12 20:27:21,529:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:21,531:INFO:Initializing load_model()
2023-10-12 20:27:21,531:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:21,532:INFO:Initializing load_model()
2023-10-12 20:27:21,532:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:23,656:INFO:Initializing load_model()
2023-10-12 20:27:23,656:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:23,657:INFO:Initializing load_model()
2023-10-12 20:27:23,657:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:23,658:INFO:Initializing load_model()
2023-10-12 20:27:23,658:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:23,659:INFO:Initializing load_model()
2023-10-12 20:27:23,659:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:26,162:INFO:Initializing load_model()
2023-10-12 20:27:26,163:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:26,164:INFO:Initializing load_model()
2023-10-12 20:27:26,164:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:26,165:INFO:Initializing load_model()
2023-10-12 20:27:26,165:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:26,167:INFO:Initializing load_model()
2023-10-12 20:27:26,167:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:27:26,179:INFO:Initializing predict_model()
2023-10-12 20:27:26,179:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2870b6230>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2870e6770>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4b880>)
2023-10-12 20:27:26,179:INFO:Checking exceptions
2023-10-12 20:27:26,179:INFO:Preloading libraries
2023-10-12 20:27:26,179:INFO:Set up data.
2023-10-12 20:27:26,184:INFO:Set up index.
2023-10-12 20:27:26,255:INFO:Initializing predict_model()
2023-10-12 20:27:26,255:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a6e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fa57d00>)
2023-10-12 20:27:26,255:INFO:Checking exceptions
2023-10-12 20:27:26,255:INFO:Preloading libraries
2023-10-12 20:27:26,255:INFO:Set up data.
2023-10-12 20:27:26,259:INFO:Set up index.
2023-10-12 20:27:26,318:INFO:Initializing predict_model()
2023-10-12 20:27:26,318:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2871add50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fa57d00>)
2023-10-12 20:27:26,318:INFO:Checking exceptions
2023-10-12 20:27:26,318:INFO:Preloading libraries
2023-10-12 20:27:26,319:INFO:Set up data.
2023-10-12 20:27:26,323:INFO:Set up index.
2023-10-12 20:27:26,381:INFO:Initializing predict_model()
2023-10-12 20:27:26,381:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88cee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4ba30>)
2023-10-12 20:27:26,381:INFO:Checking exceptions
2023-10-12 20:27:26,382:INFO:Preloading libraries
2023-10-12 20:27:26,382:INFO:Set up data.
2023-10-12 20:27:26,386:INFO:Set up index.
2023-10-12 20:28:57,266:INFO:Initializing load_model()
2023-10-12 20:28:57,267:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:28:57,270:INFO:Initializing load_model()
2023-10-12 20:28:57,270:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:28:57,273:INFO:Initializing load_model()
2023-10-12 20:28:57,273:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:28:57,275:INFO:Initializing load_model()
2023-10-12 20:28:57,275:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:05,989:INFO:Initializing load_model()
2023-10-12 20:29:05,989:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:05,992:INFO:Initializing load_model()
2023-10-12 20:29:05,992:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:05,995:INFO:Initializing load_model()
2023-10-12 20:29:05,995:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:06,005:INFO:Initializing load_model()
2023-10-12 20:29:06,005:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:06,124:INFO:Initializing load_model()
2023-10-12 20:29:06,124:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:06,126:INFO:Initializing load_model()
2023-10-12 20:29:06,126:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:06,127:INFO:Initializing load_model()
2023-10-12 20:29:06,127:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:06,129:INFO:Initializing load_model()
2023-10-12 20:29:06,129:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:09,089:INFO:Initializing load_model()
2023-10-12 20:29:09,089:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:09,090:INFO:Initializing load_model()
2023-10-12 20:29:09,090:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:09,091:INFO:Initializing load_model()
2023-10-12 20:29:09,091:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:09,093:INFO:Initializing load_model()
2023-10-12 20:29:09,093:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:09,104:INFO:Initializing predict_model()
2023-10-12 20:29:09,104:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2870e5960>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1785d24a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28707b520>)
2023-10-12 20:29:09,104:INFO:Checking exceptions
2023-10-12 20:29:09,104:INFO:Preloading libraries
2023-10-12 20:29:09,104:INFO:Set up data.
2023-10-12 20:29:09,108:INFO:Set up index.
2023-10-12 20:29:09,167:INFO:Initializing predict_model()
2023-10-12 20:29:09,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88d930>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14d9dcee0>)
2023-10-12 20:29:09,168:INFO:Checking exceptions
2023-10-12 20:29:09,168:INFO:Preloading libraries
2023-10-12 20:29:09,168:INFO:Set up data.
2023-10-12 20:29:09,172:INFO:Set up index.
2023-10-12 20:29:09,230:INFO:Initializing predict_model()
2023-10-12 20:29:09,231:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88d930>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14d9dcee0>)
2023-10-12 20:29:09,231:INFO:Checking exceptions
2023-10-12 20:29:09,231:INFO:Preloading libraries
2023-10-12 20:29:09,231:INFO:Set up data.
2023-10-12 20:29:09,235:INFO:Set up index.
2023-10-12 20:29:09,291:INFO:Initializing predict_model()
2023-10-12 20:29:09,292:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88d930>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14d9dcee0>)
2023-10-12 20:29:09,292:INFO:Checking exceptions
2023-10-12 20:29:09,292:INFO:Preloading libraries
2023-10-12 20:29:09,292:INFO:Set up data.
2023-10-12 20:29:09,296:INFO:Set up index.
2023-10-12 20:29:54,312:INFO:Initializing load_model()
2023-10-12 20:29:54,313:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:54,315:INFO:Initializing load_model()
2023-10-12 20:29:54,316:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:54,318:INFO:Initializing load_model()
2023-10-12 20:29:54,318:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:29:54,320:INFO:Initializing load_model()
2023-10-12 20:29:54,320:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:02,077:INFO:Initializing load_model()
2023-10-12 20:30:02,077:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:02,084:INFO:Initializing load_model()
2023-10-12 20:30:02,084:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:02,087:INFO:Initializing load_model()
2023-10-12 20:30:02,087:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:02,090:INFO:Initializing load_model()
2023-10-12 20:30:02,091:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:02,092:INFO:Initializing load_model()
2023-10-12 20:30:02,092:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:02,093:INFO:Initializing load_model()
2023-10-12 20:30:02,093:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:02,205:INFO:Initializing load_model()
2023-10-12 20:30:02,205:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:02,208:INFO:Initializing load_model()
2023-10-12 20:30:02,209:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:05,482:INFO:Initializing load_model()
2023-10-12 20:30:05,482:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:05,483:INFO:Initializing load_model()
2023-10-12 20:30:05,483:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:05,484:INFO:Initializing load_model()
2023-10-12 20:30:05,485:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:05,486:INFO:Initializing load_model()
2023-10-12 20:30:05,486:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:30:05,498:INFO:Initializing predict_model()
2023-10-12 20:30:05,499:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2870b4dc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x178677160>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4b490>)
2023-10-12 20:30:05,499:INFO:Checking exceptions
2023-10-12 20:30:05,499:INFO:Preloading libraries
2023-10-12 20:30:05,499:INFO:Set up data.
2023-10-12 20:30:05,503:INFO:Set up index.
2023-10-12 20:30:05,575:INFO:Initializing predict_model()
2023-10-12 20:30:05,576:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x287067d60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286424d30>)
2023-10-12 20:30:05,576:INFO:Checking exceptions
2023-10-12 20:30:05,576:INFO:Preloading libraries
2023-10-12 20:30:05,576:INFO:Set up data.
2023-10-12 20:30:05,580:INFO:Set up index.
2023-10-12 20:30:05,640:INFO:Initializing predict_model()
2023-10-12 20:30:05,640:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88fdc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286424d30>)
2023-10-12 20:30:05,640:INFO:Checking exceptions
2023-10-12 20:30:05,640:INFO:Preloading libraries
2023-10-12 20:30:05,640:INFO:Set up data.
2023-10-12 20:30:05,644:INFO:Set up index.
2023-10-12 20:30:05,704:INFO:Initializing predict_model()
2023-10-12 20:30:05,704:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f88fdc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286424d30>)
2023-10-12 20:30:05,704:INFO:Checking exceptions
2023-10-12 20:30:05,704:INFO:Preloading libraries
2023-10-12 20:30:05,704:INFO:Set up data.
2023-10-12 20:30:05,708:INFO:Set up index.
2023-10-12 20:32:48,809:INFO:Initializing load_model()
2023-10-12 20:32:48,809:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:48,817:INFO:Initializing load_model()
2023-10-12 20:32:48,817:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:48,821:INFO:Initializing load_model()
2023-10-12 20:32:48,821:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:48,824:INFO:Initializing load_model()
2023-10-12 20:32:48,824:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:57,252:INFO:Initializing load_model()
2023-10-12 20:32:57,253:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:57,263:INFO:Initializing load_model()
2023-10-12 20:32:57,263:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:57,267:INFO:Initializing load_model()
2023-10-12 20:32:57,267:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:57,269:INFO:Initializing load_model()
2023-10-12 20:32:57,269:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:57,425:INFO:Initializing load_model()
2023-10-12 20:32:57,425:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:57,427:INFO:Initializing load_model()
2023-10-12 20:32:57,427:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:57,429:INFO:Initializing load_model()
2023-10-12 20:32:57,429:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:32:57,431:INFO:Initializing load_model()
2023-10-12 20:32:57,431:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:01,547:INFO:Initializing load_model()
2023-10-12 20:33:01,547:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:01,549:INFO:Initializing load_model()
2023-10-12 20:33:01,549:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:01,550:INFO:Initializing load_model()
2023-10-12 20:33:01,550:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:01,551:INFO:Initializing load_model()
2023-10-12 20:33:01,552:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:01,584:INFO:Initializing predict_model()
2023-10-12 20:33:01,584:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2871af0d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2870b6770>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28707b640>)
2023-10-12 20:33:01,584:INFO:Checking exceptions
2023-10-12 20:33:01,584:INFO:Preloading libraries
2023-10-12 20:33:01,585:INFO:Set up data.
2023-10-12 20:33:01,591:INFO:Set up index.
2023-10-12 20:33:01,677:INFO:Initializing predict_model()
2023-10-12 20:33:01,677:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f1e2e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fe5bb50>)
2023-10-12 20:33:01,677:INFO:Checking exceptions
2023-10-12 20:33:01,677:INFO:Preloading libraries
2023-10-12 20:33:01,677:INFO:Set up data.
2023-10-12 20:33:01,681:INFO:Set up index.
2023-10-12 20:33:01,742:INFO:Initializing predict_model()
2023-10-12 20:33:01,742:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f1e2e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fe5bb50>)
2023-10-12 20:33:01,742:INFO:Checking exceptions
2023-10-12 20:33:01,742:INFO:Preloading libraries
2023-10-12 20:33:01,742:INFO:Set up data.
2023-10-12 20:33:01,746:INFO:Set up index.
2023-10-12 20:33:01,799:INFO:Initializing predict_model()
2023-10-12 20:33:01,799:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f1e2e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fe5bb50>)
2023-10-12 20:33:01,799:INFO:Checking exceptions
2023-10-12 20:33:01,799:INFO:Preloading libraries
2023-10-12 20:33:01,800:INFO:Set up data.
2023-10-12 20:33:01,803:INFO:Set up index.
2023-10-12 20:33:36,416:INFO:Initializing load_model()
2023-10-12 20:33:36,416:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:36,420:INFO:Initializing load_model()
2023-10-12 20:33:36,420:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:36,422:INFO:Initializing load_model()
2023-10-12 20:33:36,422:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:36,424:INFO:Initializing load_model()
2023-10-12 20:33:36,424:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:36,438:INFO:Initializing predict_model()
2023-10-12 20:33:36,438:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2871afa30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2871ae560>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe2ef0>)
2023-10-12 20:33:36,438:INFO:Checking exceptions
2023-10-12 20:33:36,438:INFO:Preloading libraries
2023-10-12 20:33:36,439:INFO:Set up data.
2023-10-12 20:33:36,444:INFO:Set up index.
2023-10-12 20:33:36,547:INFO:Initializing predict_model()
2023-10-12 20:33:36,548:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2871afa30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe2ef0>)
2023-10-12 20:33:36,548:INFO:Checking exceptions
2023-10-12 20:33:36,548:INFO:Preloading libraries
2023-10-12 20:33:36,548:INFO:Set up data.
2023-10-12 20:33:36,553:INFO:Set up index.
2023-10-12 20:33:36,624:INFO:Initializing predict_model()
2023-10-12 20:33:36,624:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f1e2e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe2ef0>)
2023-10-12 20:33:36,625:INFO:Checking exceptions
2023-10-12 20:33:36,625:INFO:Preloading libraries
2023-10-12 20:33:36,625:INFO:Set up data.
2023-10-12 20:33:36,629:INFO:Set up index.
2023-10-12 20:33:36,686:INFO:Initializing predict_model()
2023-10-12 20:33:36,686:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f1e2e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13ffe2ef0>)
2023-10-12 20:33:36,686:INFO:Checking exceptions
2023-10-12 20:33:36,686:INFO:Preloading libraries
2023-10-12 20:33:36,686:INFO:Set up data.
2023-10-12 20:33:36,690:INFO:Set up index.
2023-10-12 20:33:38,034:INFO:Initializing load_model()
2023-10-12 20:33:38,034:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:38,038:INFO:Initializing load_model()
2023-10-12 20:33:38,038:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:38,044:INFO:Initializing load_model()
2023-10-12 20:33:38,045:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:38,046:INFO:Initializing load_model()
2023-10-12 20:33:38,049:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:39,372:INFO:Initializing load_model()
2023-10-12 20:33:39,372:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:39,378:INFO:Initializing load_model()
2023-10-12 20:33:39,378:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:39,380:INFO:Initializing load_model()
2023-10-12 20:33:39,380:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:39,382:INFO:Initializing load_model()
2023-10-12 20:33:39,382:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:39,394:INFO:Initializing predict_model()
2023-10-12 20:33:39,394:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2871ae500>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x17861b4c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28707b7f0>)
2023-10-12 20:33:39,394:INFO:Checking exceptions
2023-10-12 20:33:39,394:INFO:Preloading libraries
2023-10-12 20:33:39,394:INFO:Set up data.
2023-10-12 20:33:39,398:INFO:Set up index.
2023-10-12 20:33:39,456:INFO:Initializing predict_model()
2023-10-12 20:33:39,456:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a5c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12d05b1c0>)
2023-10-12 20:33:39,456:INFO:Checking exceptions
2023-10-12 20:33:39,456:INFO:Preloading libraries
2023-10-12 20:33:39,456:INFO:Set up data.
2023-10-12 20:33:39,460:INFO:Set up index.
2023-10-12 20:33:39,517:INFO:Initializing predict_model()
2023-10-12 20:33:39,518:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a5c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12d05b1c0>)
2023-10-12 20:33:39,518:INFO:Checking exceptions
2023-10-12 20:33:39,518:INFO:Preloading libraries
2023-10-12 20:33:39,518:INFO:Set up data.
2023-10-12 20:33:39,522:INFO:Set up index.
2023-10-12 20:33:39,578:INFO:Initializing predict_model()
2023-10-12 20:33:39,578:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17861ac80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12d05b1c0>)
2023-10-12 20:33:39,578:INFO:Checking exceptions
2023-10-12 20:33:39,578:INFO:Preloading libraries
2023-10-12 20:33:39,578:INFO:Set up data.
2023-10-12 20:33:39,582:INFO:Set up index.
2023-10-12 20:33:42,129:INFO:Initializing load_model()
2023-10-12 20:33:42,129:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:42,130:INFO:Initializing load_model()
2023-10-12 20:33:42,130:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:42,132:INFO:Initializing load_model()
2023-10-12 20:33:42,132:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:42,135:INFO:Initializing load_model()
2023-10-12 20:33:42,135:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:47,227:INFO:Initializing load_model()
2023-10-12 20:33:47,227:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:47,228:INFO:Initializing load_model()
2023-10-12 20:33:47,228:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:47,229:INFO:Initializing load_model()
2023-10-12 20:33:47,230:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:47,231:INFO:Initializing load_model()
2023-10-12 20:33:47,231:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:52,212:INFO:Initializing load_model()
2023-10-12 20:33:52,212:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:52,219:INFO:Initializing load_model()
2023-10-12 20:33:52,219:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:52,227:INFO:Initializing load_model()
2023-10-12 20:33:52,227:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:52,230:INFO:Initializing load_model()
2023-10-12 20:33:52,230:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:57,105:INFO:Initializing load_model()
2023-10-12 20:33:57,105:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:57,107:INFO:Initializing load_model()
2023-10-12 20:33:57,107:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:57,108:INFO:Initializing load_model()
2023-10-12 20:33:57,108:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:33:57,109:INFO:Initializing load_model()
2023-10-12 20:33:57,109:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:42,569:INFO:Initializing load_model()
2023-10-12 20:35:42,570:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:42,573:INFO:Initializing load_model()
2023-10-12 20:35:42,573:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:42,578:INFO:Initializing load_model()
2023-10-12 20:35:42,578:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:42,580:INFO:Initializing load_model()
2023-10-12 20:35:42,580:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:45,030:INFO:Initializing load_model()
2023-10-12 20:35:45,030:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:45,034:INFO:Initializing load_model()
2023-10-12 20:35:45,034:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:45,036:INFO:Initializing load_model()
2023-10-12 20:35:45,036:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:45,037:INFO:Initializing load_model()
2023-10-12 20:35:45,037:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:45,133:INFO:Initializing load_model()
2023-10-12 20:35:45,133:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:45,134:INFO:Initializing load_model()
2023-10-12 20:35:45,135:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:45,136:INFO:Initializing load_model()
2023-10-12 20:35:45,136:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:45,137:INFO:Initializing load_model()
2023-10-12 20:35:45,137:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:48,129:INFO:Initializing load_model()
2023-10-12 20:35:48,129:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:48,131:INFO:Initializing load_model()
2023-10-12 20:35:48,131:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:48,132:INFO:Initializing load_model()
2023-10-12 20:35:48,132:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:35:48,134:INFO:Initializing load_model()
2023-10-12 20:35:48,134:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:14,624:INFO:Initializing load_model()
2023-10-12 20:38:14,625:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:14,629:INFO:Initializing load_model()
2023-10-12 20:38:14,629:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:14,631:INFO:Initializing load_model()
2023-10-12 20:38:14,631:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:14,634:INFO:Initializing load_model()
2023-10-12 20:38:14,634:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:17,887:INFO:Initializing load_model()
2023-10-12 20:38:17,887:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:17,889:INFO:Initializing load_model()
2023-10-12 20:38:17,889:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:17,890:INFO:Initializing load_model()
2023-10-12 20:38:17,890:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:17,892:INFO:Initializing load_model()
2023-10-12 20:38:17,892:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:23,150:INFO:Initializing load_model()
2023-10-12 20:38:23,150:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:23,152:INFO:Initializing load_model()
2023-10-12 20:38:23,152:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:23,154:INFO:Initializing load_model()
2023-10-12 20:38:23,154:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:23,156:INFO:Initializing load_model()
2023-10-12 20:38:23,156:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:26,294:INFO:Initializing load_model()
2023-10-12 20:38:26,294:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:26,301:INFO:Initializing load_model()
2023-10-12 20:38:26,310:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:26,313:INFO:Initializing load_model()
2023-10-12 20:38:26,313:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:26,315:INFO:Initializing load_model()
2023-10-12 20:38:26,315:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:26,445:INFO:Initializing load_model()
2023-10-12 20:38:26,445:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:26,446:INFO:Initializing load_model()
2023-10-12 20:38:26,446:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:26,448:INFO:Initializing load_model()
2023-10-12 20:38:26,448:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:26,449:INFO:Initializing load_model()
2023-10-12 20:38:26,449:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:28,477:INFO:Initializing load_model()
2023-10-12 20:38:28,478:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:28,479:INFO:Initializing load_model()
2023-10-12 20:38:28,479:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:28,480:INFO:Initializing load_model()
2023-10-12 20:38:28,480:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:38:28,481:INFO:Initializing load_model()
2023-10-12 20:38:28,481:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:03,488:INFO:Initializing load_model()
2023-10-12 20:41:03,489:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:03,493:INFO:Initializing load_model()
2023-10-12 20:41:03,493:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:03,497:INFO:Initializing load_model()
2023-10-12 20:41:03,497:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:03,500:INFO:Initializing load_model()
2023-10-12 20:41:03,500:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:06,686:INFO:Initializing load_model()
2023-10-12 20:41:06,687:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:06,688:INFO:Initializing load_model()
2023-10-12 20:41:06,688:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:06,689:INFO:Initializing load_model()
2023-10-12 20:41:06,689:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:06,691:INFO:Initializing load_model()
2023-10-12 20:41:06,691:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:24,400:INFO:Initializing load_model()
2023-10-12 20:41:24,401:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:24,404:INFO:Initializing load_model()
2023-10-12 20:41:24,404:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:24,408:INFO:Initializing load_model()
2023-10-12 20:41:24,408:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:24,410:INFO:Initializing load_model()
2023-10-12 20:41:24,410:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:24,995:INFO:Initializing load_model()
2023-10-12 20:41:24,995:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:24,996:INFO:Initializing load_model()
2023-10-12 20:41:24,996:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:24,998:INFO:Initializing load_model()
2023-10-12 20:41:24,998:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:24,999:INFO:Initializing load_model()
2023-10-12 20:41:24,999:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:27,607:INFO:Initializing load_model()
2023-10-12 20:41:27,607:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:27,608:INFO:Initializing load_model()
2023-10-12 20:41:27,608:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:27,610:INFO:Initializing load_model()
2023-10-12 20:41:27,610:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:27,611:INFO:Initializing load_model()
2023-10-12 20:41:27,611:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:48,777:INFO:Initializing load_model()
2023-10-12 20:41:48,777:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:48,781:INFO:Initializing load_model()
2023-10-12 20:41:48,781:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:48,784:INFO:Initializing load_model()
2023-10-12 20:41:48,784:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:41:48,786:INFO:Initializing load_model()
2023-10-12 20:41:48,786:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:17,980:INFO:Initializing load_model()
2023-10-12 20:43:17,983:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:17,992:INFO:Initializing load_model()
2023-10-12 20:43:17,992:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:17,997:INFO:Initializing load_model()
2023-10-12 20:43:17,997:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:18,000:INFO:Initializing load_model()
2023-10-12 20:43:18,000:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:28,610:INFO:Initializing load_model()
2023-10-12 20:43:28,611:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:28,616:INFO:Initializing load_model()
2023-10-12 20:43:28,616:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:28,618:INFO:Initializing load_model()
2023-10-12 20:43:28,619:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:28,621:INFO:Initializing load_model()
2023-10-12 20:43:28,621:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:28,736:INFO:Initializing load_model()
2023-10-12 20:43:28,736:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:28,738:INFO:Initializing load_model()
2023-10-12 20:43:28,738:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:28,739:INFO:Initializing load_model()
2023-10-12 20:43:28,739:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:28,741:INFO:Initializing load_model()
2023-10-12 20:43:28,741:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:31,390:INFO:Initializing load_model()
2023-10-12 20:43:31,390:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:31,391:INFO:Initializing load_model()
2023-10-12 20:43:31,391:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:31,393:INFO:Initializing load_model()
2023-10-12 20:43:31,393:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:31,394:INFO:Initializing load_model()
2023-10-12 20:43:31,394:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:58,065:INFO:Initializing load_model()
2023-10-12 20:43:58,065:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:58,068:INFO:Initializing load_model()
2023-10-12 20:43:58,068:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:58,073:INFO:Initializing load_model()
2023-10-12 20:43:58,073:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:43:58,075:INFO:Initializing load_model()
2023-10-12 20:43:58,075:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:00,687:INFO:Initializing load_model()
2023-10-12 20:44:00,688:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:00,689:INFO:Initializing load_model()
2023-10-12 20:44:00,689:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:00,691:INFO:Initializing load_model()
2023-10-12 20:44:00,691:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:00,698:INFO:Initializing load_model()
2023-10-12 20:44:00,699:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:00,788:INFO:Initializing load_model()
2023-10-12 20:44:00,788:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:00,789:INFO:Initializing load_model()
2023-10-12 20:44:00,789:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:00,790:INFO:Initializing load_model()
2023-10-12 20:44:00,790:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:00,792:INFO:Initializing load_model()
2023-10-12 20:44:00,792:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:03,733:INFO:Initializing load_model()
2023-10-12 20:44:03,733:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:03,735:INFO:Initializing load_model()
2023-10-12 20:44:03,735:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:03,736:INFO:Initializing load_model()
2023-10-12 20:44:03,736:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:03,737:INFO:Initializing load_model()
2023-10-12 20:44:03,737:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:44:03,778:INFO:Initializing predict_model()
2023-10-12 20:44:03,778:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2870b6200>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1785d3f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f8efd00>)
2023-10-12 20:44:03,778:INFO:Checking exceptions
2023-10-12 20:44:03,778:INFO:Preloading libraries
2023-10-12 20:44:03,779:INFO:Set up data.
2023-10-12 20:44:03,787:INFO:Set up index.
2023-10-12 20:44:03,876:INFO:Initializing predict_model()
2023-10-12 20:44:03,876:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838abf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f8efd00>)
2023-10-12 20:44:03,876:INFO:Checking exceptions
2023-10-12 20:44:03,876:INFO:Preloading libraries
2023-10-12 20:44:03,876:INFO:Set up data.
2023-10-12 20:44:03,880:INFO:Set up index.
2023-10-12 20:44:03,938:INFO:Initializing predict_model()
2023-10-12 20:44:03,938:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838abf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f8efd00>)
2023-10-12 20:44:03,938:INFO:Checking exceptions
2023-10-12 20:44:03,938:INFO:Preloading libraries
2023-10-12 20:44:03,938:INFO:Set up data.
2023-10-12 20:44:03,942:INFO:Set up index.
2023-10-12 20:44:03,997:INFO:Initializing predict_model()
2023-10-12 20:44:03,997:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838abf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f8efd00>)
2023-10-12 20:44:03,997:INFO:Checking exceptions
2023-10-12 20:44:03,997:INFO:Preloading libraries
2023-10-12 20:44:03,998:INFO:Set up data.
2023-10-12 20:44:04,001:INFO:Set up index.
2023-10-12 20:45:31,232:INFO:Initializing load_model()
2023-10-12 20:45:31,232:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:45:31,236:INFO:Initializing load_model()
2023-10-12 20:45:31,236:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:45:31,238:INFO:Initializing load_model()
2023-10-12 20:45:31,238:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:45:31,241:INFO:Initializing load_model()
2023-10-12 20:45:31,241:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:50,135:INFO:Initializing load_model()
2023-10-12 20:46:50,135:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:50,139:INFO:Initializing load_model()
2023-10-12 20:46:50,139:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:50,148:INFO:Initializing load_model()
2023-10-12 20:46:50,148:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:50,151:INFO:Initializing load_model()
2023-10-12 20:46:50,151:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:50,284:INFO:Initializing load_model()
2023-10-12 20:46:50,284:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:50,285:INFO:Initializing load_model()
2023-10-12 20:46:50,285:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:50,286:INFO:Initializing load_model()
2023-10-12 20:46:50,286:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:50,288:INFO:Initializing load_model()
2023-10-12 20:46:50,288:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:54,615:INFO:Initializing load_model()
2023-10-12 20:46:54,616:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:54,618:INFO:Initializing load_model()
2023-10-12 20:46:54,618:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:54,620:INFO:Initializing load_model()
2023-10-12 20:46:54,620:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:54,621:INFO:Initializing load_model()
2023-10-12 20:46:54,621:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:46:54,651:INFO:Initializing predict_model()
2023-10-12 20:46:54,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2873d9ea0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2870e6e90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286fb3d00>)
2023-10-12 20:46:54,652:INFO:Checking exceptions
2023-10-12 20:46:54,652:INFO:Preloading libraries
2023-10-12 20:46:54,652:INFO:Set up data.
2023-10-12 20:46:54,662:INFO:Set up index.
2023-10-12 20:46:54,790:INFO:Initializing predict_model()
2023-10-12 20:46:54,790:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a9b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286fb3d00>)
2023-10-12 20:46:54,790:INFO:Checking exceptions
2023-10-12 20:46:54,790:INFO:Preloading libraries
2023-10-12 20:46:54,791:INFO:Set up data.
2023-10-12 20:46:54,794:INFO:Set up index.
2023-10-12 20:46:54,852:INFO:Initializing predict_model()
2023-10-12 20:46:54,852:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a9b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286fb3d00>)
2023-10-12 20:46:54,852:INFO:Checking exceptions
2023-10-12 20:46:54,852:INFO:Preloading libraries
2023-10-12 20:46:54,852:INFO:Set up data.
2023-10-12 20:46:54,856:INFO:Set up index.
2023-10-12 20:46:54,909:INFO:Initializing predict_model()
2023-10-12 20:46:54,909:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17838a9b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286fb3d00>)
2023-10-12 20:46:54,909:INFO:Checking exceptions
2023-10-12 20:46:54,909:INFO:Preloading libraries
2023-10-12 20:46:54,909:INFO:Set up data.
2023-10-12 20:46:54,913:INFO:Set up index.
2023-10-12 20:47:37,542:INFO:Initializing load_model()
2023-10-12 20:47:37,542:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:37,545:INFO:Initializing load_model()
2023-10-12 20:47:37,545:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:37,548:INFO:Initializing load_model()
2023-10-12 20:47:37,548:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:37,550:INFO:Initializing load_model()
2023-10-12 20:47:37,550:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:37,552:INFO:Initializing load_model()
2023-10-12 20:47:37,552:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,427:INFO:Initializing load_model()
2023-10-12 20:47:43,428:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,431:INFO:Initializing load_model()
2023-10-12 20:47:43,431:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,447:INFO:Initializing load_model()
2023-10-12 20:47:43,447:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,450:INFO:Initializing load_model()
2023-10-12 20:47:43,450:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,452:INFO:Initializing load_model()
2023-10-12 20:47:43,452:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,575:INFO:Initializing load_model()
2023-10-12 20:47:43,575:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,577:INFO:Initializing load_model()
2023-10-12 20:47:43,577:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,578:INFO:Initializing load_model()
2023-10-12 20:47:43,578:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,580:INFO:Initializing load_model()
2023-10-12 20:47:43,580:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:43,582:INFO:Initializing load_model()
2023-10-12 20:47:43,582:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,775:INFO:Initializing load_model()
2023-10-12 20:47:48,775:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,777:INFO:Initializing load_model()
2023-10-12 20:47:48,777:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,779:INFO:Initializing load_model()
2023-10-12 20:47:48,779:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,781:INFO:Initializing load_model()
2023-10-12 20:47:48,781:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,782:INFO:Initializing load_model()
2023-10-12 20:47:48,782:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,894:INFO:Initializing load_model()
2023-10-12 20:47:48,894:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,895:INFO:Initializing load_model()
2023-10-12 20:47:48,896:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,897:INFO:Initializing load_model()
2023-10-12 20:47:48,897:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,899:INFO:Initializing load_model()
2023-10-12 20:47:48,899:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:48,900:INFO:Initializing load_model()
2023-10-12 20:47:48,900:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:52,193:INFO:Initializing load_model()
2023-10-12 20:47:52,194:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:52,205:INFO:Initializing load_model()
2023-10-12 20:47:52,205:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:52,208:INFO:Initializing load_model()
2023-10-12 20:47:52,208:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:52,210:INFO:Initializing load_model()
2023-10-12 20:47:52,210:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:52,211:INFO:Initializing load_model()
2023-10-12 20:47:52,211:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:47:52,225:INFO:Initializing predict_model()
2023-10-12 20:47:52,226:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2873d9990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x178618700>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286fb3d00>)
2023-10-12 20:47:52,226:INFO:Checking exceptions
2023-10-12 20:47:52,226:INFO:Preloading libraries
2023-10-12 20:47:52,226:INFO:Set up data.
2023-10-12 20:47:52,237:INFO:Set up index.
2023-10-12 20:47:52,362:INFO:Initializing predict_model()
2023-10-12 20:47:52,362:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2870676d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286fb3d00>)
2023-10-12 20:47:52,362:INFO:Checking exceptions
2023-10-12 20:47:52,362:INFO:Preloading libraries
2023-10-12 20:47:52,363:INFO:Set up data.
2023-10-12 20:47:52,366:INFO:Set up index.
2023-10-12 20:47:52,422:INFO:Initializing predict_model()
2023-10-12 20:47:52,422:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2870676d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286fb3d00>)
2023-10-12 20:47:52,422:INFO:Checking exceptions
2023-10-12 20:47:52,422:INFO:Preloading libraries
2023-10-12 20:47:52,422:INFO:Set up data.
2023-10-12 20:47:52,426:INFO:Set up index.
2023-10-12 20:47:52,484:INFO:Initializing predict_model()
2023-10-12 20:47:52,484:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2870676d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286fb3d00>)
2023-10-12 20:47:52,484:INFO:Checking exceptions
2023-10-12 20:47:52,484:INFO:Preloading libraries
2023-10-12 20:47:52,484:INFO:Set up data.
2023-10-12 20:47:52,488:INFO:Set up index.
2023-10-12 20:47:52,545:INFO:Initializing predict_model()
2023-10-12 20:47:52,545:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2870676d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x14fa6fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x286fb3d00>)
2023-10-12 20:47:52,545:INFO:Checking exceptions
2023-10-12 20:47:52,545:INFO:Preloading libraries
2023-10-12 20:47:52,545:INFO:Set up data.
2023-10-12 20:47:52,549:INFO:Set up index.
2023-10-12 20:50:52,762:INFO:Initializing load_model()
2023-10-12 20:50:52,763:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:50:52,768:INFO:Initializing load_model()
2023-10-12 20:50:52,768:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:50:52,772:INFO:Initializing load_model()
2023-10-12 20:50:52,772:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:50:52,775:INFO:Initializing load_model()
2023-10-12 20:50:52,775:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:50:52,777:INFO:Initializing load_model()
2023-10-12 20:50:52,777:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,179:INFO:Initializing load_model()
2023-10-12 20:51:03,179:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,183:INFO:Initializing load_model()
2023-10-12 20:51:03,183:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,186:INFO:Initializing load_model()
2023-10-12 20:51:03,186:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,188:INFO:Initializing load_model()
2023-10-12 20:51:03,189:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,191:INFO:Initializing load_model()
2023-10-12 20:51:03,191:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,338:INFO:Initializing load_model()
2023-10-12 20:51:03,338:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,339:INFO:Initializing load_model()
2023-10-12 20:51:03,339:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,341:INFO:Initializing load_model()
2023-10-12 20:51:03,341:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,346:INFO:Initializing load_model()
2023-10-12 20:51:03,346:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:03,348:INFO:Initializing load_model()
2023-10-12 20:51:03,348:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:05,733:INFO:Initializing load_model()
2023-10-12 20:51:05,733:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:05,734:INFO:Initializing load_model()
2023-10-12 20:51:05,734:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:05,737:INFO:Initializing load_model()
2023-10-12 20:51:05,737:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:05,739:INFO:Initializing load_model()
2023-10-12 20:51:05,739:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:05,740:INFO:Initializing load_model()
2023-10-12 20:51:05,740:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:51:05,757:INFO:Initializing predict_model()
2023-10-12 20:51:05,757:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2873dbac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2873e1ed0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28707b640>)
2023-10-12 20:51:05,757:INFO:Checking exceptions
2023-10-12 20:51:05,757:INFO:Preloading libraries
2023-10-12 20:51:05,758:INFO:Set up data.
2023-10-12 20:51:05,762:INFO:Set up index.
2023-10-12 20:51:05,828:INFO:Initializing predict_model()
2023-10-12 20:51:05,828:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14fa6d1e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28707b640>)
2023-10-12 20:51:05,828:INFO:Checking exceptions
2023-10-12 20:51:05,828:INFO:Preloading libraries
2023-10-12 20:51:05,828:INFO:Set up data.
2023-10-12 20:51:05,832:INFO:Set up index.
2023-10-12 20:51:05,892:INFO:Initializing predict_model()
2023-10-12 20:51:05,892:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178674af0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4b520>)
2023-10-12 20:51:05,892:INFO:Checking exceptions
2023-10-12 20:51:05,892:INFO:Preloading libraries
2023-10-12 20:51:05,892:INFO:Set up data.
2023-10-12 20:51:05,896:INFO:Set up index.
2023-10-12 20:51:05,952:INFO:Initializing predict_model()
2023-10-12 20:51:05,952:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f1e2e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4b520>)
2023-10-12 20:51:05,952:INFO:Checking exceptions
2023-10-12 20:51:05,952:INFO:Preloading libraries
2023-10-12 20:51:05,952:INFO:Set up data.
2023-10-12 20:51:05,956:INFO:Set up index.
2023-10-12 20:51:06,012:INFO:Initializing predict_model()
2023-10-12 20:51:06,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13f1e2e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2873e0460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4b520>)
2023-10-12 20:51:06,013:INFO:Checking exceptions
2023-10-12 20:51:06,013:INFO:Preloading libraries
2023-10-12 20:51:06,013:INFO:Set up data.
2023-10-12 20:51:06,017:INFO:Set up index.
2023-10-12 20:53:19,293:INFO:Initializing load_model()
2023-10-12 20:53:19,294:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:19,298:INFO:Initializing load_model()
2023-10-12 20:53:19,298:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:19,304:INFO:Initializing load_model()
2023-10-12 20:53:19,304:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:19,308:INFO:Initializing load_model()
2023-10-12 20:53:19,308:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:19,312:INFO:Initializing load_model()
2023-10-12 20:53:19,312:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:31,927:INFO:Initializing load_model()
2023-10-12 20:53:31,927:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:31,931:INFO:Initializing load_model()
2023-10-12 20:53:31,931:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:31,934:INFO:Initializing load_model()
2023-10-12 20:53:31,935:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:31,937:INFO:Initializing load_model()
2023-10-12 20:53:31,937:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:31,939:INFO:Initializing load_model()
2023-10-12 20:53:31,939:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:32,087:INFO:Initializing load_model()
2023-10-12 20:53:32,087:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:32,088:INFO:Initializing load_model()
2023-10-12 20:53:32,088:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:32,089:INFO:Initializing load_model()
2023-10-12 20:53:32,089:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:32,090:INFO:Initializing load_model()
2023-10-12 20:53:32,090:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:32,093:INFO:Initializing load_model()
2023-10-12 20:53:32,093:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,287:INFO:Initializing load_model()
2023-10-12 20:53:44,287:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,291:INFO:Initializing load_model()
2023-10-12 20:53:44,291:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,303:INFO:Initializing load_model()
2023-10-12 20:53:44,303:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,306:INFO:Initializing load_model()
2023-10-12 20:53:44,306:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,308:INFO:Initializing load_model()
2023-10-12 20:53:44,308:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,437:INFO:Initializing load_model()
2023-10-12 20:53:44,437:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,438:INFO:Initializing load_model()
2023-10-12 20:53:44,438:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,439:INFO:Initializing load_model()
2023-10-12 20:53:44,439:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,440:INFO:Initializing load_model()
2023-10-12 20:53:44,440:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:44,442:INFO:Initializing load_model()
2023-10-12 20:53:44,442:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:50,246:INFO:Initializing load_model()
2023-10-12 20:53:50,246:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:50,248:INFO:Initializing load_model()
2023-10-12 20:53:50,248:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:50,251:INFO:Initializing load_model()
2023-10-12 20:53:50,251:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:50,255:INFO:Initializing load_model()
2023-10-12 20:53:50,255:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:50,257:INFO:Initializing load_model()
2023-10-12 20:53:50,257:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:53:50,277:INFO:Initializing predict_model()
2023-10-12 20:53:50,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178619960>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2870b65c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4ba30>)
2023-10-12 20:53:50,278:INFO:Checking exceptions
2023-10-12 20:53:50,278:INFO:Preloading libraries
2023-10-12 20:53:50,278:INFO:Set up data.
2023-10-12 20:53:50,284:INFO:Set up index.
2023-10-12 20:53:50,368:INFO:Initializing predict_model()
2023-10-12 20:53:50,369:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1785fd060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178395750>)
2023-10-12 20:53:50,369:INFO:Checking exceptions
2023-10-12 20:53:50,369:INFO:Preloading libraries
2023-10-12 20:53:50,369:INFO:Set up data.
2023-10-12 20:53:50,373:INFO:Set up index.
2023-10-12 20:53:50,434:INFO:Initializing predict_model()
2023-10-12 20:53:50,434:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14e3967a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178395750>)
2023-10-12 20:53:50,434:INFO:Checking exceptions
2023-10-12 20:53:50,434:INFO:Preloading libraries
2023-10-12 20:53:50,434:INFO:Set up data.
2023-10-12 20:53:50,438:INFO:Set up index.
2023-10-12 20:53:50,497:INFO:Initializing predict_model()
2023-10-12 20:53:50,497:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14e3967a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178395750>)
2023-10-12 20:53:50,497:INFO:Checking exceptions
2023-10-12 20:53:50,497:INFO:Preloading libraries
2023-10-12 20:53:50,497:INFO:Set up data.
2023-10-12 20:53:50,501:INFO:Set up index.
2023-10-12 20:53:50,559:INFO:Initializing predict_model()
2023-10-12 20:53:50,559:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14e3967a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2870b7fa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x178395750>)
2023-10-12 20:53:50,559:INFO:Checking exceptions
2023-10-12 20:53:50,559:INFO:Preloading libraries
2023-10-12 20:53:50,559:INFO:Set up data.
2023-10-12 20:53:50,564:INFO:Set up index.
2023-10-12 20:54:35,601:INFO:Initializing load_model()
2023-10-12 20:54:35,601:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:35,605:INFO:Initializing load_model()
2023-10-12 20:54:35,605:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:35,608:INFO:Initializing load_model()
2023-10-12 20:54:35,608:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:35,611:INFO:Initializing load_model()
2023-10-12 20:54:35,612:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:35,613:INFO:Initializing load_model()
2023-10-12 20:54:35,613:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:36,981:INFO:Initializing load_model()
2023-10-12 20:54:36,982:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:36,983:INFO:Initializing load_model()
2023-10-12 20:54:36,983:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:36,985:INFO:Initializing load_model()
2023-10-12 20:54:36,985:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:36,986:INFO:Initializing load_model()
2023-10-12 20:54:36,986:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:36,988:INFO:Initializing load_model()
2023-10-12 20:54:36,988:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:37,075:INFO:Initializing load_model()
2023-10-12 20:54:37,075:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:37,076:INFO:Initializing load_model()
2023-10-12 20:54:37,077:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:37,078:INFO:Initializing load_model()
2023-10-12 20:54:37,078:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:37,079:INFO:Initializing load_model()
2023-10-12 20:54:37,079:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:37,080:INFO:Initializing load_model()
2023-10-12 20:54:37,080:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:39,783:INFO:Initializing load_model()
2023-10-12 20:54:39,783:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:39,784:INFO:Initializing load_model()
2023-10-12 20:54:39,784:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:39,785:INFO:Initializing load_model()
2023-10-12 20:54:39,785:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:39,787:INFO:Initializing load_model()
2023-10-12 20:54:39,787:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:39,789:INFO:Initializing load_model()
2023-10-12 20:54:39,789:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:54:39,803:INFO:Initializing predict_model()
2023-10-12 20:54:39,803:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17861a8f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2871ad1b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fb4bc70>)
2023-10-12 20:54:39,803:INFO:Checking exceptions
2023-10-12 20:54:39,803:INFO:Preloading libraries
2023-10-12 20:54:39,804:INFO:Set up data.
2023-10-12 20:54:39,808:INFO:Set up index.
2023-10-12 20:54:39,934:INFO:Initializing predict_model()
2023-10-12 20:54:39,934:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14e3951b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fb4bc70>)
2023-10-12 20:54:39,934:INFO:Checking exceptions
2023-10-12 20:54:39,934:INFO:Preloading libraries
2023-10-12 20:54:39,934:INFO:Set up data.
2023-10-12 20:54:39,938:INFO:Set up index.
2023-10-12 20:54:39,997:INFO:Initializing predict_model()
2023-10-12 20:54:39,997:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2873e3070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fb4bc70>)
2023-10-12 20:54:39,997:INFO:Checking exceptions
2023-10-12 20:54:39,997:INFO:Preloading libraries
2023-10-12 20:54:39,998:INFO:Set up data.
2023-10-12 20:54:40,002:INFO:Set up index.
2023-10-12 20:54:40,064:INFO:Initializing predict_model()
2023-10-12 20:54:40,065:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178675120>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fb4bc70>)
2023-10-12 20:54:40,065:INFO:Checking exceptions
2023-10-12 20:54:40,065:INFO:Preloading libraries
2023-10-12 20:54:40,065:INFO:Set up data.
2023-10-12 20:54:40,069:INFO:Set up index.
2023-10-12 20:54:40,128:INFO:Initializing predict_model()
2023-10-12 20:54:40,128:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14fa6f220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1785fcfd0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fb4bc70>)
2023-10-12 20:54:40,128:INFO:Checking exceptions
2023-10-12 20:54:40,128:INFO:Preloading libraries
2023-10-12 20:54:40,129:INFO:Set up data.
2023-10-12 20:54:40,133:INFO:Set up index.
2023-10-12 20:56:26,805:INFO:Initializing load_model()
2023-10-12 20:56:26,805:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:26,808:INFO:Initializing load_model()
2023-10-12 20:56:26,808:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:26,810:INFO:Initializing load_model()
2023-10-12 20:56:26,810:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:26,812:INFO:Initializing load_model()
2023-10-12 20:56:26,812:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:26,814:INFO:Initializing load_model()
2023-10-12 20:56:26,814:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,491:INFO:Initializing load_model()
2023-10-12 20:56:28,491:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,493:INFO:Initializing load_model()
2023-10-12 20:56:28,493:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,494:INFO:Initializing load_model()
2023-10-12 20:56:28,495:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,496:INFO:Initializing load_model()
2023-10-12 20:56:28,496:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,497:INFO:Initializing load_model()
2023-10-12 20:56:28,497:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,598:INFO:Initializing load_model()
2023-10-12 20:56:28,598:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,599:INFO:Initializing load_model()
2023-10-12 20:56:28,599:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,601:INFO:Initializing load_model()
2023-10-12 20:56:28,601:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,602:INFO:Initializing load_model()
2023-10-12 20:56:28,602:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:28,603:INFO:Initializing load_model()
2023-10-12 20:56:28,603:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:31,584:INFO:Initializing load_model()
2023-10-12 20:56:31,585:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:31,587:INFO:Initializing load_model()
2023-10-12 20:56:31,587:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:31,592:INFO:Initializing load_model()
2023-10-12 20:56:31,592:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:31,594:INFO:Initializing load_model()
2023-10-12 20:56:31,594:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:31,595:INFO:Initializing load_model()
2023-10-12 20:56:31,595:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:56:31,610:INFO:Initializing predict_model()
2023-10-12 20:56:31,611:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14e396140>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x178675db0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4ba30>)
2023-10-12 20:56:31,611:INFO:Checking exceptions
2023-10-12 20:56:31,611:INFO:Preloading libraries
2023-10-12 20:56:31,611:INFO:Set up data.
2023-10-12 20:56:31,616:INFO:Set up index.
2023-10-12 20:56:31,717:INFO:Initializing predict_model()
2023-10-12 20:56:31,718:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1785fefe0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4ba30>)
2023-10-12 20:56:31,718:INFO:Checking exceptions
2023-10-12 20:56:31,718:INFO:Preloading libraries
2023-10-12 20:56:31,718:INFO:Set up data.
2023-10-12 20:56:31,722:INFO:Set up index.
2023-10-12 20:56:31,781:INFO:Initializing predict_model()
2023-10-12 20:56:31,781:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28724ff10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4ba30>)
2023-10-12 20:56:31,781:INFO:Checking exceptions
2023-10-12 20:56:31,781:INFO:Preloading libraries
2023-10-12 20:56:31,782:INFO:Set up data.
2023-10-12 20:56:31,786:INFO:Set up index.
2023-10-12 20:56:31,842:INFO:Initializing predict_model()
2023-10-12 20:56:31,842:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x178677a60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4ba30>)
2023-10-12 20:56:31,842:INFO:Checking exceptions
2023-10-12 20:56:31,842:INFO:Preloading libraries
2023-10-12 20:56:31,843:INFO:Set up data.
2023-10-12 20:56:31,847:INFO:Set up index.
2023-10-12 20:56:31,904:INFO:Initializing predict_model()
2023-10-12 20:56:31,904:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1785fceb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2870b4250>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14fa4ba30>)
2023-10-12 20:56:31,904:INFO:Checking exceptions
2023-10-12 20:56:31,904:INFO:Preloading libraries
2023-10-12 20:56:31,904:INFO:Set up data.
2023-10-12 20:56:31,908:INFO:Set up index.
2023-10-12 20:59:54,304:INFO:Initializing load_model()
2023-10-12 20:59:54,305:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:54,309:INFO:Initializing load_model()
2023-10-12 20:59:54,309:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:54,312:INFO:Initializing load_model()
2023-10-12 20:59:54,312:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:54,313:INFO:Initializing load_model()
2023-10-12 20:59:54,315:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:54,316:INFO:Initializing load_model()
2023-10-12 20:59:54,316:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:56,517:INFO:Initializing load_model()
2023-10-12 20:59:56,518:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:56,519:INFO:Initializing load_model()
2023-10-12 20:59:56,519:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:56,521:INFO:Initializing load_model()
2023-10-12 20:59:56,521:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:56,522:INFO:Initializing load_model()
2023-10-12 20:59:56,522:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:56,524:INFO:Initializing load_model()
2023-10-12 20:59:56,524:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:57,507:INFO:Initializing load_model()
2023-10-12 20:59:57,507:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:57,508:INFO:Initializing load_model()
2023-10-12 20:59:57,508:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:57,510:INFO:Initializing load_model()
2023-10-12 20:59:57,510:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:57,512:INFO:Initializing load_model()
2023-10-12 20:59:57,512:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 20:59:57,513:INFO:Initializing load_model()
2023-10-12 20:59:57,514:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:04,089:INFO:Initializing load_model()
2023-10-12 21:00:04,089:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:04,091:INFO:Initializing load_model()
2023-10-12 21:00:04,091:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:04,097:INFO:Initializing load_model()
2023-10-12 21:00:04,097:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:04,100:INFO:Initializing load_model()
2023-10-12 21:00:04,101:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:04,103:INFO:Initializing load_model()
2023-10-12 21:00:04,103:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:06,472:INFO:Initializing load_model()
2023-10-12 21:00:06,472:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:06,473:INFO:Initializing load_model()
2023-10-12 21:00:06,473:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:06,474:INFO:Initializing load_model()
2023-10-12 21:00:06,474:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:06,475:INFO:Initializing load_model()
2023-10-12 21:00:06,475:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:00:06,477:INFO:Initializing load_model()
2023-10-12 21:00:06,477:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:22,121:INFO:Initializing load_model()
2023-10-12 21:08:22,123:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:22,138:INFO:Initializing load_model()
2023-10-12 21:08:22,138:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:22,152:INFO:Initializing load_model()
2023-10-12 21:08:22,152:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:22,155:INFO:Initializing load_model()
2023-10-12 21:08:22,155:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:22,157:INFO:Initializing load_model()
2023-10-12 21:08:22,157:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:49,806:INFO:Initializing load_model()
2023-10-12 21:08:49,807:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:49,813:INFO:Initializing load_model()
2023-10-12 21:08:49,813:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:49,821:INFO:Initializing load_model()
2023-10-12 21:08:49,821:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:49,825:INFO:Initializing load_model()
2023-10-12 21:08:49,825:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:08:49,827:INFO:Initializing load_model()
2023-10-12 21:08:49,827:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:09:34,944:INFO:Initializing load_model()
2023-10-12 21:09:34,945:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:09:34,964:INFO:Initializing load_model()
2023-10-12 21:09:34,964:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:09:34,970:INFO:Initializing load_model()
2023-10-12 21:09:34,970:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:09:34,976:INFO:Initializing load_model()
2023-10-12 21:09:34,976:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:09:34,980:INFO:Initializing load_model()
2023-10-12 21:09:34,980:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:25,851:INFO:Initializing load_model()
2023-10-12 21:10:25,852:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:25,866:INFO:Initializing load_model()
2023-10-12 21:10:25,866:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:25,876:INFO:Initializing load_model()
2023-10-12 21:10:25,876:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:25,879:INFO:Initializing load_model()
2023-10-12 21:10:25,879:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:25,881:INFO:Initializing load_model()
2023-10-12 21:10:25,881:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:47,479:INFO:Initializing load_model()
2023-10-12 21:10:47,479:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:47,483:INFO:Initializing load_model()
2023-10-12 21:10:47,483:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:47,488:INFO:Initializing load_model()
2023-10-12 21:10:47,488:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:47,490:INFO:Initializing load_model()
2023-10-12 21:10:47,490:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:10:47,493:INFO:Initializing load_model()
2023-10-12 21:10:47,493:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:22,384:INFO:Initializing load_model()
2023-10-12 21:12:22,384:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:22,387:INFO:Initializing load_model()
2023-10-12 21:12:22,387:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:22,389:INFO:Initializing load_model()
2023-10-12 21:12:22,389:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:22,391:INFO:Initializing load_model()
2023-10-12 21:12:22,391:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:22,393:INFO:Initializing load_model()
2023-10-12 21:12:22,393:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:30,611:INFO:Initializing load_model()
2023-10-12 21:12:30,611:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:30,614:INFO:Initializing load_model()
2023-10-12 21:12:30,614:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:30,617:INFO:Initializing load_model()
2023-10-12 21:12:30,617:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:30,649:INFO:Initializing load_model()
2023-10-12 21:12:30,649:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:30,651:INFO:Initializing load_model()
2023-10-12 21:12:30,651:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:31,159:INFO:Initializing load_model()
2023-10-12 21:12:31,159:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:31,160:INFO:Initializing load_model()
2023-10-12 21:12:31,160:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:31,162:INFO:Initializing load_model()
2023-10-12 21:12:31,162:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:31,164:INFO:Initializing load_model()
2023-10-12 21:12:31,164:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:12:31,165:INFO:Initializing load_model()
2023-10-12 21:12:31,165:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:15:58,458:INFO:Initializing load_model()
2023-10-12 21:15:58,458:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:15:58,461:INFO:Initializing load_model()
2023-10-12 21:15:58,461:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:15:58,463:INFO:Initializing load_model()
2023-10-12 21:15:58,463:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:15:58,464:INFO:Initializing load_model()
2023-10-12 21:15:58,465:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:15:58,466:INFO:Initializing load_model()
2023-10-12 21:15:58,466:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:03,247:INFO:Initializing load_model()
2023-10-12 21:16:03,247:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:03,248:INFO:Initializing load_model()
2023-10-12 21:16:03,248:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:03,249:INFO:Initializing load_model()
2023-10-12 21:16:03,249:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:03,250:INFO:Initializing load_model()
2023-10-12 21:16:03,250:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:03,252:INFO:Initializing load_model()
2023-10-12 21:16:03,252:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:07,145:WARNING:/Users/siina/Desktop/seah/svn/ProjectA/민식/app/pages/2.py:207: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-10-12 21:16:08,149:WARNING:/Users/siina/Desktop/seah/svn/ProjectA/민식/app/pages/2.py:207: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-10-12 21:16:13,177:INFO:Initializing load_model()
2023-10-12 21:16:13,178:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:13,180:INFO:Initializing load_model()
2023-10-12 21:16:13,180:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:13,182:INFO:Initializing load_model()
2023-10-12 21:16:13,182:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:13,184:INFO:Initializing load_model()
2023-10-12 21:16:13,184:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:13,186:INFO:Initializing load_model()
2023-10-12 21:16:13,186:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,522:INFO:Initializing load_model()
2023-10-12 21:16:17,528:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,530:INFO:Initializing load_model()
2023-10-12 21:16:17,530:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,531:INFO:Initializing load_model()
2023-10-12 21:16:17,531:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,533:INFO:Initializing load_model()
2023-10-12 21:16:17,533:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,535:INFO:Initializing load_model()
2023-10-12 21:16:17,535:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,632:INFO:Initializing load_model()
2023-10-12 21:16:17,632:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,633:INFO:Initializing load_model()
2023-10-12 21:16:17,633:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,635:INFO:Initializing load_model()
2023-10-12 21:16:17,635:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,636:INFO:Initializing load_model()
2023-10-12 21:16:17,636:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:17,637:INFO:Initializing load_model()
2023-10-12 21:16:17,637:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:22,876:INFO:Initializing load_model()
2023-10-12 21:16:22,877:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:22,879:INFO:Initializing load_model()
2023-10-12 21:16:22,879:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:22,882:INFO:Initializing load_model()
2023-10-12 21:16:22,882:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:22,884:INFO:Initializing load_model()
2023-10-12 21:16:22,884:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:22,887:INFO:Initializing load_model()
2023-10-12 21:16:22,887:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,395:INFO:Initializing load_model()
2023-10-12 21:16:23,396:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,397:INFO:Initializing load_model()
2023-10-12 21:16:23,397:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,399:INFO:Initializing load_model()
2023-10-12 21:16:23,399:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,401:INFO:Initializing load_model()
2023-10-12 21:16:23,401:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,402:INFO:Initializing load_model()
2023-10-12 21:16:23,402:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,713:INFO:Initializing load_model()
2023-10-12 21:16:23,714:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,715:INFO:Initializing load_model()
2023-10-12 21:16:23,715:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,716:INFO:Initializing load_model()
2023-10-12 21:16:23,716:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,718:INFO:Initializing load_model()
2023-10-12 21:16:23,718:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:23,719:INFO:Initializing load_model()
2023-10-12 21:16:23,719:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:26,603:INFO:Initializing load_model()
2023-10-12 21:16:26,604:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:26,606:INFO:Initializing load_model()
2023-10-12 21:16:26,606:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:26,612:INFO:Initializing load_model()
2023-10-12 21:16:26,612:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:26,616:INFO:Initializing load_model()
2023-10-12 21:16:26,616:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:26,617:INFO:Initializing load_model()
2023-10-12 21:16:26,618:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:16:26,659:INFO:Initializing predict_model()
2023-10-12 21:16:26,659:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28724c460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1786762f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 21:16:26,659:INFO:Checking exceptions
2023-10-12 21:16:26,659:INFO:Preloading libraries
2023-10-12 21:16:26,659:INFO:Set up data.
2023-10-12 21:16:26,667:INFO:Set up index.
2023-10-12 21:16:26,800:INFO:Initializing predict_model()
2023-10-12 21:16:26,801:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1785d2920>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 21:16:26,801:INFO:Checking exceptions
2023-10-12 21:16:26,801:INFO:Preloading libraries
2023-10-12 21:16:26,801:INFO:Set up data.
2023-10-12 21:16:26,805:INFO:Set up index.
2023-10-12 21:16:26,864:INFO:Initializing predict_model()
2023-10-12 21:16:26,864:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14fa6c190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 21:16:26,864:INFO:Checking exceptions
2023-10-12 21:16:26,864:INFO:Preloading libraries
2023-10-12 21:16:26,864:INFO:Set up data.
2023-10-12 21:16:26,868:INFO:Set up index.
2023-10-12 21:16:26,923:INFO:Initializing predict_model()
2023-10-12 21:16:26,923:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14fa6c190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 21:16:26,923:INFO:Checking exceptions
2023-10-12 21:16:26,923:INFO:Preloading libraries
2023-10-12 21:16:26,923:INFO:Set up data.
2023-10-12 21:16:26,927:INFO:Set up index.
2023-10-12 21:16:26,980:INFO:Initializing predict_model()
2023-10-12 21:16:26,980:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14fa6c190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x178676710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14f9f8c10>)
2023-10-12 21:16:26,980:INFO:Checking exceptions
2023-10-12 21:16:26,980:INFO:Preloading libraries
2023-10-12 21:16:26,981:INFO:Set up data.
2023-10-12 21:16:26,984:INFO:Set up index.
2023-10-12 21:21:24,624:INFO:Initializing load_model()
2023-10-12 21:21:24,625:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:21:24,644:INFO:Initializing load_model()
2023-10-12 21:21:24,644:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:21:24,653:INFO:Initializing load_model()
2023-10-12 21:21:24,653:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:21:24,656:INFO:Initializing load_model()
2023-10-12 21:21:24,656:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:21:24,658:INFO:Initializing load_model()
2023-10-12 21:21:24,658:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:21:27,493:INFO:Initializing load_model()
2023-10-12 21:21:27,494:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:21:27,496:INFO:Initializing load_model()
2023-10-12 21:21:27,496:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:21:27,499:INFO:Initializing load_model()
2023-10-12 21:21:27,499:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:21:27,501:INFO:Initializing load_model()
2023-10-12 21:21:27,501:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:21:27,503:INFO:Initializing load_model()
2023-10-12 21:21:27,503:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:23:16,050:INFO:Initializing load_model()
2023-10-12 21:23:16,050:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:23:16,053:INFO:Initializing load_model()
2023-10-12 21:23:16,053:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:23:16,055:INFO:Initializing load_model()
2023-10-12 21:23:16,056:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:23:16,057:INFO:Initializing load_model()
2023-10-12 21:23:16,057:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:23:16,059:INFO:Initializing load_model()
2023-10-12 21:23:16,059:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:30:18,806:INFO:Initializing load_model()
2023-10-12 21:30:18,809:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:30:18,827:INFO:Initializing load_model()
2023-10-12 21:30:18,828:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:30:18,841:INFO:Initializing load_model()
2023-10-12 21:30:18,841:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:30:18,843:INFO:Initializing load_model()
2023-10-12 21:30:18,843:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:30:18,845:INFO:Initializing load_model()
2023-10-12 21:30:18,845:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:19,332:INFO:Initializing load_model()
2023-10-12 21:31:19,333:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:19,337:INFO:Initializing load_model()
2023-10-12 21:31:19,337:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:19,345:INFO:Initializing load_model()
2023-10-12 21:31:19,345:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:19,347:INFO:Initializing load_model()
2023-10-12 21:31:19,347:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:19,349:INFO:Initializing load_model()
2023-10-12 21:31:19,349:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:58,085:INFO:Initializing load_model()
2023-10-12 21:31:58,085:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:58,088:INFO:Initializing load_model()
2023-10-12 21:31:58,088:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:58,094:INFO:Initializing load_model()
2023-10-12 21:31:58,094:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:58,098:INFO:Initializing load_model()
2023-10-12 21:31:58,098:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:31:58,101:INFO:Initializing load_model()
2023-10-12 21:31:58,101:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:08,321:INFO:Initializing load_model()
2023-10-12 21:32:08,322:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:08,325:INFO:Initializing load_model()
2023-10-12 21:32:08,325:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:08,328:INFO:Initializing load_model()
2023-10-12 21:32:08,328:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:08,330:INFO:Initializing load_model()
2023-10-12 21:32:08,330:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:08,332:INFO:Initializing load_model()
2023-10-12 21:32:08,332:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:56,652:INFO:Initializing load_model()
2023-10-12 21:32:56,652:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:56,656:INFO:Initializing load_model()
2023-10-12 21:32:56,656:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:56,661:INFO:Initializing load_model()
2023-10-12 21:32:56,661:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:56,663:INFO:Initializing load_model()
2023-10-12 21:32:56,663:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:32:56,667:INFO:Initializing load_model()
2023-10-12 21:32:56,667:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:33:03,468:INFO:Initializing load_model()
2023-10-12 21:33:03,468:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:33:03,476:INFO:Initializing load_model()
2023-10-12 21:33:03,476:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:33:03,478:INFO:Initializing load_model()
2023-10-12 21:33:03,478:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:33:03,481:INFO:Initializing load_model()
2023-10-12 21:33:03,481:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:33:03,483:INFO:Initializing load_model()
2023-10-12 21:33:03,483:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:34:15,570:INFO:Initializing load_model()
2023-10-12 21:34:15,570:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:34:15,576:INFO:Initializing load_model()
2023-10-12 21:34:15,576:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:34:15,580:INFO:Initializing load_model()
2023-10-12 21:34:15,580:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:34:15,583:INFO:Initializing load_model()
2023-10-12 21:34:15,583:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:34:15,586:INFO:Initializing load_model()
2023-10-12 21:34:15,586:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:08,693:INFO:Initializing load_model()
2023-10-12 21:35:08,694:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:08,696:INFO:Initializing load_model()
2023-10-12 21:35:08,696:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:08,698:INFO:Initializing load_model()
2023-10-12 21:35:08,698:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:08,700:INFO:Initializing load_model()
2023-10-12 21:35:08,700:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:08,701:INFO:Initializing load_model()
2023-10-12 21:35:08,701:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:17,684:INFO:Initializing load_model()
2023-10-12 21:35:17,684:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:17,687:INFO:Initializing load_model()
2023-10-12 21:35:17,687:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:17,696:INFO:Initializing load_model()
2023-10-12 21:35:17,696:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:17,699:INFO:Initializing load_model()
2023-10-12 21:35:17,699:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:35:17,701:INFO:Initializing load_model()
2023-10-12 21:35:17,701:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:36:51,603:INFO:Initializing load_model()
2023-10-12 21:36:51,604:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:36:51,608:INFO:Initializing load_model()
2023-10-12 21:36:51,609:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:36:51,613:INFO:Initializing load_model()
2023-10-12 21:36:51,614:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:36:51,617:INFO:Initializing load_model()
2023-10-12 21:36:51,617:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:36:51,619:INFO:Initializing load_model()
2023-10-12 21:36:51,620:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:37:57,706:INFO:Initializing load_model()
2023-10-12 21:37:57,706:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:37:57,709:INFO:Initializing load_model()
2023-10-12 21:37:57,709:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:37:57,712:INFO:Initializing load_model()
2023-10-12 21:37:57,712:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:37:57,714:INFO:Initializing load_model()
2023-10-12 21:37:57,714:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:37:57,718:INFO:Initializing load_model()
2023-10-12 21:37:57,718:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:40:12,500:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-12 21:40:12,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-12 21:40:12,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-12 21:40:12,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-12 21:40:12,670:INFO:Initializing load_model()
2023-10-12 21:40:12,670:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:40:12,783:INFO:Initializing load_model()
2023-10-12 21:40:12,783:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:40:12,789:INFO:Initializing load_model()
2023-10-12 21:40:12,789:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:40:12,792:INFO:Initializing load_model()
2023-10-12 21:40:12,792:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:40:12,793:INFO:Initializing load_model()
2023-10-12 21:40:12,793:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:45:50,248:INFO:Initializing load_model()
2023-10-12 21:45:50,249:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:45:50,266:INFO:Initializing load_model()
2023-10-12 21:45:50,266:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:45:50,277:INFO:Initializing load_model()
2023-10-12 21:45:50,277:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:45:50,279:INFO:Initializing load_model()
2023-10-12 21:45:50,279:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:45:50,282:INFO:Initializing load_model()
2023-10-12 21:45:50,282:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:50,804:INFO:Initializing load_model()
2023-10-12 21:47:50,805:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:50,813:INFO:Initializing load_model()
2023-10-12 21:47:50,813:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:50,818:INFO:Initializing load_model()
2023-10-12 21:47:50,818:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:50,821:INFO:Initializing load_model()
2023-10-12 21:47:50,821:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:50,824:INFO:Initializing load_model()
2023-10-12 21:47:50,824:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:54,990:INFO:Initializing load_model()
2023-10-12 21:47:54,990:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:54,992:INFO:Initializing load_model()
2023-10-12 21:47:54,992:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:54,993:INFO:Initializing load_model()
2023-10-12 21:47:54,993:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:54,995:INFO:Initializing load_model()
2023-10-12 21:47:54,995:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:47:54,996:INFO:Initializing load_model()
2023-10-12 21:47:54,996:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:16,809:INFO:Initializing load_model()
2023-10-12 21:48:16,809:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:16,812:INFO:Initializing load_model()
2023-10-12 21:48:16,812:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:16,816:INFO:Initializing load_model()
2023-10-12 21:48:16,816:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:16,818:INFO:Initializing load_model()
2023-10-12 21:48:16,818:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:16,820:INFO:Initializing load_model()
2023-10-12 21:48:16,820:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:33,839:INFO:Initializing load_model()
2023-10-12 21:48:33,840:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:33,842:INFO:Initializing load_model()
2023-10-12 21:48:33,842:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:33,845:INFO:Initializing load_model()
2023-10-12 21:48:33,845:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:33,847:INFO:Initializing load_model()
2023-10-12 21:48:33,847:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:33,848:INFO:Initializing load_model()
2023-10-12 21:48:33,848:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:37,759:INFO:Initializing load_model()
2023-10-12 21:48:37,759:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:37,760:INFO:Initializing load_model()
2023-10-12 21:48:37,760:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:37,761:INFO:Initializing load_model()
2023-10-12 21:48:37,761:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:37,763:INFO:Initializing load_model()
2023-10-12 21:48:37,763:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:48:37,764:INFO:Initializing load_model()
2023-10-12 21:48:37,764:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:18,704:INFO:Initializing load_model()
2023-10-12 21:49:18,704:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:18,708:INFO:Initializing load_model()
2023-10-12 21:49:18,708:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:18,711:INFO:Initializing load_model()
2023-10-12 21:49:18,711:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:18,713:INFO:Initializing load_model()
2023-10-12 21:49:18,713:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:18,715:INFO:Initializing load_model()
2023-10-12 21:49:18,715:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:32,594:INFO:Initializing load_model()
2023-10-12 21:49:32,595:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:32,598:INFO:Initializing load_model()
2023-10-12 21:49:32,598:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:32,600:INFO:Initializing load_model()
2023-10-12 21:49:32,600:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:32,603:INFO:Initializing load_model()
2023-10-12 21:49:32,603:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:49:32,605:INFO:Initializing load_model()
2023-10-12 21:49:32,605:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:50:23,306:INFO:Initializing load_model()
2023-10-12 21:50:23,306:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:50:23,310:INFO:Initializing load_model()
2023-10-12 21:50:23,310:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:50:23,312:INFO:Initializing load_model()
2023-10-12 21:50:23,312:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:50:23,314:INFO:Initializing load_model()
2023-10-12 21:50:23,314:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:50:23,317:INFO:Initializing load_model()
2023-10-12 21:50:23,317:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:58:38,243:INFO:Initializing load_model()
2023-10-12 21:58:38,243:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:58:38,253:INFO:Initializing load_model()
2023-10-12 21:58:38,253:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:58:38,260:INFO:Initializing load_model()
2023-10-12 21:58:38,260:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:58:38,263:INFO:Initializing load_model()
2023-10-12 21:58:38,263:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-12 21:58:38,264:INFO:Initializing load_model()
2023-10-12 21:58:38,264:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:28,783:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 08:58:28,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 08:58:28,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 08:58:28,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 08:58:28,916:INFO:Initializing load_model()
2023-10-13 08:58:28,916:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:29,119:INFO:Initializing load_model()
2023-10-13 08:58:29,119:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:29,125:INFO:Initializing load_model()
2023-10-13 08:58:29,125:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:29,127:INFO:Initializing load_model()
2023-10-13 08:58:29,128:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:29,130:INFO:Initializing load_model()
2023-10-13 08:58:29,130:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:30,230:INFO:Initializing load_model()
2023-10-13 08:58:30,230:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:30,231:INFO:Initializing load_model()
2023-10-13 08:58:30,231:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:30,232:INFO:Initializing load_model()
2023-10-13 08:58:30,232:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:30,234:INFO:Initializing load_model()
2023-10-13 08:58:30,234:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:30,235:INFO:Initializing load_model()
2023-10-13 08:58:30,235:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:39,454:INFO:Initializing load_model()
2023-10-13 08:58:39,454:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:39,456:INFO:Initializing load_model()
2023-10-13 08:58:39,456:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:39,458:INFO:Initializing load_model()
2023-10-13 08:58:39,458:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:39,459:INFO:Initializing load_model()
2023-10-13 08:58:39,459:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 08:58:39,461:INFO:Initializing load_model()
2023-10-13 08:58:39,461:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:02:15,257:INFO:Initializing load_model()
2023-10-13 09:02:15,258:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:02:15,262:INFO:Initializing load_model()
2023-10-13 09:02:15,262:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:02:15,266:INFO:Initializing load_model()
2023-10-13 09:02:15,266:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:02:15,268:INFO:Initializing load_model()
2023-10-13 09:02:15,268:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:02:15,271:INFO:Initializing load_model()
2023-10-13 09:02:15,271:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:02:15,286:INFO:Initializing predict_model()
2023-10-13 09:02:15,287:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284abf910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284abf130>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 09:02:15,287:INFO:Checking exceptions
2023-10-13 09:02:15,287:INFO:Preloading libraries
2023-10-13 09:02:15,287:INFO:Set up data.
2023-10-13 09:02:15,304:INFO:Set up index.
2023-10-13 09:02:15,474:INFO:Initializing predict_model()
2023-10-13 09:02:15,474:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1252ec520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 09:02:15,474:INFO:Checking exceptions
2023-10-13 09:02:15,474:INFO:Preloading libraries
2023-10-13 09:02:15,474:INFO:Set up data.
2023-10-13 09:02:15,480:INFO:Set up index.
2023-10-13 09:02:15,527:INFO:Initializing predict_model()
2023-10-13 09:02:15,528:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1252ec520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 09:02:15,528:INFO:Checking exceptions
2023-10-13 09:02:15,528:INFO:Preloading libraries
2023-10-13 09:02:15,528:INFO:Set up data.
2023-10-13 09:02:15,534:INFO:Set up index.
2023-10-13 09:02:15,578:INFO:Initializing predict_model()
2023-10-13 09:02:15,578:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1252ec520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 09:02:15,578:INFO:Checking exceptions
2023-10-13 09:02:15,578:INFO:Preloading libraries
2023-10-13 09:02:15,578:INFO:Set up data.
2023-10-13 09:02:15,584:INFO:Set up index.
2023-10-13 09:02:15,632:INFO:Initializing predict_model()
2023-10-13 09:02:15,632:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1252ec520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28448fe80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 09:02:15,632:INFO:Checking exceptions
2023-10-13 09:02:15,632:INFO:Preloading libraries
2023-10-13 09:02:15,632:INFO:Set up data.
2023-10-13 09:02:15,639:INFO:Set up index.
2023-10-13 09:18:17,048:INFO:Initializing load_model()
2023-10-13 09:18:17,048:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:18:17,062:INFO:Initializing load_model()
2023-10-13 09:18:17,062:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:18:17,071:INFO:Initializing load_model()
2023-10-13 09:18:17,071:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:18:17,073:INFO:Initializing load_model()
2023-10-13 09:18:17,073:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:18:17,075:INFO:Initializing load_model()
2023-10-13 09:18:17,075:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:18:17,101:INFO:Initializing predict_model()
2023-10-13 09:18:17,101:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125cdcbe0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284b0b0a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9f6d0>)
2023-10-13 09:18:17,101:INFO:Checking exceptions
2023-10-13 09:18:17,101:INFO:Preloading libraries
2023-10-13 09:18:17,101:INFO:Set up data.
2023-10-13 09:18:17,118:INFO:Set up index.
2023-10-13 09:18:17,327:INFO:Initializing predict_model()
2023-10-13 09:18:17,327:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28361bcd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9f6d0>)
2023-10-13 09:18:17,327:INFO:Checking exceptions
2023-10-13 09:18:17,327:INFO:Preloading libraries
2023-10-13 09:18:17,327:INFO:Set up data.
2023-10-13 09:18:17,334:INFO:Set up index.
2023-10-13 09:18:17,384:INFO:Initializing predict_model()
2023-10-13 09:18:17,384:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1252ec640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9f6d0>)
2023-10-13 09:18:17,384:INFO:Checking exceptions
2023-10-13 09:18:17,384:INFO:Preloading libraries
2023-10-13 09:18:17,384:INFO:Set up data.
2023-10-13 09:18:17,390:INFO:Set up index.
2023-10-13 09:18:17,435:INFO:Initializing predict_model()
2023-10-13 09:18:17,435:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1252ec640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9f6d0>)
2023-10-13 09:18:17,435:INFO:Checking exceptions
2023-10-13 09:18:17,435:INFO:Preloading libraries
2023-10-13 09:18:17,435:INFO:Set up data.
2023-10-13 09:18:17,441:INFO:Set up index.
2023-10-13 09:18:17,485:INFO:Initializing predict_model()
2023-10-13 09:18:17,485:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1252ec640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284abf070>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9f6d0>)
2023-10-13 09:18:17,485:INFO:Checking exceptions
2023-10-13 09:18:17,485:INFO:Preloading libraries
2023-10-13 09:18:17,485:INFO:Set up data.
2023-10-13 09:18:17,491:INFO:Set up index.
2023-10-13 09:18:27,114:INFO:Initializing load_model()
2023-10-13 09:18:27,114:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:18:27,117:INFO:Initializing load_model()
2023-10-13 09:18:27,117:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:18:27,121:INFO:Initializing load_model()
2023-10-13 09:18:27,121:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:18:27,129:INFO:Initializing load_model()
2023-10-13 09:18:27,129:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:18:27,131:INFO:Initializing load_model()
2023-10-13 09:18:27,131:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:20:48,507:INFO:Initializing load_model()
2023-10-13 09:20:48,509:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:20:48,523:INFO:Initializing load_model()
2023-10-13 09:20:48,523:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:20:48,533:INFO:Initializing load_model()
2023-10-13 09:20:48,533:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:20:48,536:INFO:Initializing load_model()
2023-10-13 09:20:48,536:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:20:48,538:INFO:Initializing load_model()
2023-10-13 09:20:48,538:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:21:57,025:WARNING:/Users/siina/Desktop/seah/svn/ProjectA/민식/app/pages/2.py:207: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  tmp_df['label'] = label_encoder.fit_transform(tmp_df['사내강종'])

2023-10-13 09:21:57,556:WARNING:/Users/siina/Desktop/seah/svn/ProjectA/민식/app/pages/2.py:207: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-10-13 09:21:58,094:WARNING:/Users/siina/Desktop/seah/svn/ProjectA/민식/app/pages/2.py:207: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-10-13 09:22:13,187:INFO:Initializing load_model()
2023-10-13 09:22:13,187:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:13,199:INFO:Initializing load_model()
2023-10-13 09:22:13,199:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:13,204:INFO:Initializing load_model()
2023-10-13 09:22:13,204:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:13,206:INFO:Initializing load_model()
2023-10-13 09:22:13,206:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:13,208:INFO:Initializing load_model()
2023-10-13 09:22:13,208:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:45,281:INFO:Initializing load_model()
2023-10-13 09:22:45,282:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:45,285:INFO:Initializing load_model()
2023-10-13 09:22:45,285:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:45,288:INFO:Initializing load_model()
2023-10-13 09:22:45,288:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:45,290:INFO:Initializing load_model()
2023-10-13 09:22:45,290:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:45,292:INFO:Initializing load_model()
2023-10-13 09:22:45,292:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:52,258:INFO:Initializing load_model()
2023-10-13 09:22:52,259:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:52,262:INFO:Initializing load_model()
2023-10-13 09:22:52,262:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:52,265:INFO:Initializing load_model()
2023-10-13 09:22:52,265:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:52,268:INFO:Initializing load_model()
2023-10-13 09:22:52,268:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:52,270:INFO:Initializing load_model()
2023-10-13 09:22:52,270:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:53,916:INFO:Initializing load_model()
2023-10-13 09:22:53,916:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:53,918:INFO:Initializing load_model()
2023-10-13 09:22:53,918:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:53,920:INFO:Initializing load_model()
2023-10-13 09:22:53,920:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:53,922:INFO:Initializing load_model()
2023-10-13 09:22:53,922:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:22:53,924:INFO:Initializing load_model()
2023-10-13 09:22:53,924:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:00,841:INFO:Initializing load_model()
2023-10-13 09:23:00,841:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:00,844:INFO:Initializing load_model()
2023-10-13 09:23:00,844:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:00,846:INFO:Initializing load_model()
2023-10-13 09:23:00,846:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:00,848:INFO:Initializing load_model()
2023-10-13 09:23:00,848:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:00,850:INFO:Initializing load_model()
2023-10-13 09:23:00,850:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:00,875:INFO:Initializing predict_model()
2023-10-13 09:23:00,876:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7cbe0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1707228f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 09:23:00,876:INFO:Checking exceptions
2023-10-13 09:23:00,876:INFO:Preloading libraries
2023-10-13 09:23:00,876:INFO:Set up data.
2023-10-13 09:23:00,884:INFO:Set up index.
2023-10-13 09:23:01,009:INFO:Initializing predict_model()
2023-10-13 09:23:01,009:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829d02b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 09:23:01,009:INFO:Checking exceptions
2023-10-13 09:23:01,009:INFO:Preloading libraries
2023-10-13 09:23:01,010:INFO:Set up data.
2023-10-13 09:23:01,014:INFO:Set up index.
2023-10-13 09:23:01,077:INFO:Initializing predict_model()
2023-10-13 09:23:01,077:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829d02b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 09:23:01,077:INFO:Checking exceptions
2023-10-13 09:23:01,077:INFO:Preloading libraries
2023-10-13 09:23:01,077:INFO:Set up data.
2023-10-13 09:23:01,082:INFO:Set up index.
2023-10-13 09:23:01,170:INFO:Initializing predict_model()
2023-10-13 09:23:01,170:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829d02b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 09:23:01,170:INFO:Checking exceptions
2023-10-13 09:23:01,170:INFO:Preloading libraries
2023-10-13 09:23:01,170:INFO:Set up data.
2023-10-13 09:23:01,175:INFO:Set up index.
2023-10-13 09:23:01,223:INFO:Initializing predict_model()
2023-10-13 09:23:01,223:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829d02b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284c7d3f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 09:23:01,223:INFO:Checking exceptions
2023-10-13 09:23:01,223:INFO:Preloading libraries
2023-10-13 09:23:01,223:INFO:Set up data.
2023-10-13 09:23:01,227:INFO:Set up index.
2023-10-13 09:23:54,210:INFO:Initializing load_model()
2023-10-13 09:23:54,211:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:54,214:INFO:Initializing load_model()
2023-10-13 09:23:54,214:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:54,217:INFO:Initializing load_model()
2023-10-13 09:23:54,217:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:54,219:INFO:Initializing load_model()
2023-10-13 09:23:54,219:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:54,221:INFO:Initializing load_model()
2023-10-13 09:23:54,221:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:23:54,231:INFO:Initializing predict_model()
2023-10-13 09:23:54,231:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1707211e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170723100>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 09:23:54,231:INFO:Checking exceptions
2023-10-13 09:23:54,231:INFO:Preloading libraries
2023-10-13 09:23:54,231:INFO:Set up data.
2023-10-13 09:23:54,240:INFO:Set up index.
2023-10-13 09:23:54,462:INFO:Initializing predict_model()
2023-10-13 09:23:54,462:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125b9c9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 09:23:54,462:INFO:Checking exceptions
2023-10-13 09:23:54,462:INFO:Preloading libraries
2023-10-13 09:23:54,462:INFO:Set up data.
2023-10-13 09:23:54,470:INFO:Set up index.
2023-10-13 09:23:54,539:INFO:Initializing predict_model()
2023-10-13 09:23:54,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125b9c9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 09:23:54,539:INFO:Checking exceptions
2023-10-13 09:23:54,539:INFO:Preloading libraries
2023-10-13 09:23:54,539:INFO:Set up data.
2023-10-13 09:23:54,546:INFO:Set up index.
2023-10-13 09:23:54,602:INFO:Initializing predict_model()
2023-10-13 09:23:54,602:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125b9c9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 09:23:54,602:INFO:Checking exceptions
2023-10-13 09:23:54,602:INFO:Preloading libraries
2023-10-13 09:23:54,602:INFO:Set up data.
2023-10-13 09:23:54,609:INFO:Set up index.
2023-10-13 09:23:54,660:INFO:Initializing predict_model()
2023-10-13 09:23:54,661:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125b9c9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282acf2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 09:23:54,661:INFO:Checking exceptions
2023-10-13 09:23:54,661:INFO:Preloading libraries
2023-10-13 09:23:54,661:INFO:Set up data.
2023-10-13 09:23:54,668:INFO:Set up index.
2023-10-13 09:24:25,022:INFO:Initializing load_model()
2023-10-13 09:24:25,025:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:25,037:INFO:Initializing load_model()
2023-10-13 09:24:25,037:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:25,045:INFO:Initializing load_model()
2023-10-13 09:24:25,046:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:25,052:INFO:Initializing load_model()
2023-10-13 09:24:25,053:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:25,056:INFO:Initializing load_model()
2023-10-13 09:24:25,056:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:26,486:INFO:Initializing load_model()
2023-10-13 09:24:26,486:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:26,494:INFO:Initializing load_model()
2023-10-13 09:24:26,494:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:26,503:INFO:Initializing load_model()
2023-10-13 09:24:26,503:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:26,504:INFO:Initializing load_model()
2023-10-13 09:24:26,504:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:26,506:INFO:Initializing load_model()
2023-10-13 09:24:26,506:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:24:26,516:INFO:Initializing predict_model()
2023-10-13 09:24:26,516:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170720d90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 09:24:26,516:INFO:Checking exceptions
2023-10-13 09:24:26,516:INFO:Preloading libraries
2023-10-13 09:24:26,516:INFO:Set up data.
2023-10-13 09:24:26,523:INFO:Set up index.
2023-10-13 09:24:26,640:INFO:Initializing predict_model()
2023-10-13 09:24:26,640:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125cdcc40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 09:24:26,640:INFO:Checking exceptions
2023-10-13 09:24:26,640:INFO:Preloading libraries
2023-10-13 09:24:26,640:INFO:Set up data.
2023-10-13 09:24:26,647:INFO:Set up index.
2023-10-13 09:24:26,702:INFO:Initializing predict_model()
2023-10-13 09:24:26,702:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125cdcc40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 09:24:26,702:INFO:Checking exceptions
2023-10-13 09:24:26,702:INFO:Preloading libraries
2023-10-13 09:24:26,702:INFO:Set up data.
2023-10-13 09:24:26,709:INFO:Set up index.
2023-10-13 09:24:26,766:INFO:Initializing predict_model()
2023-10-13 09:24:26,766:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125cdcc40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 09:24:26,766:INFO:Checking exceptions
2023-10-13 09:24:26,766:INFO:Preloading libraries
2023-10-13 09:24:26,767:INFO:Set up data.
2023-10-13 09:24:26,773:INFO:Set up index.
2023-10-13 09:24:26,824:INFO:Initializing predict_model()
2023-10-13 09:24:26,825:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125cdcc40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1706efcd0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 09:24:26,825:INFO:Checking exceptions
2023-10-13 09:24:26,825:INFO:Preloading libraries
2023-10-13 09:24:26,825:INFO:Set up data.
2023-10-13 09:24:26,831:INFO:Set up index.
2023-10-13 09:34:55,597:INFO:Initializing load_model()
2023-10-13 09:34:55,599:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:34:55,620:INFO:Initializing load_model()
2023-10-13 09:34:55,620:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:34:55,629:INFO:Initializing load_model()
2023-10-13 09:34:55,629:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:34:55,636:INFO:Initializing load_model()
2023-10-13 09:34:55,637:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:34:55,641:INFO:Initializing load_model()
2023-10-13 09:34:55,641:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 09:34:55,676:INFO:Initializing predict_model()
2023-10-13 09:34:55,676:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284abf280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170722140>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 09:34:55,676:INFO:Checking exceptions
2023-10-13 09:34:55,676:INFO:Preloading libraries
2023-10-13 09:34:55,680:INFO:Set up data.
2023-10-13 09:34:55,718:INFO:Set up index.
2023-10-13 09:34:56,011:INFO:Initializing predict_model()
2023-10-13 09:34:56,011:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284abf280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 09:34:56,011:INFO:Checking exceptions
2023-10-13 09:34:56,011:INFO:Preloading libraries
2023-10-13 09:34:56,011:INFO:Set up data.
2023-10-13 09:34:56,028:INFO:Set up index.
2023-10-13 09:34:56,099:INFO:Initializing predict_model()
2023-10-13 09:34:56,100:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284abf280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 09:34:56,100:INFO:Checking exceptions
2023-10-13 09:34:56,100:INFO:Preloading libraries
2023-10-13 09:34:56,100:INFO:Set up data.
2023-10-13 09:34:56,106:INFO:Set up index.
2023-10-13 09:34:56,161:INFO:Initializing predict_model()
2023-10-13 09:34:56,162:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284abf280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 09:34:56,162:INFO:Checking exceptions
2023-10-13 09:34:56,162:INFO:Preloading libraries
2023-10-13 09:34:56,162:INFO:Set up data.
2023-10-13 09:34:56,168:INFO:Set up index.
2023-10-13 09:34:56,223:INFO:Initializing predict_model()
2023-10-13 09:34:56,223:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284abf280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282a62b00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 09:34:56,223:INFO:Checking exceptions
2023-10-13 09:34:56,223:INFO:Preloading libraries
2023-10-13 09:34:56,223:INFO:Set up data.
2023-10-13 09:34:56,230:INFO:Set up index.
2023-10-13 10:04:55,793:INFO:Initializing load_model()
2023-10-13 10:04:55,797:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:04:55,861:INFO:Initializing load_model()
2023-10-13 10:04:55,861:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:04:55,870:INFO:Initializing load_model()
2023-10-13 10:04:55,870:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:04:55,873:INFO:Initializing load_model()
2023-10-13 10:04:55,873:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:04:55,875:INFO:Initializing load_model()
2023-10-13 10:04:55,875:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:00,706:INFO:Initializing load_model()
2023-10-13 10:05:00,707:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:00,735:INFO:Initializing load_model()
2023-10-13 10:05:00,735:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:00,739:INFO:Initializing load_model()
2023-10-13 10:05:00,739:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:00,741:INFO:Initializing load_model()
2023-10-13 10:05:00,741:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:00,743:INFO:Initializing load_model()
2023-10-13 10:05:00,743:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:00,780:INFO:Initializing predict_model()
2023-10-13 10:05:00,780:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282acc760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125694af0>)
2023-10-13 10:05:00,780:INFO:Checking exceptions
2023-10-13 10:05:00,780:INFO:Preloading libraries
2023-10-13 10:05:00,780:INFO:Set up data.
2023-10-13 10:05:00,810:INFO:Set up index.
2023-10-13 10:05:00,944:INFO:Initializing predict_model()
2023-10-13 10:05:00,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125cdcac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:05:00,944:INFO:Checking exceptions
2023-10-13 10:05:00,944:INFO:Preloading libraries
2023-10-13 10:05:00,944:INFO:Set up data.
2023-10-13 10:05:00,951:INFO:Set up index.
2023-10-13 10:05:01,002:INFO:Initializing predict_model()
2023-10-13 10:05:01,002:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x281c7f8e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:05:01,002:INFO:Checking exceptions
2023-10-13 10:05:01,002:INFO:Preloading libraries
2023-10-13 10:05:01,002:INFO:Set up data.
2023-10-13 10:05:01,008:INFO:Set up index.
2023-10-13 10:05:01,058:INFO:Initializing predict_model()
2023-10-13 10:05:01,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x281c7f8e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:05:01,058:INFO:Checking exceptions
2023-10-13 10:05:01,058:INFO:Preloading libraries
2023-10-13 10:05:01,058:INFO:Set up data.
2023-10-13 10:05:01,064:INFO:Set up index.
2023-10-13 10:05:01,112:INFO:Initializing predict_model()
2023-10-13 10:05:01,112:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x281c7f8e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282acd6c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:05:01,112:INFO:Checking exceptions
2023-10-13 10:05:01,112:INFO:Preloading libraries
2023-10-13 10:05:01,112:INFO:Set up data.
2023-10-13 10:05:01,122:INFO:Set up index.
2023-10-13 10:05:44,056:INFO:Initializing load_model()
2023-10-13 10:05:44,056:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:44,060:INFO:Initializing load_model()
2023-10-13 10:05:44,060:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:44,063:INFO:Initializing load_model()
2023-10-13 10:05:44,063:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:44,065:INFO:Initializing load_model()
2023-10-13 10:05:44,065:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:44,067:INFO:Initializing load_model()
2023-10-13 10:05:44,067:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:44,075:INFO:Initializing predict_model()
2023-10-13 10:05:44,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28295b490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282a6cd00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:05:44,075:INFO:Checking exceptions
2023-10-13 10:05:44,075:INFO:Preloading libraries
2023-10-13 10:05:44,075:INFO:Set up data.
2023-10-13 10:05:44,082:INFO:Set up index.
2023-10-13 10:05:44,167:INFO:Initializing predict_model()
2023-10-13 10:05:44,167:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a6ccd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:05:44,167:INFO:Checking exceptions
2023-10-13 10:05:44,167:INFO:Preloading libraries
2023-10-13 10:05:44,167:INFO:Set up data.
2023-10-13 10:05:44,173:INFO:Set up index.
2023-10-13 10:05:44,229:INFO:Initializing predict_model()
2023-10-13 10:05:44,229:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b09ea0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:05:44,230:INFO:Checking exceptions
2023-10-13 10:05:44,230:INFO:Preloading libraries
2023-10-13 10:05:44,230:INFO:Set up data.
2023-10-13 10:05:44,237:INFO:Set up index.
2023-10-13 10:05:44,285:INFO:Initializing predict_model()
2023-10-13 10:05:44,285:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829a3310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:05:44,285:INFO:Checking exceptions
2023-10-13 10:05:44,285:INFO:Preloading libraries
2023-10-13 10:05:44,286:INFO:Set up data.
2023-10-13 10:05:44,291:INFO:Set up index.
2023-10-13 10:05:44,340:INFO:Initializing predict_model()
2023-10-13 10:05:44,340:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829a3310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1706ef730>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:05:44,340:INFO:Checking exceptions
2023-10-13 10:05:44,340:INFO:Preloading libraries
2023-10-13 10:05:44,340:INFO:Set up data.
2023-10-13 10:05:44,346:INFO:Set up index.
2023-10-13 10:05:46,991:INFO:Initializing load_model()
2023-10-13 10:05:46,991:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:46,997:INFO:Initializing load_model()
2023-10-13 10:05:46,997:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:46,999:INFO:Initializing load_model()
2023-10-13 10:05:46,999:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:47,000:INFO:Initializing load_model()
2023-10-13 10:05:47,000:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:47,002:INFO:Initializing load_model()
2023-10-13 10:05:47,002:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:05:47,009:INFO:Initializing predict_model()
2023-10-13 10:05:47,009:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1706edd20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1706ed480>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9750>)
2023-10-13 10:05:47,009:INFO:Checking exceptions
2023-10-13 10:05:47,009:INFO:Preloading libraries
2023-10-13 10:05:47,010:INFO:Set up data.
2023-10-13 10:05:47,017:INFO:Set up index.
2023-10-13 10:05:47,066:INFO:Initializing predict_model()
2023-10-13 10:05:47,066:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a6c550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:05:47,066:INFO:Checking exceptions
2023-10-13 10:05:47,066:INFO:Preloading libraries
2023-10-13 10:05:47,066:INFO:Set up data.
2023-10-13 10:05:47,072:INFO:Set up index.
2023-10-13 10:05:47,123:INFO:Initializing predict_model()
2023-10-13 10:05:47,123:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b081c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:05:47,123:INFO:Checking exceptions
2023-10-13 10:05:47,123:INFO:Preloading libraries
2023-10-13 10:05:47,123:INFO:Set up data.
2023-10-13 10:05:47,130:INFO:Set up index.
2023-10-13 10:05:47,177:INFO:Initializing predict_model()
2023-10-13 10:05:47,177:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829580d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:05:47,177:INFO:Checking exceptions
2023-10-13 10:05:47,177:INFO:Preloading libraries
2023-10-13 10:05:47,177:INFO:Set up data.
2023-10-13 10:05:47,183:INFO:Set up index.
2023-10-13 10:05:47,231:INFO:Initializing predict_model()
2023-10-13 10:05:47,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e5d20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282a6cc40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:05:47,232:INFO:Checking exceptions
2023-10-13 10:05:47,232:INFO:Preloading libraries
2023-10-13 10:05:47,232:INFO:Set up data.
2023-10-13 10:05:47,238:INFO:Set up index.
2023-10-13 10:06:18,679:INFO:Initializing load_model()
2023-10-13 10:06:18,683:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:06:18,715:INFO:Initializing load_model()
2023-10-13 10:06:18,715:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:06:18,729:INFO:Initializing load_model()
2023-10-13 10:06:18,730:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:06:18,739:INFO:Initializing load_model()
2023-10-13 10:06:18,739:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:06:18,748:INFO:Initializing load_model()
2023-10-13 10:06:18,748:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:06:18,780:INFO:Initializing predict_model()
2023-10-13 10:06:18,781:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e29060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1706ee9b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 10:06:18,781:INFO:Checking exceptions
2023-10-13 10:06:18,781:INFO:Preloading libraries
2023-10-13 10:06:18,782:INFO:Set up data.
2023-10-13 10:06:18,820:INFO:Set up index.
2023-10-13 10:06:19,343:INFO:Initializing predict_model()
2023-10-13 10:06:19,343:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a630d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 10:06:19,343:INFO:Checking exceptions
2023-10-13 10:06:19,343:INFO:Preloading libraries
2023-10-13 10:06:19,343:INFO:Set up data.
2023-10-13 10:06:19,358:INFO:Set up index.
2023-10-13 10:06:19,463:INFO:Initializing predict_model()
2023-10-13 10:06:19,463:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829a0b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 10:06:19,463:INFO:Checking exceptions
2023-10-13 10:06:19,463:INFO:Preloading libraries
2023-10-13 10:06:19,464:INFO:Set up data.
2023-10-13 10:06:19,473:INFO:Set up index.
2023-10-13 10:06:19,549:INFO:Initializing predict_model()
2023-10-13 10:06:19,549:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829a0b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 10:06:19,549:INFO:Checking exceptions
2023-10-13 10:06:19,549:INFO:Preloading libraries
2023-10-13 10:06:19,549:INFO:Set up data.
2023-10-13 10:06:19,556:INFO:Set up index.
2023-10-13 10:06:19,630:INFO:Initializing predict_model()
2023-10-13 10:06:19,630:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829a0b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284c7c340>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 10:06:19,630:INFO:Checking exceptions
2023-10-13 10:06:19,630:INFO:Preloading libraries
2023-10-13 10:06:19,631:INFO:Set up data.
2023-10-13 10:06:19,637:INFO:Set up index.
2023-10-13 10:07:29,674:INFO:Initializing load_model()
2023-10-13 10:07:29,674:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:07:29,680:INFO:Initializing load_model()
2023-10-13 10:07:29,680:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:07:29,684:INFO:Initializing load_model()
2023-10-13 10:07:29,684:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:07:29,686:INFO:Initializing load_model()
2023-10-13 10:07:29,686:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:07:29,688:INFO:Initializing load_model()
2023-10-13 10:07:29,688:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:07:29,699:INFO:Initializing predict_model()
2023-10-13 10:07:29,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2ab90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28295ed40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:07:29,699:INFO:Checking exceptions
2023-10-13 10:07:29,699:INFO:Preloading libraries
2023-10-13 10:07:29,699:INFO:Set up data.
2023-10-13 10:07:29,706:INFO:Set up index.
2023-10-13 10:07:29,812:INFO:Initializing predict_model()
2023-10-13 10:07:29,812:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125bedf30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:07:29,812:INFO:Checking exceptions
2023-10-13 10:07:29,812:INFO:Preloading libraries
2023-10-13 10:07:29,813:INFO:Set up data.
2023-10-13 10:07:29,818:INFO:Set up index.
2023-10-13 10:07:29,866:INFO:Initializing predict_model()
2023-10-13 10:07:29,866:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125bedf30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:07:29,866:INFO:Checking exceptions
2023-10-13 10:07:29,866:INFO:Preloading libraries
2023-10-13 10:07:29,866:INFO:Set up data.
2023-10-13 10:07:29,872:INFO:Set up index.
2023-10-13 10:07:29,919:INFO:Initializing predict_model()
2023-10-13 10:07:29,919:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125bedf30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:07:29,919:INFO:Checking exceptions
2023-10-13 10:07:29,919:INFO:Preloading libraries
2023-10-13 10:07:29,919:INFO:Set up data.
2023-10-13 10:07:29,925:INFO:Set up index.
2023-10-13 10:07:29,971:INFO:Initializing predict_model()
2023-10-13 10:07:29,971:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125bedf30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28295faf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:07:29,971:INFO:Checking exceptions
2023-10-13 10:07:29,971:INFO:Preloading libraries
2023-10-13 10:07:29,971:INFO:Set up data.
2023-10-13 10:07:29,977:INFO:Set up index.
2023-10-13 10:09:33,985:INFO:Initializing load_model()
2023-10-13 10:09:33,985:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:09:33,990:INFO:Initializing load_model()
2023-10-13 10:09:33,990:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:09:33,992:INFO:Initializing load_model()
2023-10-13 10:09:33,992:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:09:33,994:INFO:Initializing load_model()
2023-10-13 10:09:33,994:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:09:33,996:INFO:Initializing load_model()
2023-10-13 10:09:33,996:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:09:34,009:INFO:Initializing predict_model()
2023-10-13 10:09:34,009:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28295fb20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28295fb50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696a70>)
2023-10-13 10:09:34,009:INFO:Checking exceptions
2023-10-13 10:09:34,009:INFO:Preloading libraries
2023-10-13 10:09:34,009:INFO:Set up data.
2023-10-13 10:09:34,016:INFO:Set up index.
2023-10-13 10:09:34,114:INFO:Initializing predict_model()
2023-10-13 10:09:34,115:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28448edd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:09:34,115:INFO:Checking exceptions
2023-10-13 10:09:34,115:INFO:Preloading libraries
2023-10-13 10:09:34,115:INFO:Set up data.
2023-10-13 10:09:34,121:INFO:Set up index.
2023-10-13 10:09:34,176:INFO:Initializing predict_model()
2023-10-13 10:09:34,176:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28448edd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:09:34,176:INFO:Checking exceptions
2023-10-13 10:09:34,176:INFO:Preloading libraries
2023-10-13 10:09:34,177:INFO:Set up data.
2023-10-13 10:09:34,183:INFO:Set up index.
2023-10-13 10:09:34,232:INFO:Initializing predict_model()
2023-10-13 10:09:34,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28448edd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:09:34,232:INFO:Checking exceptions
2023-10-13 10:09:34,232:INFO:Preloading libraries
2023-10-13 10:09:34,233:INFO:Set up data.
2023-10-13 10:09:34,239:INFO:Set up index.
2023-10-13 10:09:34,285:INFO:Initializing predict_model()
2023-10-13 10:09:34,285:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28448edd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282ace530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:09:34,285:INFO:Checking exceptions
2023-10-13 10:09:34,285:INFO:Preloading libraries
2023-10-13 10:09:34,285:INFO:Set up data.
2023-10-13 10:09:34,291:INFO:Set up index.
2023-10-13 10:11:59,137:INFO:Initializing load_model()
2023-10-13 10:11:59,137:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:11:59,141:INFO:Initializing load_model()
2023-10-13 10:11:59,141:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:11:59,143:INFO:Initializing load_model()
2023-10-13 10:11:59,143:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:11:59,145:INFO:Initializing load_model()
2023-10-13 10:11:59,145:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:11:59,146:INFO:Initializing load_model()
2023-10-13 10:11:59,146:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:11:59,156:INFO:Initializing predict_model()
2023-10-13 10:11:59,156:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1706efa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1706ee770>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:11:59,157:INFO:Checking exceptions
2023-10-13 10:11:59,157:INFO:Preloading libraries
2023-10-13 10:11:59,157:INFO:Set up data.
2023-10-13 10:11:59,166:INFO:Set up index.
2023-10-13 10:11:59,265:INFO:Initializing predict_model()
2023-10-13 10:11:59,265:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829a04f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:11:59,265:INFO:Checking exceptions
2023-10-13 10:11:59,265:INFO:Preloading libraries
2023-10-13 10:11:59,265:INFO:Set up data.
2023-10-13 10:11:59,272:INFO:Set up index.
2023-10-13 10:11:59,321:INFO:Initializing predict_model()
2023-10-13 10:11:59,322:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829a04f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:11:59,322:INFO:Checking exceptions
2023-10-13 10:11:59,322:INFO:Preloading libraries
2023-10-13 10:11:59,322:INFO:Set up data.
2023-10-13 10:11:59,328:INFO:Set up index.
2023-10-13 10:11:59,378:INFO:Initializing predict_model()
2023-10-13 10:11:59,378:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829a04f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:11:59,378:INFO:Checking exceptions
2023-10-13 10:11:59,378:INFO:Preloading libraries
2023-10-13 10:11:59,379:INFO:Set up data.
2023-10-13 10:11:59,385:INFO:Set up index.
2023-10-13 10:11:59,432:INFO:Initializing predict_model()
2023-10-13 10:11:59,432:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2829a04f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2844ff970>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:11:59,432:INFO:Checking exceptions
2023-10-13 10:11:59,432:INFO:Preloading libraries
2023-10-13 10:11:59,432:INFO:Set up data.
2023-10-13 10:11:59,438:INFO:Set up index.
2023-10-13 10:23:19,896:INFO:Initializing load_model()
2023-10-13 10:23:19,897:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:23:19,909:INFO:Initializing load_model()
2023-10-13 10:23:19,909:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:23:19,917:INFO:Initializing load_model()
2023-10-13 10:23:19,917:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:23:19,919:INFO:Initializing load_model()
2023-10-13 10:23:19,919:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:23:19,921:INFO:Initializing load_model()
2023-10-13 10:23:19,922:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:23:19,953:INFO:Initializing predict_model()
2023-10-13 10:23:19,953:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28448e200>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2844fc4f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:23:19,953:INFO:Checking exceptions
2023-10-13 10:23:19,953:INFO:Preloading libraries
2023-10-13 10:23:19,954:INFO:Set up data.
2023-10-13 10:23:19,975:INFO:Set up index.
2023-10-13 10:23:20,308:INFO:Initializing predict_model()
2023-10-13 10:23:20,308:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844fd000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:23:20,308:INFO:Checking exceptions
2023-10-13 10:23:20,308:INFO:Preloading libraries
2023-10-13 10:23:20,308:INFO:Set up data.
2023-10-13 10:23:20,314:INFO:Set up index.
2023-10-13 10:23:20,364:INFO:Initializing predict_model()
2023-10-13 10:23:20,364:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844fd000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:23:20,364:INFO:Checking exceptions
2023-10-13 10:23:20,364:INFO:Preloading libraries
2023-10-13 10:23:20,364:INFO:Set up data.
2023-10-13 10:23:20,370:INFO:Set up index.
2023-10-13 10:23:20,422:INFO:Initializing predict_model()
2023-10-13 10:23:20,422:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844fd000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:23:20,422:INFO:Checking exceptions
2023-10-13 10:23:20,422:INFO:Preloading libraries
2023-10-13 10:23:20,422:INFO:Set up data.
2023-10-13 10:23:20,429:INFO:Set up index.
2023-10-13 10:23:20,476:INFO:Initializing predict_model()
2023-10-13 10:23:20,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844fd000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28295ec20>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 10:23:20,476:INFO:Checking exceptions
2023-10-13 10:23:20,476:INFO:Preloading libraries
2023-10-13 10:23:20,476:INFO:Set up data.
2023-10-13 10:23:20,482:INFO:Set up index.
2023-10-13 10:25:46,520:INFO:Initializing load_model()
2023-10-13 10:25:46,521:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:25:46,526:INFO:Initializing load_model()
2023-10-13 10:25:46,526:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:25:46,528:INFO:Initializing load_model()
2023-10-13 10:25:46,528:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:25:46,530:INFO:Initializing load_model()
2023-10-13 10:25:46,530:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:25:46,532:INFO:Initializing load_model()
2023-10-13 10:25:46,532:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:25:46,544:INFO:Initializing predict_model()
2023-10-13 10:25:46,544:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1706ef790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2844fcf40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566b910>)
2023-10-13 10:25:46,544:INFO:Checking exceptions
2023-10-13 10:25:46,544:INFO:Preloading libraries
2023-10-13 10:25:46,544:INFO:Set up data.
2023-10-13 10:25:46,561:INFO:Set up index.
2023-10-13 10:25:46,681:INFO:Initializing predict_model()
2023-10-13 10:25:46,681:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844ff640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696560>)
2023-10-13 10:25:46,682:INFO:Checking exceptions
2023-10-13 10:25:46,682:INFO:Preloading libraries
2023-10-13 10:25:46,682:INFO:Set up data.
2023-10-13 10:25:46,701:INFO:Set up index.
2023-10-13 10:25:46,762:INFO:Initializing predict_model()
2023-10-13 10:25:46,762:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1706effd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696560>)
2023-10-13 10:25:46,762:INFO:Checking exceptions
2023-10-13 10:25:46,762:INFO:Preloading libraries
2023-10-13 10:25:46,762:INFO:Set up data.
2023-10-13 10:25:46,768:INFO:Set up index.
2023-10-13 10:25:46,821:INFO:Initializing predict_model()
2023-10-13 10:25:46,821:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1706effd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696560>)
2023-10-13 10:25:46,821:INFO:Checking exceptions
2023-10-13 10:25:46,821:INFO:Preloading libraries
2023-10-13 10:25:46,821:INFO:Set up data.
2023-10-13 10:25:46,827:INFO:Set up index.
2023-10-13 10:25:46,875:INFO:Initializing predict_model()
2023-10-13 10:25:46,875:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1706effd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x16f7e4760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696560>)
2023-10-13 10:25:46,875:INFO:Checking exceptions
2023-10-13 10:25:46,875:INFO:Preloading libraries
2023-10-13 10:25:46,875:INFO:Set up data.
2023-10-13 10:25:46,881:INFO:Set up index.
2023-10-13 10:26:15,131:INFO:Initializing load_model()
2023-10-13 10:26:15,133:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:26:15,150:INFO:Initializing load_model()
2023-10-13 10:26:15,151:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:26:15,162:INFO:Initializing load_model()
2023-10-13 10:26:15,162:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:26:15,165:INFO:Initializing load_model()
2023-10-13 10:26:15,165:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:26:15,169:INFO:Initializing load_model()
2023-10-13 10:26:15,169:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:26:15,191:INFO:Initializing predict_model()
2023-10-13 10:26:15,191:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1706ee7a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282ace530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566ad40>)
2023-10-13 10:26:15,191:INFO:Checking exceptions
2023-10-13 10:26:15,191:INFO:Preloading libraries
2023-10-13 10:26:15,192:INFO:Set up data.
2023-10-13 10:26:15,214:INFO:Set up index.
2023-10-13 10:26:15,489:INFO:Initializing predict_model()
2023-10-13 10:26:15,489:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a63370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 10:26:15,489:INFO:Checking exceptions
2023-10-13 10:26:15,489:INFO:Preloading libraries
2023-10-13 10:26:15,490:INFO:Set up data.
2023-10-13 10:26:15,498:INFO:Set up index.
2023-10-13 10:26:15,644:INFO:Initializing predict_model()
2023-10-13 10:26:15,644:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a63370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 10:26:15,644:INFO:Checking exceptions
2023-10-13 10:26:15,644:INFO:Preloading libraries
2023-10-13 10:26:15,645:INFO:Set up data.
2023-10-13 10:26:15,654:INFO:Set up index.
2023-10-13 10:26:15,734:INFO:Initializing predict_model()
2023-10-13 10:26:15,734:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a63370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 10:26:15,734:INFO:Checking exceptions
2023-10-13 10:26:15,734:INFO:Preloading libraries
2023-10-13 10:26:15,734:INFO:Set up data.
2023-10-13 10:26:15,743:INFO:Set up index.
2023-10-13 10:26:15,814:INFO:Initializing predict_model()
2023-10-13 10:26:15,814:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a63370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282acf370>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 10:26:15,814:INFO:Checking exceptions
2023-10-13 10:26:15,814:INFO:Preloading libraries
2023-10-13 10:26:15,814:INFO:Set up data.
2023-10-13 10:26:15,821:INFO:Set up index.
2023-10-13 10:28:42,708:INFO:Initializing load_model()
2023-10-13 10:28:42,711:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:28:42,726:INFO:Initializing load_model()
2023-10-13 10:28:42,726:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:28:42,733:INFO:Initializing load_model()
2023-10-13 10:28:42,733:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:28:42,736:INFO:Initializing load_model()
2023-10-13 10:28:42,736:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:28:42,738:INFO:Initializing load_model()
2023-10-13 10:28:42,738:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:28:42,770:INFO:Initializing predict_model()
2023-10-13 10:28:42,770:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e6950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x16f7e7880>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:28:42,770:INFO:Checking exceptions
2023-10-13 10:28:42,770:INFO:Preloading libraries
2023-10-13 10:28:42,771:INFO:Set up data.
2023-10-13 10:28:42,797:INFO:Set up index.
2023-10-13 10:28:43,047:INFO:Initializing predict_model()
2023-10-13 10:28:43,047:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844fcb20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:28:43,047:INFO:Checking exceptions
2023-10-13 10:28:43,047:INFO:Preloading libraries
2023-10-13 10:28:43,047:INFO:Set up data.
2023-10-13 10:28:43,054:INFO:Set up index.
2023-10-13 10:28:43,107:INFO:Initializing predict_model()
2023-10-13 10:28:43,107:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e6950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:28:43,107:INFO:Checking exceptions
2023-10-13 10:28:43,107:INFO:Preloading libraries
2023-10-13 10:28:43,107:INFO:Set up data.
2023-10-13 10:28:43,113:INFO:Set up index.
2023-10-13 10:28:43,162:INFO:Initializing predict_model()
2023-10-13 10:28:43,162:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e6950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:28:43,162:INFO:Checking exceptions
2023-10-13 10:28:43,162:INFO:Preloading libraries
2023-10-13 10:28:43,162:INFO:Set up data.
2023-10-13 10:28:43,168:INFO:Set up index.
2023-10-13 10:28:43,225:INFO:Initializing predict_model()
2023-10-13 10:28:43,225:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e6950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282acea70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a25e10>)
2023-10-13 10:28:43,225:INFO:Checking exceptions
2023-10-13 10:28:43,225:INFO:Preloading libraries
2023-10-13 10:28:43,225:INFO:Set up data.
2023-10-13 10:28:43,231:INFO:Set up index.
2023-10-13 10:30:43,409:INFO:Initializing load_model()
2023-10-13 10:30:43,409:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:30:43,414:INFO:Initializing load_model()
2023-10-13 10:30:43,415:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:30:43,417:INFO:Initializing load_model()
2023-10-13 10:30:43,418:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:30:43,420:INFO:Initializing load_model()
2023-10-13 10:30:43,420:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:30:43,422:INFO:Initializing load_model()
2023-10-13 10:30:43,422:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:30:43,431:INFO:Initializing predict_model()
2023-10-13 10:30:43,431:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d56d40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170720580>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:30:43,431:INFO:Checking exceptions
2023-10-13 10:30:43,431:INFO:Preloading libraries
2023-10-13 10:30:43,432:INFO:Set up data.
2023-10-13 10:30:43,439:INFO:Set up index.
2023-10-13 10:30:43,574:INFO:Initializing predict_model()
2023-10-13 10:30:43,574:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a6d390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:30:43,574:INFO:Checking exceptions
2023-10-13 10:30:43,574:INFO:Preloading libraries
2023-10-13 10:30:43,574:INFO:Set up data.
2023-10-13 10:30:43,580:INFO:Set up index.
2023-10-13 10:30:43,627:INFO:Initializing predict_model()
2023-10-13 10:30:43,627:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a6d390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:30:43,627:INFO:Checking exceptions
2023-10-13 10:30:43,627:INFO:Preloading libraries
2023-10-13 10:30:43,627:INFO:Set up data.
2023-10-13 10:30:43,633:INFO:Set up index.
2023-10-13 10:30:43,681:INFO:Initializing predict_model()
2023-10-13 10:30:43,681:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a6d390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:30:43,681:INFO:Checking exceptions
2023-10-13 10:30:43,681:INFO:Preloading libraries
2023-10-13 10:30:43,681:INFO:Set up data.
2023-10-13 10:30:43,687:INFO:Set up index.
2023-10-13 10:30:43,734:INFO:Initializing predict_model()
2023-10-13 10:30:43,734:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282a6d390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1707229b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:30:43,735:INFO:Checking exceptions
2023-10-13 10:30:43,735:INFO:Preloading libraries
2023-10-13 10:30:43,735:INFO:Set up data.
2023-10-13 10:30:43,740:INFO:Set up index.
2023-10-13 10:31:24,239:INFO:Initializing load_model()
2023-10-13 10:31:24,239:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:24,241:INFO:Initializing load_model()
2023-10-13 10:31:24,241:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:24,243:INFO:Initializing load_model()
2023-10-13 10:31:24,243:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:24,245:INFO:Initializing load_model()
2023-10-13 10:31:24,245:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:24,247:INFO:Initializing load_model()
2023-10-13 10:31:24,247:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:24,257:INFO:Initializing predict_model()
2023-10-13 10:31:24,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28295df90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d55810>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696a70>)
2023-10-13 10:31:24,257:INFO:Checking exceptions
2023-10-13 10:31:24,257:INFO:Preloading libraries
2023-10-13 10:31:24,257:INFO:Set up data.
2023-10-13 10:31:24,264:INFO:Set up index.
2023-10-13 10:31:24,357:INFO:Initializing predict_model()
2023-10-13 10:31:24,357:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e72e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 10:31:24,357:INFO:Checking exceptions
2023-10-13 10:31:24,357:INFO:Preloading libraries
2023-10-13 10:31:24,357:INFO:Set up data.
2023-10-13 10:31:24,365:INFO:Set up index.
2023-10-13 10:31:24,417:INFO:Initializing predict_model()
2023-10-13 10:31:24,417:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e72e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 10:31:24,418:INFO:Checking exceptions
2023-10-13 10:31:24,418:INFO:Preloading libraries
2023-10-13 10:31:24,418:INFO:Set up data.
2023-10-13 10:31:24,424:INFO:Set up index.
2023-10-13 10:31:24,471:INFO:Initializing predict_model()
2023-10-13 10:31:24,471:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e72e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 10:31:24,471:INFO:Checking exceptions
2023-10-13 10:31:24,471:INFO:Preloading libraries
2023-10-13 10:31:24,471:INFO:Set up data.
2023-10-13 10:31:24,477:INFO:Set up index.
2023-10-13 10:31:24,524:INFO:Initializing predict_model()
2023-10-13 10:31:24,525:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e72e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d57a90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 10:31:24,525:INFO:Checking exceptions
2023-10-13 10:31:24,525:INFO:Preloading libraries
2023-10-13 10:31:24,525:INFO:Set up data.
2023-10-13 10:31:24,531:INFO:Set up index.
2023-10-13 10:31:37,567:INFO:Initializing load_model()
2023-10-13 10:31:37,568:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:37,574:INFO:Initializing load_model()
2023-10-13 10:31:37,574:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:37,576:INFO:Initializing load_model()
2023-10-13 10:31:37,576:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:37,578:INFO:Initializing load_model()
2023-10-13 10:31:37,578:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:37,580:INFO:Initializing load_model()
2023-10-13 10:31:37,580:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:31:37,588:INFO:Initializing predict_model()
2023-10-13 10:31:37,588:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d567d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170723f40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a170a0>)
2023-10-13 10:31:37,588:INFO:Checking exceptions
2023-10-13 10:31:37,588:INFO:Preloading libraries
2023-10-13 10:31:37,588:INFO:Set up data.
2023-10-13 10:31:37,595:INFO:Set up index.
2023-10-13 10:31:37,690:INFO:Initializing predict_model()
2023-10-13 10:31:37,691:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844ff100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a170a0>)
2023-10-13 10:31:37,691:INFO:Checking exceptions
2023-10-13 10:31:37,691:INFO:Preloading libraries
2023-10-13 10:31:37,691:INFO:Set up data.
2023-10-13 10:31:37,700:INFO:Set up index.
2023-10-13 10:31:37,754:INFO:Initializing predict_model()
2023-10-13 10:31:37,754:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e6890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a170a0>)
2023-10-13 10:31:37,754:INFO:Checking exceptions
2023-10-13 10:31:37,754:INFO:Preloading libraries
2023-10-13 10:31:37,754:INFO:Set up data.
2023-10-13 10:31:37,760:INFO:Set up index.
2023-10-13 10:31:37,808:INFO:Initializing predict_model()
2023-10-13 10:31:37,808:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e6890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a170a0>)
2023-10-13 10:31:37,808:INFO:Checking exceptions
2023-10-13 10:31:37,808:INFO:Preloading libraries
2023-10-13 10:31:37,808:INFO:Set up data.
2023-10-13 10:31:37,814:INFO:Set up index.
2023-10-13 10:31:37,861:INFO:Initializing predict_model()
2023-10-13 10:31:37,861:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e6890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170722d10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a170a0>)
2023-10-13 10:31:37,861:INFO:Checking exceptions
2023-10-13 10:31:37,861:INFO:Preloading libraries
2023-10-13 10:31:37,861:INFO:Set up data.
2023-10-13 10:31:37,867:INFO:Set up index.
2023-10-13 10:32:37,055:INFO:Initializing load_model()
2023-10-13 10:32:37,055:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:32:37,058:INFO:Initializing load_model()
2023-10-13 10:32:37,058:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:32:37,060:INFO:Initializing load_model()
2023-10-13 10:32:37,060:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:32:37,062:INFO:Initializing load_model()
2023-10-13 10:32:37,062:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:32:37,064:INFO:Initializing load_model()
2023-10-13 10:32:37,064:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:32:37,073:INFO:Initializing predict_model()
2023-10-13 10:32:37,073:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d57160>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284dbfcd0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125694310>)
2023-10-13 10:32:37,073:INFO:Checking exceptions
2023-10-13 10:32:37,073:INFO:Preloading libraries
2023-10-13 10:32:37,073:INFO:Set up data.
2023-10-13 10:32:37,081:INFO:Set up index.
2023-10-13 10:32:37,185:INFO:Initializing predict_model()
2023-10-13 10:32:37,185:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844ff100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:32:37,185:INFO:Checking exceptions
2023-10-13 10:32:37,185:INFO:Preloading libraries
2023-10-13 10:32:37,185:INFO:Set up data.
2023-10-13 10:32:37,191:INFO:Set up index.
2023-10-13 10:32:37,246:INFO:Initializing predict_model()
2023-10-13 10:32:37,247:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844ff100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:32:37,247:INFO:Checking exceptions
2023-10-13 10:32:37,247:INFO:Preloading libraries
2023-10-13 10:32:37,247:INFO:Set up data.
2023-10-13 10:32:37,253:INFO:Set up index.
2023-10-13 10:32:37,301:INFO:Initializing predict_model()
2023-10-13 10:32:37,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844ff100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:32:37,301:INFO:Checking exceptions
2023-10-13 10:32:37,301:INFO:Preloading libraries
2023-10-13 10:32:37,301:INFO:Set up data.
2023-10-13 10:32:37,307:INFO:Set up index.
2023-10-13 10:32:37,354:INFO:Initializing predict_model()
2023-10-13 10:32:37,354:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2844ff100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284dbfc40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:32:37,354:INFO:Checking exceptions
2023-10-13 10:32:37,354:INFO:Preloading libraries
2023-10-13 10:32:37,354:INFO:Set up data.
2023-10-13 10:32:37,360:INFO:Set up index.
2023-10-13 10:34:17,461:INFO:Initializing load_model()
2023-10-13 10:34:17,461:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:34:17,464:INFO:Initializing load_model()
2023-10-13 10:34:17,465:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:34:17,467:INFO:Initializing load_model()
2023-10-13 10:34:17,467:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:34:17,469:INFO:Initializing load_model()
2023-10-13 10:34:17,469:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:34:17,470:INFO:Initializing load_model()
2023-10-13 10:34:17,470:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:34:17,490:INFO:Initializing predict_model()
2023-10-13 10:34:17,490:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acf3d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x282acf3a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:34:17,490:INFO:Checking exceptions
2023-10-13 10:34:17,490:INFO:Preloading libraries
2023-10-13 10:34:17,490:INFO:Set up data.
2023-10-13 10:34:17,506:INFO:Set up index.
2023-10-13 10:34:17,628:INFO:Initializing predict_model()
2023-10-13 10:34:17,629:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e4cd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:34:17,629:INFO:Checking exceptions
2023-10-13 10:34:17,629:INFO:Preloading libraries
2023-10-13 10:34:17,629:INFO:Set up data.
2023-10-13 10:34:17,635:INFO:Set up index.
2023-10-13 10:34:17,685:INFO:Initializing predict_model()
2023-10-13 10:34:17,685:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e4cd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:34:17,685:INFO:Checking exceptions
2023-10-13 10:34:17,685:INFO:Preloading libraries
2023-10-13 10:34:17,685:INFO:Set up data.
2023-10-13 10:34:17,691:INFO:Set up index.
2023-10-13 10:34:17,739:INFO:Initializing predict_model()
2023-10-13 10:34:17,739:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e4cd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:34:17,739:INFO:Checking exceptions
2023-10-13 10:34:17,739:INFO:Preloading libraries
2023-10-13 10:34:17,740:INFO:Set up data.
2023-10-13 10:34:17,745:INFO:Set up index.
2023-10-13 10:34:17,792:INFO:Initializing predict_model()
2023-10-13 10:34:17,793:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e4cd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d573a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:34:17,793:INFO:Checking exceptions
2023-10-13 10:34:17,793:INFO:Preloading libraries
2023-10-13 10:34:17,793:INFO:Set up data.
2023-10-13 10:34:17,798:INFO:Set up index.
2023-10-13 10:35:35,448:INFO:Initializing load_model()
2023-10-13 10:35:35,449:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:35:35,456:INFO:Initializing load_model()
2023-10-13 10:35:35,456:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:35:35,458:INFO:Initializing load_model()
2023-10-13 10:35:35,458:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:35:35,460:INFO:Initializing load_model()
2023-10-13 10:35:35,460:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:35:35,462:INFO:Initializing load_model()
2023-10-13 10:35:35,462:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:35:35,471:INFO:Initializing predict_model()
2023-10-13 10:35:35,471:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282aceaa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x1707207f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696950>)
2023-10-13 10:35:35,471:INFO:Checking exceptions
2023-10-13 10:35:35,471:INFO:Preloading libraries
2023-10-13 10:35:35,471:INFO:Set up data.
2023-10-13 10:35:35,478:INFO:Set up index.
2023-10-13 10:35:35,582:INFO:Initializing predict_model()
2023-10-13 10:35:35,582:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e7820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 10:35:35,582:INFO:Checking exceptions
2023-10-13 10:35:35,582:INFO:Preloading libraries
2023-10-13 10:35:35,582:INFO:Set up data.
2023-10-13 10:35:35,588:INFO:Set up index.
2023-10-13 10:35:35,637:INFO:Initializing predict_model()
2023-10-13 10:35:35,638:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e7820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 10:35:35,638:INFO:Checking exceptions
2023-10-13 10:35:35,638:INFO:Preloading libraries
2023-10-13 10:35:35,638:INFO:Set up data.
2023-10-13 10:35:35,644:INFO:Set up index.
2023-10-13 10:35:35,693:INFO:Initializing predict_model()
2023-10-13 10:35:35,693:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e7820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 10:35:35,693:INFO:Checking exceptions
2023-10-13 10:35:35,693:INFO:Preloading libraries
2023-10-13 10:35:35,693:INFO:Set up data.
2023-10-13 10:35:35,699:INFO:Set up index.
2023-10-13 10:35:35,748:INFO:Initializing predict_model()
2023-10-13 10:35:35,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f7e7820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170721ea0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 10:35:35,748:INFO:Checking exceptions
2023-10-13 10:35:35,748:INFO:Preloading libraries
2023-10-13 10:35:35,749:INFO:Set up data.
2023-10-13 10:35:35,754:INFO:Set up index.
2023-10-13 10:36:32,130:INFO:Initializing load_model()
2023-10-13 10:36:32,130:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:36:32,133:INFO:Initializing load_model()
2023-10-13 10:36:32,133:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:36:32,135:INFO:Initializing load_model()
2023-10-13 10:36:32,135:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:36:32,138:INFO:Initializing load_model()
2023-10-13 10:36:32,138:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:36:32,139:INFO:Initializing load_model()
2023-10-13 10:36:32,139:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:36:32,147:INFO:Initializing predict_model()
2023-10-13 10:36:32,147:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170722bc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d54130>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 10:36:32,147:INFO:Checking exceptions
2023-10-13 10:36:32,147:INFO:Preloading libraries
2023-10-13 10:36:32,147:INFO:Set up data.
2023-10-13 10:36:32,154:INFO:Set up index.
2023-10-13 10:36:32,266:INFO:Initializing predict_model()
2023-10-13 10:36:32,266:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 10:36:32,267:INFO:Checking exceptions
2023-10-13 10:36:32,267:INFO:Preloading libraries
2023-10-13 10:36:32,267:INFO:Set up data.
2023-10-13 10:36:32,280:INFO:Set up index.
2023-10-13 10:36:32,333:INFO:Initializing predict_model()
2023-10-13 10:36:32,334:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170720a60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 10:36:32,334:INFO:Checking exceptions
2023-10-13 10:36:32,334:INFO:Preloading libraries
2023-10-13 10:36:32,334:INFO:Set up data.
2023-10-13 10:36:32,340:INFO:Set up index.
2023-10-13 10:36:32,387:INFO:Initializing predict_model()
2023-10-13 10:36:32,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2aa70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 10:36:32,388:INFO:Checking exceptions
2023-10-13 10:36:32,388:INFO:Preloading libraries
2023-10-13 10:36:32,388:INFO:Set up data.
2023-10-13 10:36:32,394:INFO:Set up index.
2023-10-13 10:36:32,447:INFO:Initializing predict_model()
2023-10-13 10:36:32,447:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170721540>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d56260>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281c9fa30>)
2023-10-13 10:36:32,448:INFO:Checking exceptions
2023-10-13 10:36:32,448:INFO:Preloading libraries
2023-10-13 10:36:32,448:INFO:Set up data.
2023-10-13 10:36:32,454:INFO:Set up index.
2023-10-13 10:37:11,748:INFO:Initializing load_model()
2023-10-13 10:37:11,748:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:37:11,751:INFO:Initializing load_model()
2023-10-13 10:37:11,751:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:37:11,755:INFO:Initializing load_model()
2023-10-13 10:37:11,755:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:37:11,757:INFO:Initializing load_model()
2023-10-13 10:37:11,757:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:37:11,759:INFO:Initializing load_model()
2023-10-13 10:37:11,759:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:37:11,769:INFO:Initializing predict_model()
2023-10-13 10:37:11,769:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170722d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170722d70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 10:37:11,769:INFO:Checking exceptions
2023-10-13 10:37:11,769:INFO:Preloading libraries
2023-10-13 10:37:11,769:INFO:Set up data.
2023-10-13 10:37:11,776:INFO:Set up index.
2023-10-13 10:37:11,863:INFO:Initializing predict_model()
2023-10-13 10:37:11,863:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 10:37:11,863:INFO:Checking exceptions
2023-10-13 10:37:11,863:INFO:Preloading libraries
2023-10-13 10:37:11,863:INFO:Set up data.
2023-10-13 10:37:11,869:INFO:Set up index.
2023-10-13 10:37:11,927:INFO:Initializing predict_model()
2023-10-13 10:37:11,927:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 10:37:11,927:INFO:Checking exceptions
2023-10-13 10:37:11,927:INFO:Preloading libraries
2023-10-13 10:37:11,927:INFO:Set up data.
2023-10-13 10:37:11,934:INFO:Set up index.
2023-10-13 10:37:11,988:INFO:Initializing predict_model()
2023-10-13 10:37:11,988:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 10:37:11,988:INFO:Checking exceptions
2023-10-13 10:37:11,988:INFO:Preloading libraries
2023-10-13 10:37:11,988:INFO:Set up data.
2023-10-13 10:37:11,994:INFO:Set up index.
2023-10-13 10:37:12,043:INFO:Initializing predict_model()
2023-10-13 10:37:12,043:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170720880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x291716ef0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 10:37:12,043:INFO:Checking exceptions
2023-10-13 10:37:12,043:INFO:Preloading libraries
2023-10-13 10:37:12,043:INFO:Set up data.
2023-10-13 10:37:12,049:INFO:Set up index.
2023-10-13 10:38:27,592:INFO:Initializing load_model()
2023-10-13 10:38:27,592:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:38:27,595:INFO:Initializing load_model()
2023-10-13 10:38:27,595:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:38:27,600:INFO:Initializing load_model()
2023-10-13 10:38:27,600:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:38:27,602:INFO:Initializing load_model()
2023-10-13 10:38:27,602:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:38:27,604:INFO:Initializing load_model()
2023-10-13 10:38:27,604:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:38:27,615:INFO:Initializing predict_model()
2023-10-13 10:38:27,615:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acc8e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d56d10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 10:38:27,615:INFO:Checking exceptions
2023-10-13 10:38:27,615:INFO:Preloading libraries
2023-10-13 10:38:27,615:INFO:Set up data.
2023-10-13 10:38:27,624:INFO:Set up index.
2023-10-13 10:38:27,809:INFO:Initializing predict_model()
2023-10-13 10:38:27,809:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acc8e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 10:38:27,809:INFO:Checking exceptions
2023-10-13 10:38:27,809:INFO:Preloading libraries
2023-10-13 10:38:27,809:INFO:Set up data.
2023-10-13 10:38:27,815:INFO:Set up index.
2023-10-13 10:38:27,875:INFO:Initializing predict_model()
2023-10-13 10:38:27,875:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acc8e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 10:38:27,875:INFO:Checking exceptions
2023-10-13 10:38:27,875:INFO:Preloading libraries
2023-10-13 10:38:27,875:INFO:Set up data.
2023-10-13 10:38:27,882:INFO:Set up index.
2023-10-13 10:38:27,935:INFO:Initializing predict_model()
2023-10-13 10:38:27,935:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acc8e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 10:38:27,935:INFO:Checking exceptions
2023-10-13 10:38:27,935:INFO:Preloading libraries
2023-10-13 10:38:27,936:INFO:Set up data.
2023-10-13 10:38:27,942:INFO:Set up index.
2023-10-13 10:38:27,998:INFO:Initializing predict_model()
2023-10-13 10:38:27,998:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acc8e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d57a60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 10:38:27,998:INFO:Checking exceptions
2023-10-13 10:38:27,998:INFO:Preloading libraries
2023-10-13 10:38:27,999:INFO:Set up data.
2023-10-13 10:38:28,005:INFO:Set up index.
2023-10-13 10:39:25,892:INFO:Initializing load_model()
2023-10-13 10:39:25,892:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:39:25,895:INFO:Initializing load_model()
2023-10-13 10:39:25,895:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:39:25,898:INFO:Initializing load_model()
2023-10-13 10:39:25,898:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:39:25,900:INFO:Initializing load_model()
2023-10-13 10:39:25,900:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:39:25,902:INFO:Initializing load_model()
2023-10-13 10:39:25,902:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:39:25,912:INFO:Initializing predict_model()
2023-10-13 10:39:25,912:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbce80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d573d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a3b2e0>)
2023-10-13 10:39:25,912:INFO:Checking exceptions
2023-10-13 10:39:25,912:INFO:Preloading libraries
2023-10-13 10:39:25,913:INFO:Set up data.
2023-10-13 10:39:25,919:INFO:Set up index.
2023-10-13 10:39:26,021:INFO:Initializing predict_model()
2023-10-13 10:39:26,021:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace5c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a3b2e0>)
2023-10-13 10:39:26,021:INFO:Checking exceptions
2023-10-13 10:39:26,021:INFO:Preloading libraries
2023-10-13 10:39:26,021:INFO:Set up data.
2023-10-13 10:39:26,027:INFO:Set up index.
2023-10-13 10:39:26,076:INFO:Initializing predict_model()
2023-10-13 10:39:26,076:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace5c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a3b2e0>)
2023-10-13 10:39:26,076:INFO:Checking exceptions
2023-10-13 10:39:26,076:INFO:Preloading libraries
2023-10-13 10:39:26,076:INFO:Set up data.
2023-10-13 10:39:26,082:INFO:Set up index.
2023-10-13 10:39:26,131:INFO:Initializing predict_model()
2023-10-13 10:39:26,131:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace5c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a3b2e0>)
2023-10-13 10:39:26,131:INFO:Checking exceptions
2023-10-13 10:39:26,131:INFO:Preloading libraries
2023-10-13 10:39:26,131:INFO:Set up data.
2023-10-13 10:39:26,137:INFO:Set up index.
2023-10-13 10:39:26,184:INFO:Initializing predict_model()
2023-10-13 10:39:26,184:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace5c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d570d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a3b2e0>)
2023-10-13 10:39:26,185:INFO:Checking exceptions
2023-10-13 10:39:26,185:INFO:Preloading libraries
2023-10-13 10:39:26,185:INFO:Set up data.
2023-10-13 10:39:26,190:INFO:Set up index.
2023-10-13 10:46:59,808:INFO:Initializing load_model()
2023-10-13 10:46:59,809:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:46:59,815:INFO:Initializing load_model()
2023-10-13 10:46:59,815:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:46:59,819:INFO:Initializing load_model()
2023-10-13 10:46:59,819:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:46:59,822:INFO:Initializing load_model()
2023-10-13 10:46:59,822:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:46:59,823:INFO:Initializing load_model()
2023-10-13 10:46:59,823:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:46:59,835:INFO:Initializing predict_model()
2023-10-13 10:46:59,835:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170721540>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284dbe8f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:46:59,835:INFO:Checking exceptions
2023-10-13 10:46:59,835:INFO:Preloading libraries
2023-10-13 10:46:59,836:INFO:Set up data.
2023-10-13 10:46:59,847:INFO:Set up index.
2023-10-13 10:47:00,009:INFO:Initializing predict_model()
2023-10-13 10:47:00,009:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:47:00,009:INFO:Checking exceptions
2023-10-13 10:47:00,009:INFO:Preloading libraries
2023-10-13 10:47:00,009:INFO:Set up data.
2023-10-13 10:47:00,016:INFO:Set up index.
2023-10-13 10:47:00,067:INFO:Initializing predict_model()
2023-10-13 10:47:00,067:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:47:00,067:INFO:Checking exceptions
2023-10-13 10:47:00,067:INFO:Preloading libraries
2023-10-13 10:47:00,067:INFO:Set up data.
2023-10-13 10:47:00,074:INFO:Set up index.
2023-10-13 10:47:00,123:INFO:Initializing predict_model()
2023-10-13 10:47:00,123:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:47:00,123:INFO:Checking exceptions
2023-10-13 10:47:00,123:INFO:Preloading libraries
2023-10-13 10:47:00,123:INFO:Set up data.
2023-10-13 10:47:00,129:INFO:Set up index.
2023-10-13 10:47:00,177:INFO:Initializing predict_model()
2023-10-13 10:47:00,177:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284dbc1c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:47:00,177:INFO:Checking exceptions
2023-10-13 10:47:00,177:INFO:Preloading libraries
2023-10-13 10:47:00,177:INFO:Set up data.
2023-10-13 10:47:00,183:INFO:Set up index.
2023-10-13 10:50:52,571:INFO:Initializing load_model()
2023-10-13 10:50:52,574:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:50:52,581:INFO:Initializing load_model()
2023-10-13 10:50:52,581:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:50:52,586:INFO:Initializing load_model()
2023-10-13 10:50:52,586:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:50:52,589:INFO:Initializing load_model()
2023-10-13 10:50:52,589:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:50:52,591:INFO:Initializing load_model()
2023-10-13 10:50:52,591:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:50:52,604:INFO:Initializing predict_model()
2023-10-13 10:50:52,605:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d56a70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284e2acb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:50:52,605:INFO:Checking exceptions
2023-10-13 10:50:52,605:INFO:Preloading libraries
2023-10-13 10:50:52,605:INFO:Set up data.
2023-10-13 10:50:52,617:INFO:Set up index.
2023-10-13 10:50:52,775:INFO:Initializing predict_model()
2023-10-13 10:50:52,775:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:50:52,775:INFO:Checking exceptions
2023-10-13 10:50:52,775:INFO:Preloading libraries
2023-10-13 10:50:52,775:INFO:Set up data.
2023-10-13 10:50:52,781:INFO:Set up index.
2023-10-13 10:50:52,830:INFO:Initializing predict_model()
2023-10-13 10:50:52,830:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:50:52,830:INFO:Checking exceptions
2023-10-13 10:50:52,830:INFO:Preloading libraries
2023-10-13 10:50:52,831:INFO:Set up data.
2023-10-13 10:50:52,836:INFO:Set up index.
2023-10-13 10:50:52,888:INFO:Initializing predict_model()
2023-10-13 10:50:52,888:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:50:52,888:INFO:Checking exceptions
2023-10-13 10:50:52,888:INFO:Preloading libraries
2023-10-13 10:50:52,888:INFO:Set up data.
2023-10-13 10:50:52,894:INFO:Set up index.
2023-10-13 10:50:52,945:INFO:Initializing predict_model()
2023-10-13 10:50:52,945:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284e28400>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 10:50:52,945:INFO:Checking exceptions
2023-10-13 10:50:52,945:INFO:Preloading libraries
2023-10-13 10:50:52,945:INFO:Set up data.
2023-10-13 10:50:52,951:INFO:Set up index.
2023-10-13 10:51:02,010:INFO:Initializing load_model()
2023-10-13 10:51:02,010:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:51:02,015:INFO:Initializing load_model()
2023-10-13 10:51:02,015:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:51:02,018:INFO:Initializing load_model()
2023-10-13 10:51:02,018:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:51:02,020:INFO:Initializing load_model()
2023-10-13 10:51:02,020:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:51:02,022:INFO:Initializing load_model()
2023-10-13 10:51:02,022:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:51:02,032:INFO:Initializing predict_model()
2023-10-13 10:51:02,032:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1c790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2916c6d40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 10:51:02,032:INFO:Checking exceptions
2023-10-13 10:51:02,032:INFO:Preloading libraries
2023-10-13 10:51:02,032:INFO:Set up data.
2023-10-13 10:51:02,038:INFO:Set up index.
2023-10-13 10:51:02,141:INFO:Initializing predict_model()
2023-10-13 10:51:02,141:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 10:51:02,141:INFO:Checking exceptions
2023-10-13 10:51:02,141:INFO:Preloading libraries
2023-10-13 10:51:02,141:INFO:Set up data.
2023-10-13 10:51:02,150:INFO:Set up index.
2023-10-13 10:51:02,204:INFO:Initializing predict_model()
2023-10-13 10:51:02,204:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 10:51:02,204:INFO:Checking exceptions
2023-10-13 10:51:02,204:INFO:Preloading libraries
2023-10-13 10:51:02,204:INFO:Set up data.
2023-10-13 10:51:02,210:INFO:Set up index.
2023-10-13 10:51:02,260:INFO:Initializing predict_model()
2023-10-13 10:51:02,260:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 10:51:02,260:INFO:Checking exceptions
2023-10-13 10:51:02,260:INFO:Preloading libraries
2023-10-13 10:51:02,260:INFO:Set up data.
2023-10-13 10:51:02,266:INFO:Set up index.
2023-10-13 10:51:02,324:INFO:Initializing predict_model()
2023-10-13 10:51:02,324:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282ace830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2916c6ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 10:51:02,324:INFO:Checking exceptions
2023-10-13 10:51:02,324:INFO:Preloading libraries
2023-10-13 10:51:02,324:INFO:Set up data.
2023-10-13 10:51:02,330:INFO:Set up index.
2023-10-13 10:53:47,403:INFO:Initializing load_model()
2023-10-13 10:53:47,403:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:53:47,406:INFO:Initializing load_model()
2023-10-13 10:53:47,406:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:53:47,410:INFO:Initializing load_model()
2023-10-13 10:53:47,410:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:53:47,413:INFO:Initializing load_model()
2023-10-13 10:53:47,413:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:53:47,415:INFO:Initializing load_model()
2023-10-13 10:53:47,415:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:53:47,424:INFO:Initializing predict_model()
2023-10-13 10:53:47,424:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d88100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x292a1d630>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:53:47,424:INFO:Checking exceptions
2023-10-13 10:53:47,424:INFO:Preloading libraries
2023-10-13 10:53:47,424:INFO:Set up data.
2023-10-13 10:53:47,432:INFO:Set up index.
2023-10-13 10:53:47,530:INFO:Initializing predict_model()
2023-10-13 10:53:47,531:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acca30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:53:47,531:INFO:Checking exceptions
2023-10-13 10:53:47,531:INFO:Preloading libraries
2023-10-13 10:53:47,531:INFO:Set up data.
2023-10-13 10:53:47,539:INFO:Set up index.
2023-10-13 10:53:47,597:INFO:Initializing predict_model()
2023-10-13 10:53:47,597:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acca30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:53:47,597:INFO:Checking exceptions
2023-10-13 10:53:47,597:INFO:Preloading libraries
2023-10-13 10:53:47,597:INFO:Set up data.
2023-10-13 10:53:47,603:INFO:Set up index.
2023-10-13 10:53:47,657:INFO:Initializing predict_model()
2023-10-13 10:53:47,657:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acca30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:53:47,657:INFO:Checking exceptions
2023-10-13 10:53:47,657:INFO:Preloading libraries
2023-10-13 10:53:47,657:INFO:Set up data.
2023-10-13 10:53:47,664:INFO:Set up index.
2023-10-13 10:53:47,713:INFO:Initializing predict_model()
2023-10-13 10:53:47,713:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acca30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x292a1f340>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 10:53:47,713:INFO:Checking exceptions
2023-10-13 10:53:47,713:INFO:Preloading libraries
2023-10-13 10:53:47,713:INFO:Set up data.
2023-10-13 10:53:47,720:INFO:Set up index.
2023-10-13 10:57:59,038:INFO:Initializing load_model()
2023-10-13 10:57:59,039:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:57:59,056:INFO:Initializing load_model()
2023-10-13 10:57:59,056:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:57:59,065:INFO:Initializing load_model()
2023-10-13 10:57:59,066:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:57:59,067:INFO:Initializing load_model()
2023-10-13 10:57:59,067:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:57:59,069:INFO:Initializing load_model()
2023-10-13 10:57:59,069:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:57:59,107:INFO:Initializing predict_model()
2023-10-13 10:57:59,107:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291714b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d54f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 10:57:59,108:INFO:Checking exceptions
2023-10-13 10:57:59,108:INFO:Preloading libraries
2023-10-13 10:57:59,109:INFO:Set up data.
2023-10-13 10:57:59,129:INFO:Set up index.
2023-10-13 10:57:59,350:INFO:Initializing predict_model()
2023-10-13 10:57:59,350:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 10:57:59,350:INFO:Checking exceptions
2023-10-13 10:57:59,350:INFO:Preloading libraries
2023-10-13 10:57:59,350:INFO:Set up data.
2023-10-13 10:57:59,356:INFO:Set up index.
2023-10-13 10:57:59,413:INFO:Initializing predict_model()
2023-10-13 10:57:59,413:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 10:57:59,413:INFO:Checking exceptions
2023-10-13 10:57:59,413:INFO:Preloading libraries
2023-10-13 10:57:59,413:INFO:Set up data.
2023-10-13 10:57:59,420:INFO:Set up index.
2023-10-13 10:57:59,471:INFO:Initializing predict_model()
2023-10-13 10:57:59,471:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 10:57:59,471:INFO:Checking exceptions
2023-10-13 10:57:59,472:INFO:Preloading libraries
2023-10-13 10:57:59,472:INFO:Set up data.
2023-10-13 10:57:59,478:INFO:Set up index.
2023-10-13 10:57:59,529:INFO:Initializing predict_model()
2023-10-13 10:57:59,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d8a830>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 10:57:59,529:INFO:Checking exceptions
2023-10-13 10:57:59,529:INFO:Preloading libraries
2023-10-13 10:57:59,529:INFO:Set up data.
2023-10-13 10:57:59,535:INFO:Set up index.
2023-10-13 10:58:32,031:INFO:Initializing load_model()
2023-10-13 10:58:32,031:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:58:32,040:INFO:Initializing load_model()
2023-10-13 10:58:32,040:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:58:32,045:INFO:Initializing load_model()
2023-10-13 10:58:32,045:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:58:32,048:INFO:Initializing load_model()
2023-10-13 10:58:32,048:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:58:32,050:INFO:Initializing load_model()
2023-10-13 10:58:32,050:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:58:32,062:INFO:Initializing predict_model()
2023-10-13 10:58:32,062:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbc490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284e28460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9c60>)
2023-10-13 10:58:32,062:INFO:Checking exceptions
2023-10-13 10:58:32,062:INFO:Preloading libraries
2023-10-13 10:58:32,062:INFO:Set up data.
2023-10-13 10:58:32,071:INFO:Set up index.
2023-10-13 10:58:32,172:INFO:Initializing predict_model()
2023-10-13 10:58:32,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 10:58:32,172:INFO:Checking exceptions
2023-10-13 10:58:32,172:INFO:Preloading libraries
2023-10-13 10:58:32,173:INFO:Set up data.
2023-10-13 10:58:32,179:INFO:Set up index.
2023-10-13 10:58:32,238:INFO:Initializing predict_model()
2023-10-13 10:58:32,238:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 10:58:32,238:INFO:Checking exceptions
2023-10-13 10:58:32,238:INFO:Preloading libraries
2023-10-13 10:58:32,239:INFO:Set up data.
2023-10-13 10:58:32,245:INFO:Set up index.
2023-10-13 10:58:32,294:INFO:Initializing predict_model()
2023-10-13 10:58:32,294:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 10:58:32,294:INFO:Checking exceptions
2023-10-13 10:58:32,294:INFO:Preloading libraries
2023-10-13 10:58:32,294:INFO:Set up data.
2023-10-13 10:58:32,300:INFO:Set up index.
2023-10-13 10:58:32,349:INFO:Initializing predict_model()
2023-10-13 10:58:32,349:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284e2b7f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 10:58:32,349:INFO:Checking exceptions
2023-10-13 10:58:32,349:INFO:Preloading libraries
2023-10-13 10:58:32,349:INFO:Set up data.
2023-10-13 10:58:32,355:INFO:Set up index.
2023-10-13 10:59:57,457:INFO:Initializing load_model()
2023-10-13 10:59:57,457:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:59:57,460:INFO:Initializing load_model()
2023-10-13 10:59:57,460:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:59:57,463:INFO:Initializing load_model()
2023-10-13 10:59:57,463:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:59:57,465:INFO:Initializing load_model()
2023-10-13 10:59:57,465:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:59:57,467:INFO:Initializing load_model()
2023-10-13 10:59:57,467:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 10:59:57,475:INFO:Initializing predict_model()
2023-10-13 10:59:57,475:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d8af20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2917169b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566b130>)
2023-10-13 10:59:57,475:INFO:Checking exceptions
2023-10-13 10:59:57,475:INFO:Preloading libraries
2023-10-13 10:59:57,475:INFO:Set up data.
2023-10-13 10:59:57,482:INFO:Set up index.
2023-10-13 10:59:57,573:INFO:Initializing predict_model()
2023-10-13 10:59:57,573:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:59:57,573:INFO:Checking exceptions
2023-10-13 10:59:57,573:INFO:Preloading libraries
2023-10-13 10:59:57,573:INFO:Set up data.
2023-10-13 10:59:57,579:INFO:Set up index.
2023-10-13 10:59:57,643:INFO:Initializing predict_model()
2023-10-13 10:59:57,643:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:59:57,643:INFO:Checking exceptions
2023-10-13 10:59:57,643:INFO:Preloading libraries
2023-10-13 10:59:57,643:INFO:Set up data.
2023-10-13 10:59:57,650:INFO:Set up index.
2023-10-13 10:59:57,701:INFO:Initializing predict_model()
2023-10-13 10:59:57,702:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:59:57,702:INFO:Checking exceptions
2023-10-13 10:59:57,702:INFO:Preloading libraries
2023-10-13 10:59:57,702:INFO:Set up data.
2023-10-13 10:59:57,708:INFO:Set up index.
2023-10-13 10:59:57,756:INFO:Initializing predict_model()
2023-10-13 10:59:57,756:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282acd360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284c7e620>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 10:59:57,756:INFO:Checking exceptions
2023-10-13 10:59:57,756:INFO:Preloading libraries
2023-10-13 10:59:57,756:INFO:Set up data.
2023-10-13 10:59:57,762:INFO:Set up index.
2023-10-13 11:00:33,457:INFO:Initializing load_model()
2023-10-13 11:00:33,458:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:00:33,460:INFO:Initializing load_model()
2023-10-13 11:00:33,460:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:00:33,462:INFO:Initializing load_model()
2023-10-13 11:00:33,462:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:00:33,464:INFO:Initializing load_model()
2023-10-13 11:00:33,464:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:00:33,466:INFO:Initializing load_model()
2023-10-13 11:00:33,466:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:00:33,470:INFO:Initializing predict_model()
2023-10-13 11:00:33,470:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x291714e80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1257c28c0>)
2023-10-13 11:00:33,470:INFO:Checking exceptions
2023-10-13 11:00:33,470:INFO:Preloading libraries
2023-10-13 11:00:33,471:INFO:Set up data.
2023-10-13 11:00:33,478:INFO:Set up index.
2023-10-13 11:00:33,566:INFO:Initializing predict_model()
2023-10-13 11:00:33,566:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1257c28c0>)
2023-10-13 11:00:33,566:INFO:Checking exceptions
2023-10-13 11:00:33,566:INFO:Preloading libraries
2023-10-13 11:00:33,566:INFO:Set up data.
2023-10-13 11:00:33,572:INFO:Set up index.
2023-10-13 11:00:33,621:INFO:Initializing predict_model()
2023-10-13 11:00:33,621:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d8bb80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1257c28c0>)
2023-10-13 11:00:33,621:INFO:Checking exceptions
2023-10-13 11:00:33,621:INFO:Preloading libraries
2023-10-13 11:00:33,621:INFO:Set up data.
2023-10-13 11:00:33,627:INFO:Set up index.
2023-10-13 11:00:33,677:INFO:Initializing predict_model()
2023-10-13 11:00:33,677:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291715c90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1257c28c0>)
2023-10-13 11:00:33,677:INFO:Checking exceptions
2023-10-13 11:00:33,677:INFO:Preloading libraries
2023-10-13 11:00:33,677:INFO:Set up data.
2023-10-13 11:00:33,683:INFO:Set up index.
2023-10-13 11:00:33,732:INFO:Initializing predict_model()
2023-10-13 11:00:33,732:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c6110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2916c6710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1257c28c0>)
2023-10-13 11:00:33,732:INFO:Checking exceptions
2023-10-13 11:00:33,732:INFO:Preloading libraries
2023-10-13 11:00:33,732:INFO:Set up data.
2023-10-13 11:00:33,738:INFO:Set up index.
2023-10-13 11:05:39,799:INFO:Initializing load_model()
2023-10-13 11:05:39,800:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:05:39,803:INFO:Initializing load_model()
2023-10-13 11:05:39,803:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:05:39,806:INFO:Initializing load_model()
2023-10-13 11:05:39,806:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:05:39,808:INFO:Initializing load_model()
2023-10-13 11:05:39,808:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:05:39,810:INFO:Initializing load_model()
2023-10-13 11:05:39,810:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:05:39,818:INFO:Initializing predict_model()
2023-10-13 11:05:39,818:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d89b10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284dbdf00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696560>)
2023-10-13 11:05:39,818:INFO:Checking exceptions
2023-10-13 11:05:39,818:INFO:Preloading libraries
2023-10-13 11:05:39,818:INFO:Set up data.
2023-10-13 11:05:39,825:INFO:Set up index.
2023-10-13 11:05:39,922:INFO:Initializing predict_model()
2023-10-13 11:05:39,922:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf0a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:05:39,922:INFO:Checking exceptions
2023-10-13 11:05:39,922:INFO:Preloading libraries
2023-10-13 11:05:39,922:INFO:Set up data.
2023-10-13 11:05:39,929:INFO:Set up index.
2023-10-13 11:05:39,993:INFO:Initializing predict_model()
2023-10-13 11:05:39,993:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf0a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:05:39,993:INFO:Checking exceptions
2023-10-13 11:05:39,993:INFO:Preloading libraries
2023-10-13 11:05:39,993:INFO:Set up data.
2023-10-13 11:05:40,000:INFO:Set up index.
2023-10-13 11:05:40,051:INFO:Initializing predict_model()
2023-10-13 11:05:40,051:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf0a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:05:40,051:INFO:Checking exceptions
2023-10-13 11:05:40,051:INFO:Preloading libraries
2023-10-13 11:05:40,051:INFO:Set up data.
2023-10-13 11:05:40,057:INFO:Set up index.
2023-10-13 11:05:40,106:INFO:Initializing predict_model()
2023-10-13 11:05:40,106:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf0a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x292a1c220>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:05:40,106:INFO:Checking exceptions
2023-10-13 11:05:40,106:INFO:Preloading libraries
2023-10-13 11:05:40,106:INFO:Set up data.
2023-10-13 11:05:40,112:INFO:Set up index.
2023-10-13 11:07:00,937:INFO:Initializing load_model()
2023-10-13 11:07:00,938:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:00,944:INFO:Initializing load_model()
2023-10-13 11:07:00,944:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:00,948:INFO:Initializing load_model()
2023-10-13 11:07:00,948:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:00,949:INFO:Initializing load_model()
2023-10-13 11:07:00,949:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:00,951:INFO:Initializing load_model()
2023-10-13 11:07:00,951:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:00,964:INFO:Initializing predict_model()
2023-10-13 11:07:00,964:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e29690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284dbdc30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696a70>)
2023-10-13 11:07:00,964:INFO:Checking exceptions
2023-10-13 11:07:00,964:INFO:Preloading libraries
2023-10-13 11:07:00,965:INFO:Set up data.
2023-10-13 11:07:00,973:INFO:Set up index.
2023-10-13 11:07:01,117:INFO:Initializing predict_model()
2023-10-13 11:07:01,117:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291716d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:07:01,117:INFO:Checking exceptions
2023-10-13 11:07:01,117:INFO:Preloading libraries
2023-10-13 11:07:01,117:INFO:Set up data.
2023-10-13 11:07:01,123:INFO:Set up index.
2023-10-13 11:07:01,176:INFO:Initializing predict_model()
2023-10-13 11:07:01,177:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbc550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:07:01,177:INFO:Checking exceptions
2023-10-13 11:07:01,177:INFO:Preloading libraries
2023-10-13 11:07:01,177:INFO:Set up data.
2023-10-13 11:07:01,183:INFO:Set up index.
2023-10-13 11:07:01,232:INFO:Initializing predict_model()
2023-10-13 11:07:01,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291716080>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:07:01,232:INFO:Checking exceptions
2023-10-13 11:07:01,232:INFO:Preloading libraries
2023-10-13 11:07:01,232:INFO:Set up data.
2023-10-13 11:07:01,238:INFO:Set up index.
2023-10-13 11:07:01,287:INFO:Initializing predict_model()
2023-10-13 11:07:01,287:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbe650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2916c5c60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:07:01,287:INFO:Checking exceptions
2023-10-13 11:07:01,287:INFO:Preloading libraries
2023-10-13 11:07:01,287:INFO:Set up data.
2023-10-13 11:07:01,293:INFO:Set up index.
2023-10-13 11:07:18,199:INFO:Initializing load_model()
2023-10-13 11:07:18,199:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:18,204:INFO:Initializing load_model()
2023-10-13 11:07:18,204:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:18,207:INFO:Initializing load_model()
2023-10-13 11:07:18,207:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:18,209:INFO:Initializing load_model()
2023-10-13 11:07:18,209:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:18,211:INFO:Initializing load_model()
2023-10-13 11:07:18,211:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:18,226:INFO:Initializing predict_model()
2023-10-13 11:07:18,226:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7fe20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170720040>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566b910>)
2023-10-13 11:07:18,226:INFO:Checking exceptions
2023-10-13 11:07:18,226:INFO:Preloading libraries
2023-10-13 11:07:18,227:INFO:Set up data.
2023-10-13 11:07:18,233:INFO:Set up index.
2023-10-13 11:07:18,324:INFO:Initializing predict_model()
2023-10-13 11:07:18,325:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1707213f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566b910>)
2023-10-13 11:07:18,325:INFO:Checking exceptions
2023-10-13 11:07:18,325:INFO:Preloading libraries
2023-10-13 11:07:18,325:INFO:Set up data.
2023-10-13 11:07:18,331:INFO:Set up index.
2023-10-13 11:07:18,384:INFO:Initializing predict_model()
2023-10-13 11:07:18,384:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c5210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566b910>)
2023-10-13 11:07:18,384:INFO:Checking exceptions
2023-10-13 11:07:18,384:INFO:Preloading libraries
2023-10-13 11:07:18,384:INFO:Set up data.
2023-10-13 11:07:18,391:INFO:Set up index.
2023-10-13 11:07:18,440:INFO:Initializing predict_model()
2023-10-13 11:07:18,440:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291715780>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566b910>)
2023-10-13 11:07:18,440:INFO:Checking exceptions
2023-10-13 11:07:18,440:INFO:Preloading libraries
2023-10-13 11:07:18,440:INFO:Set up data.
2023-10-13 11:07:18,446:INFO:Set up index.
2023-10-13 11:07:18,495:INFO:Initializing predict_model()
2023-10-13 11:07:18,495:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c5c60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d8a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566b910>)
2023-10-13 11:07:18,495:INFO:Checking exceptions
2023-10-13 11:07:18,495:INFO:Preloading libraries
2023-10-13 11:07:18,495:INFO:Set up data.
2023-10-13 11:07:18,501:INFO:Set up index.
2023-10-13 11:07:45,325:INFO:Initializing load_model()
2023-10-13 11:07:45,325:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:45,328:INFO:Initializing load_model()
2023-10-13 11:07:45,328:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:45,330:INFO:Initializing load_model()
2023-10-13 11:07:45,330:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:45,332:INFO:Initializing load_model()
2023-10-13 11:07:45,332:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:45,334:INFO:Initializing load_model()
2023-10-13 11:07:45,334:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:07:45,343:INFO:Initializing predict_model()
2023-10-13 11:07:45,343:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d88ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284d89ea0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566b640>)
2023-10-13 11:07:45,343:INFO:Checking exceptions
2023-10-13 11:07:45,343:INFO:Preloading libraries
2023-10-13 11:07:45,344:INFO:Set up data.
2023-10-13 11:07:45,350:INFO:Set up index.
2023-10-13 11:07:45,440:INFO:Initializing predict_model()
2023-10-13 11:07:45,443:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170720d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:07:45,443:INFO:Checking exceptions
2023-10-13 11:07:45,443:INFO:Preloading libraries
2023-10-13 11:07:45,443:INFO:Set up data.
2023-10-13 11:07:45,449:INFO:Set up index.
2023-10-13 11:07:45,511:INFO:Initializing predict_model()
2023-10-13 11:07:45,511:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170720d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:07:45,511:INFO:Checking exceptions
2023-10-13 11:07:45,512:INFO:Preloading libraries
2023-10-13 11:07:45,512:INFO:Set up data.
2023-10-13 11:07:45,518:INFO:Set up index.
2023-10-13 11:07:45,568:INFO:Initializing predict_model()
2023-10-13 11:07:45,568:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170720d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:07:45,568:INFO:Checking exceptions
2023-10-13 11:07:45,568:INFO:Preloading libraries
2023-10-13 11:07:45,568:INFO:Set up data.
2023-10-13 11:07:45,574:INFO:Set up index.
2023-10-13 11:07:45,623:INFO:Initializing predict_model()
2023-10-13 11:07:45,623:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291715ed0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284c7dea0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:07:45,623:INFO:Checking exceptions
2023-10-13 11:07:45,623:INFO:Preloading libraries
2023-10-13 11:07:45,623:INFO:Set up data.
2023-10-13 11:07:45,629:INFO:Set up index.
2023-10-13 11:20:40,360:INFO:Initializing load_model()
2023-10-13 11:20:40,363:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:20:40,381:INFO:Initializing load_model()
2023-10-13 11:20:40,382:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:20:40,389:INFO:Initializing load_model()
2023-10-13 11:20:40,389:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:20:40,391:INFO:Initializing load_model()
2023-10-13 11:20:40,391:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:20:40,393:INFO:Initializing load_model()
2023-10-13 11:20:40,393:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:20:40,428:INFO:Initializing predict_model()
2023-10-13 11:20:40,428:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d54460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x292a1e1a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:20:40,428:INFO:Checking exceptions
2023-10-13 11:20:40,428:INFO:Preloading libraries
2023-10-13 11:20:40,429:INFO:Set up data.
2023-10-13 11:20:40,448:INFO:Set up index.
2023-10-13 11:20:40,748:INFO:Initializing predict_model()
2023-10-13 11:20:40,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2917169b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:20:40,748:INFO:Checking exceptions
2023-10-13 11:20:40,748:INFO:Preloading libraries
2023-10-13 11:20:40,748:INFO:Set up data.
2023-10-13 11:20:40,754:INFO:Set up index.
2023-10-13 11:20:40,806:INFO:Initializing predict_model()
2023-10-13 11:20:40,806:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2917169b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:20:40,806:INFO:Checking exceptions
2023-10-13 11:20:40,806:INFO:Preloading libraries
2023-10-13 11:20:40,806:INFO:Set up data.
2023-10-13 11:20:40,812:INFO:Set up index.
2023-10-13 11:20:40,861:INFO:Initializing predict_model()
2023-10-13 11:20:40,861:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2917169b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:20:40,861:INFO:Checking exceptions
2023-10-13 11:20:40,861:INFO:Preloading libraries
2023-10-13 11:20:40,862:INFO:Set up data.
2023-10-13 11:20:40,867:INFO:Set up index.
2023-10-13 11:20:40,918:INFO:Initializing predict_model()
2023-10-13 11:20:40,918:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2917169b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x292a1e7a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:20:40,918:INFO:Checking exceptions
2023-10-13 11:20:40,918:INFO:Preloading libraries
2023-10-13 11:20:40,918:INFO:Set up data.
2023-10-13 11:20:40,924:INFO:Set up index.
2023-10-13 11:30:44,121:INFO:Initializing load_model()
2023-10-13 11:30:44,129:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:30:44,190:INFO:Initializing load_model()
2023-10-13 11:30:44,192:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:30:44,221:INFO:Initializing load_model()
2023-10-13 11:30:44,221:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:30:44,224:INFO:Initializing load_model()
2023-10-13 11:30:44,225:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:30:44,229:INFO:Initializing load_model()
2023-10-13 11:30:44,229:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:30:44,320:INFO:Initializing predict_model()
2023-10-13 11:30:44,347:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b104580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170720d00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566ad40>)
2023-10-13 11:30:44,347:INFO:Checking exceptions
2023-10-13 11:30:44,347:INFO:Preloading libraries
2023-10-13 11:30:44,349:INFO:Set up data.
2023-10-13 11:30:44,387:INFO:Set up index.
2023-10-13 11:30:44,736:INFO:Initializing predict_model()
2023-10-13 11:30:44,736:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c6b90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:30:44,736:INFO:Checking exceptions
2023-10-13 11:30:44,736:INFO:Preloading libraries
2023-10-13 11:30:44,736:INFO:Set up data.
2023-10-13 11:30:44,745:INFO:Set up index.
2023-10-13 11:30:44,833:INFO:Initializing predict_model()
2023-10-13 11:30:44,833:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d880d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:30:44,833:INFO:Checking exceptions
2023-10-13 11:30:44,833:INFO:Preloading libraries
2023-10-13 11:30:44,833:INFO:Set up data.
2023-10-13 11:30:44,843:INFO:Set up index.
2023-10-13 11:30:44,912:INFO:Initializing predict_model()
2023-10-13 11:30:44,913:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d880d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:30:44,913:INFO:Checking exceptions
2023-10-13 11:30:44,913:INFO:Preloading libraries
2023-10-13 11:30:44,913:INFO:Set up data.
2023-10-13 11:30:44,920:INFO:Set up index.
2023-10-13 11:30:44,988:INFO:Initializing predict_model()
2023-10-13 11:30:44,988:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d880d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2916c79d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:30:44,988:INFO:Checking exceptions
2023-10-13 11:30:44,988:INFO:Preloading libraries
2023-10-13 11:30:44,989:INFO:Set up data.
2023-10-13 11:30:44,997:INFO:Set up index.
2023-10-13 11:30:53,512:INFO:Initializing predict_model()
2023-10-13 11:30:53,514:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x170720d00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125694af0>)
2023-10-13 11:30:53,514:INFO:Checking exceptions
2023-10-13 11:30:53,514:INFO:Preloading libraries
2023-10-13 11:30:53,516:INFO:Set up data.
2023-10-13 11:30:53,542:INFO:Set up index.
2023-10-13 11:32:15,429:INFO:Initializing load_model()
2023-10-13 11:32:15,430:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:32:15,445:INFO:Initializing load_model()
2023-10-13 11:32:15,445:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:32:15,454:INFO:Initializing load_model()
2023-10-13 11:32:15,454:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:32:15,457:INFO:Initializing load_model()
2023-10-13 11:32:15,457:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:32:15,459:INFO:Initializing load_model()
2023-10-13 11:32:15,459:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:32:15,492:INFO:Initializing predict_model()
2023-10-13 11:32:15,493:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b124130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b102ec0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149510>)
2023-10-13 11:32:15,493:INFO:Checking exceptions
2023-10-13 11:32:15,493:INFO:Preloading libraries
2023-10-13 11:32:15,493:INFO:Set up data.
2023-10-13 11:32:15,507:INFO:Set up index.
2023-10-13 11:32:15,741:INFO:Initializing predict_model()
2023-10-13 11:32:15,741:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291715480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1257c28c0>)
2023-10-13 11:32:15,741:INFO:Checking exceptions
2023-10-13 11:32:15,741:INFO:Preloading libraries
2023-10-13 11:32:15,741:INFO:Set up data.
2023-10-13 11:32:15,747:INFO:Set up index.
2023-10-13 11:32:15,803:INFO:Initializing predict_model()
2023-10-13 11:32:15,803:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291715480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1257c28c0>)
2023-10-13 11:32:15,803:INFO:Checking exceptions
2023-10-13 11:32:15,803:INFO:Preloading libraries
2023-10-13 11:32:15,803:INFO:Set up data.
2023-10-13 11:32:15,809:INFO:Set up index.
2023-10-13 11:32:15,860:INFO:Initializing predict_model()
2023-10-13 11:32:15,860:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291715480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1257c28c0>)
2023-10-13 11:32:15,860:INFO:Checking exceptions
2023-10-13 11:32:15,860:INFO:Preloading libraries
2023-10-13 11:32:15,860:INFO:Set up data.
2023-10-13 11:32:15,866:INFO:Set up index.
2023-10-13 11:32:15,916:INFO:Initializing predict_model()
2023-10-13 11:32:15,916:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291715480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b102050>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1257c28c0>)
2023-10-13 11:32:15,916:INFO:Checking exceptions
2023-10-13 11:32:15,916:INFO:Preloading libraries
2023-10-13 11:32:15,916:INFO:Set up data.
2023-10-13 11:32:15,922:INFO:Set up index.
2023-10-13 11:32:24,415:INFO:Initializing predict_model()
2023-10-13 11:32:24,416:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b127af0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b102ec0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 11:32:24,416:INFO:Checking exceptions
2023-10-13 11:32:24,417:INFO:Preloading libraries
2023-10-13 11:32:24,419:INFO:Set up data.
2023-10-13 11:32:24,454:INFO:Set up index.
2023-10-13 11:32:24,604:INFO:Initializing predict_model()
2023-10-13 11:32:24,604:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291715480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 11:32:24,604:INFO:Checking exceptions
2023-10-13 11:32:24,604:INFO:Preloading libraries
2023-10-13 11:32:24,604:INFO:Set up data.
2023-10-13 11:32:24,610:INFO:Set up index.
2023-10-13 11:32:24,662:INFO:Initializing predict_model()
2023-10-13 11:32:24,662:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c5a20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a3b2e0>)
2023-10-13 11:32:24,662:INFO:Checking exceptions
2023-10-13 11:32:24,662:INFO:Preloading libraries
2023-10-13 11:32:24,662:INFO:Set up data.
2023-10-13 11:32:24,669:INFO:Set up index.
2023-10-13 11:32:24,723:INFO:Initializing predict_model()
2023-10-13 11:32:24,723:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c5a20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a3b2e0>)
2023-10-13 11:32:24,723:INFO:Checking exceptions
2023-10-13 11:32:24,723:INFO:Preloading libraries
2023-10-13 11:32:24,723:INFO:Set up data.
2023-10-13 11:32:24,729:INFO:Set up index.
2023-10-13 11:32:24,779:INFO:Initializing predict_model()
2023-10-13 11:32:24,779:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c70a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b102050>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282a3b2e0>)
2023-10-13 11:32:24,779:INFO:Checking exceptions
2023-10-13 11:32:24,779:INFO:Preloading libraries
2023-10-13 11:32:24,779:INFO:Set up data.
2023-10-13 11:32:24,785:INFO:Set up index.
2023-10-13 11:38:24,341:INFO:Initializing load_model()
2023-10-13 11:38:24,341:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:38:24,351:INFO:Initializing load_model()
2023-10-13 11:38:24,351:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:38:24,358:INFO:Initializing load_model()
2023-10-13 11:38:24,358:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:38:24,361:INFO:Initializing load_model()
2023-10-13 11:38:24,361:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:38:24,363:INFO:Initializing load_model()
2023-10-13 11:38:24,363:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:38:24,393:INFO:Initializing predict_model()
2023-10-13 11:38:24,393:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1707215d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284e289a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696950>)
2023-10-13 11:38:24,393:INFO:Checking exceptions
2023-10-13 11:38:24,393:INFO:Preloading libraries
2023-10-13 11:38:24,394:INFO:Set up data.
2023-10-13 11:38:24,402:INFO:Set up index.
2023-10-13 11:38:24,606:INFO:Initializing predict_model()
2023-10-13 11:38:24,606:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d567d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696950>)
2023-10-13 11:38:24,606:INFO:Checking exceptions
2023-10-13 11:38:24,606:INFO:Preloading libraries
2023-10-13 11:38:24,606:INFO:Set up data.
2023-10-13 11:38:24,612:INFO:Set up index.
2023-10-13 11:38:24,667:INFO:Initializing predict_model()
2023-10-13 11:38:24,667:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d567d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696950>)
2023-10-13 11:38:24,667:INFO:Checking exceptions
2023-10-13 11:38:24,667:INFO:Preloading libraries
2023-10-13 11:38:24,667:INFO:Set up data.
2023-10-13 11:38:24,674:INFO:Set up index.
2023-10-13 11:38:24,724:INFO:Initializing predict_model()
2023-10-13 11:38:24,725:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d567d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696950>)
2023-10-13 11:38:24,725:INFO:Checking exceptions
2023-10-13 11:38:24,725:INFO:Preloading libraries
2023-10-13 11:38:24,725:INFO:Set up data.
2023-10-13 11:38:24,731:INFO:Set up index.
2023-10-13 11:38:24,780:INFO:Initializing predict_model()
2023-10-13 11:38:24,780:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d567d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284e28220>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125696950>)
2023-10-13 11:38:24,780:INFO:Checking exceptions
2023-10-13 11:38:24,780:INFO:Preloading libraries
2023-10-13 11:38:24,780:INFO:Set up data.
2023-10-13 11:38:24,786:INFO:Set up index.
2023-10-13 11:40:11,242:INFO:Initializing load_model()
2023-10-13 11:40:11,243:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:40:11,246:INFO:Initializing load_model()
2023-10-13 11:40:11,247:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:40:11,249:INFO:Initializing load_model()
2023-10-13 11:40:11,249:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:40:11,251:INFO:Initializing load_model()
2023-10-13 11:40:11,251:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:40:11,253:INFO:Initializing load_model()
2023-10-13 11:40:11,253:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:40:11,262:INFO:Initializing predict_model()
2023-10-13 11:40:11,262:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7fe50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284c7f160>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:40:11,262:INFO:Checking exceptions
2023-10-13 11:40:11,262:INFO:Preloading libraries
2023-10-13 11:40:11,262:INFO:Set up data.
2023-10-13 11:40:11,271:INFO:Set up index.
2023-10-13 11:40:11,411:INFO:Initializing predict_model()
2023-10-13 11:40:11,411:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7fe50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:40:11,411:INFO:Checking exceptions
2023-10-13 11:40:11,411:INFO:Preloading libraries
2023-10-13 11:40:11,411:INFO:Set up data.
2023-10-13 11:40:11,418:INFO:Set up index.
2023-10-13 11:40:11,468:INFO:Initializing predict_model()
2023-10-13 11:40:11,468:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d567d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:40:11,468:INFO:Checking exceptions
2023-10-13 11:40:11,468:INFO:Preloading libraries
2023-10-13 11:40:11,468:INFO:Set up data.
2023-10-13 11:40:11,474:INFO:Set up index.
2023-10-13 11:40:11,524:INFO:Initializing predict_model()
2023-10-13 11:40:11,524:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291715780>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:40:11,524:INFO:Checking exceptions
2023-10-13 11:40:11,524:INFO:Preloading libraries
2023-10-13 11:40:11,524:INFO:Set up data.
2023-10-13 11:40:11,530:INFO:Set up index.
2023-10-13 11:40:11,580:INFO:Initializing predict_model()
2023-10-13 11:40:11,580:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d559f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284c7d4e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:40:11,580:INFO:Checking exceptions
2023-10-13 11:40:11,580:INFO:Preloading libraries
2023-10-13 11:40:11,580:INFO:Set up data.
2023-10-13 11:40:11,586:INFO:Set up index.
2023-10-13 11:40:20,079:INFO:Initializing predict_model()
2023-10-13 11:40:20,080:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1e3b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284c7f160>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a320>)
2023-10-13 11:40:20,080:INFO:Checking exceptions
2023-10-13 11:40:20,080:INFO:Preloading libraries
2023-10-13 11:40:20,081:INFO:Set up data.
2023-10-13 11:40:20,106:INFO:Set up index.
2023-10-13 11:40:20,190:INFO:Initializing predict_model()
2023-10-13 11:40:20,190:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7c520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a320>)
2023-10-13 11:40:20,190:INFO:Checking exceptions
2023-10-13 11:40:20,190:INFO:Preloading libraries
2023-10-13 11:40:20,190:INFO:Set up data.
2023-10-13 11:40:20,197:INFO:Set up index.
2023-10-13 11:40:20,253:INFO:Initializing predict_model()
2023-10-13 11:40:20,253:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7c520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a320>)
2023-10-13 11:40:20,253:INFO:Checking exceptions
2023-10-13 11:40:20,253:INFO:Preloading libraries
2023-10-13 11:40:20,253:INFO:Set up data.
2023-10-13 11:40:20,259:INFO:Set up index.
2023-10-13 11:40:20,309:INFO:Initializing predict_model()
2023-10-13 11:40:20,309:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c7760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 11:40:20,310:INFO:Checking exceptions
2023-10-13 11:40:20,310:INFO:Preloading libraries
2023-10-13 11:40:20,310:INFO:Set up data.
2023-10-13 11:40:20,315:INFO:Set up index.
2023-10-13 11:40:20,365:INFO:Initializing predict_model()
2023-10-13 11:40:20,365:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c7760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284c7d4e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e2d3130>)
2023-10-13 11:40:20,365:INFO:Checking exceptions
2023-10-13 11:40:20,365:INFO:Preloading libraries
2023-10-13 11:40:20,365:INFO:Set up data.
2023-10-13 11:40:20,371:INFO:Set up index.
2023-10-13 11:41:53,621:INFO:Initializing load_model()
2023-10-13 11:41:53,621:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:41:53,627:INFO:Initializing load_model()
2023-10-13 11:41:53,627:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:41:53,631:INFO:Initializing load_model()
2023-10-13 11:41:53,631:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:41:53,633:INFO:Initializing load_model()
2023-10-13 11:41:53,633:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:41:53,635:INFO:Initializing load_model()
2023-10-13 11:41:53,635:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:41:53,679:INFO:Initializing predict_model()
2023-10-13 11:41:53,679:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1e1d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b2036a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 11:41:53,679:INFO:Checking exceptions
2023-10-13 11:41:53,679:INFO:Preloading libraries
2023-10-13 11:41:53,680:INFO:Set up data.
2023-10-13 11:41:53,691:INFO:Set up index.
2023-10-13 11:41:53,819:INFO:Initializing predict_model()
2023-10-13 11:41:53,819:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d55210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 11:41:53,819:INFO:Checking exceptions
2023-10-13 11:41:53,819:INFO:Preloading libraries
2023-10-13 11:41:53,819:INFO:Set up data.
2023-10-13 11:41:53,826:INFO:Set up index.
2023-10-13 11:41:53,878:INFO:Initializing predict_model()
2023-10-13 11:41:53,878:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d55210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 11:41:53,878:INFO:Checking exceptions
2023-10-13 11:41:53,878:INFO:Preloading libraries
2023-10-13 11:41:53,878:INFO:Set up data.
2023-10-13 11:41:53,885:INFO:Set up index.
2023-10-13 11:41:53,935:INFO:Initializing predict_model()
2023-10-13 11:41:53,935:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d55210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 11:41:53,935:INFO:Checking exceptions
2023-10-13 11:41:53,935:INFO:Preloading libraries
2023-10-13 11:41:53,935:INFO:Set up data.
2023-10-13 11:41:53,941:INFO:Set up index.
2023-10-13 11:41:53,991:INFO:Initializing predict_model()
2023-10-13 11:41:53,991:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284d55210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b202a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 11:41:53,991:INFO:Checking exceptions
2023-10-13 11:41:53,991:INFO:Preloading libraries
2023-10-13 11:41:53,991:INFO:Set up data.
2023-10-13 11:41:53,997:INFO:Set up index.
2023-10-13 11:42:02,531:INFO:Initializing predict_model()
2023-10-13 11:42:02,533:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c6500>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b2036a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:42:02,534:INFO:Checking exceptions
2023-10-13 11:42:02,534:INFO:Preloading libraries
2023-10-13 11:42:02,534:INFO:Set up data.
2023-10-13 11:42:02,544:INFO:Set up index.
2023-10-13 11:42:02,651:INFO:Initializing predict_model()
2023-10-13 11:42:02,651:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c6500>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:42:02,651:INFO:Checking exceptions
2023-10-13 11:42:02,651:INFO:Preloading libraries
2023-10-13 11:42:02,651:INFO:Set up data.
2023-10-13 11:42:02,659:INFO:Set up index.
2023-10-13 11:42:02,711:INFO:Initializing predict_model()
2023-10-13 11:42:02,711:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c7760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:42:02,711:INFO:Checking exceptions
2023-10-13 11:42:02,711:INFO:Preloading libraries
2023-10-13 11:42:02,711:INFO:Set up data.
2023-10-13 11:42:02,717:INFO:Set up index.
2023-10-13 11:42:02,767:INFO:Initializing predict_model()
2023-10-13 11:42:02,767:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291717400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:42:02,767:INFO:Checking exceptions
2023-10-13 11:42:02,767:INFO:Preloading libraries
2023-10-13 11:42:02,768:INFO:Set up data.
2023-10-13 11:42:02,773:INFO:Set up index.
2023-10-13 11:42:02,823:INFO:Initializing predict_model()
2023-10-13 11:42:02,824:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291717400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b202a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:42:02,824:INFO:Checking exceptions
2023-10-13 11:42:02,824:INFO:Preloading libraries
2023-10-13 11:42:02,824:INFO:Set up data.
2023-10-13 11:42:02,830:INFO:Set up index.
2023-10-13 11:43:37,908:INFO:Initializing load_model()
2023-10-13 11:43:37,909:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:43:37,913:INFO:Initializing load_model()
2023-10-13 11:43:37,913:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:43:37,915:INFO:Initializing load_model()
2023-10-13 11:43:37,915:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:43:37,917:INFO:Initializing load_model()
2023-10-13 11:43:37,917:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:43:37,919:INFO:Initializing load_model()
2023-10-13 11:43:37,919:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:43:37,946:INFO:Initializing predict_model()
2023-10-13 11:43:37,947:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7d4e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b0994e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:43:37,947:INFO:Checking exceptions
2023-10-13 11:43:37,947:INFO:Preloading libraries
2023-10-13 11:43:37,947:INFO:Set up data.
2023-10-13 11:43:37,954:INFO:Set up index.
2023-10-13 11:43:38,059:INFO:Initializing predict_model()
2023-10-13 11:43:38,059:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b1058a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:43:38,059:INFO:Checking exceptions
2023-10-13 11:43:38,059:INFO:Preloading libraries
2023-10-13 11:43:38,059:INFO:Set up data.
2023-10-13 11:43:38,065:INFO:Set up index.
2023-10-13 11:43:38,116:INFO:Initializing predict_model()
2023-10-13 11:43:38,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291717400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:43:38,116:INFO:Checking exceptions
2023-10-13 11:43:38,116:INFO:Preloading libraries
2023-10-13 11:43:38,116:INFO:Set up data.
2023-10-13 11:43:38,122:INFO:Set up index.
2023-10-13 11:43:38,173:INFO:Initializing predict_model()
2023-10-13 11:43:38,174:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291717400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:43:38,174:INFO:Checking exceptions
2023-10-13 11:43:38,174:INFO:Preloading libraries
2023-10-13 11:43:38,174:INFO:Set up data.
2023-10-13 11:43:38,180:INFO:Set up index.
2023-10-13 11:43:38,232:INFO:Initializing predict_model()
2023-10-13 11:43:38,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x291717400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b09b820>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:43:38,232:INFO:Checking exceptions
2023-10-13 11:43:38,232:INFO:Preloading libraries
2023-10-13 11:43:38,232:INFO:Set up data.
2023-10-13 11:43:38,238:INFO:Set up index.
2023-10-13 11:43:46,807:INFO:Initializing predict_model()
2023-10-13 11:43:46,808:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b0758a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b0994e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 11:43:46,808:INFO:Checking exceptions
2023-10-13 11:43:46,808:INFO:Preloading libraries
2023-10-13 11:43:46,808:INFO:Set up data.
2023-10-13 11:43:46,819:INFO:Set up index.
2023-10-13 11:43:46,932:INFO:Initializing predict_model()
2023-10-13 11:43:46,932:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7e590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 11:43:46,932:INFO:Checking exceptions
2023-10-13 11:43:46,932:INFO:Preloading libraries
2023-10-13 11:43:46,932:INFO:Set up data.
2023-10-13 11:43:46,938:INFO:Set up index.
2023-10-13 11:43:46,992:INFO:Initializing predict_model()
2023-10-13 11:43:46,992:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c40d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 11:43:46,992:INFO:Checking exceptions
2023-10-13 11:43:46,992:INFO:Preloading libraries
2023-10-13 11:43:46,992:INFO:Set up data.
2023-10-13 11:43:46,998:INFO:Set up index.
2023-10-13 11:43:47,056:INFO:Initializing predict_model()
2023-10-13 11:43:47,056:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c40d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 11:43:47,056:INFO:Checking exceptions
2023-10-13 11:43:47,056:INFO:Preloading libraries
2023-10-13 11:43:47,056:INFO:Set up data.
2023-10-13 11:43:47,062:INFO:Set up index.
2023-10-13 11:43:47,113:INFO:Initializing predict_model()
2023-10-13 11:43:47,113:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c40d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b09b820>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281332170>)
2023-10-13 11:43:47,113:INFO:Checking exceptions
2023-10-13 11:43:47,113:INFO:Preloading libraries
2023-10-13 11:43:47,113:INFO:Set up data.
2023-10-13 11:43:47,119:INFO:Set up index.
2023-10-13 11:44:54,913:INFO:Initializing load_model()
2023-10-13 11:44:54,914:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:44:54,920:INFO:Initializing load_model()
2023-10-13 11:44:54,920:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:44:54,923:INFO:Initializing load_model()
2023-10-13 11:44:54,923:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:44:54,925:INFO:Initializing load_model()
2023-10-13 11:44:54,925:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:44:54,927:INFO:Initializing load_model()
2023-10-13 11:44:54,927:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:44:54,961:INFO:Initializing predict_model()
2023-10-13 11:44:54,961:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b127d30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b357970>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:44:54,961:INFO:Checking exceptions
2023-10-13 11:44:54,961:INFO:Preloading libraries
2023-10-13 11:44:54,961:INFO:Set up data.
2023-10-13 11:44:54,974:INFO:Set up index.
2023-10-13 11:44:55,105:INFO:Initializing predict_model()
2023-10-13 11:44:55,105:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170723ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:44:55,105:INFO:Checking exceptions
2023-10-13 11:44:55,105:INFO:Preloading libraries
2023-10-13 11:44:55,105:INFO:Set up data.
2023-10-13 11:44:55,111:INFO:Set up index.
2023-10-13 11:44:55,165:INFO:Initializing predict_model()
2023-10-13 11:44:55,165:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170723ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:44:55,165:INFO:Checking exceptions
2023-10-13 11:44:55,165:INFO:Preloading libraries
2023-10-13 11:44:55,165:INFO:Set up data.
2023-10-13 11:44:55,171:INFO:Set up index.
2023-10-13 11:44:55,222:INFO:Initializing predict_model()
2023-10-13 11:44:55,222:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170723ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:44:55,222:INFO:Checking exceptions
2023-10-13 11:44:55,222:INFO:Preloading libraries
2023-10-13 11:44:55,222:INFO:Set up data.
2023-10-13 11:44:55,228:INFO:Set up index.
2023-10-13 11:44:55,278:INFO:Initializing predict_model()
2023-10-13 11:44:55,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170723ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356d40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17fb86560>)
2023-10-13 11:44:55,278:INFO:Checking exceptions
2023-10-13 11:44:55,278:INFO:Preloading libraries
2023-10-13 11:44:55,278:INFO:Set up data.
2023-10-13 11:44:55,284:INFO:Set up index.
2023-10-13 11:45:03,824:INFO:Initializing predict_model()
2023-10-13 11:45:03,827:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b125600>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b357970>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566be20>)
2023-10-13 11:45:03,828:INFO:Checking exceptions
2023-10-13 11:45:03,828:INFO:Preloading libraries
2023-10-13 11:45:03,833:INFO:Set up data.
2023-10-13 11:45:03,847:INFO:Set up index.
2023-10-13 11:45:03,930:INFO:Initializing predict_model()
2023-10-13 11:45:03,930:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbd660>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566be20>)
2023-10-13 11:45:03,930:INFO:Checking exceptions
2023-10-13 11:45:03,930:INFO:Preloading libraries
2023-10-13 11:45:03,930:INFO:Set up data.
2023-10-13 11:45:03,936:INFO:Set up index.
2023-10-13 11:45:03,986:INFO:Initializing predict_model()
2023-10-13 11:45:03,987:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566be20>)
2023-10-13 11:45:03,987:INFO:Checking exceptions
2023-10-13 11:45:03,987:INFO:Preloading libraries
2023-10-13 11:45:03,987:INFO:Set up data.
2023-10-13 11:45:03,993:INFO:Set up index.
2023-10-13 11:45:04,043:INFO:Initializing predict_model()
2023-10-13 11:45:04,043:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566be20>)
2023-10-13 11:45:04,043:INFO:Checking exceptions
2023-10-13 11:45:04,043:INFO:Preloading libraries
2023-10-13 11:45:04,043:INFO:Set up data.
2023-10-13 11:45:04,049:INFO:Set up index.
2023-10-13 11:45:04,099:INFO:Initializing predict_model()
2023-10-13 11:45:04,099:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356d40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12566be20>)
2023-10-13 11:45:04,099:INFO:Checking exceptions
2023-10-13 11:45:04,099:INFO:Preloading libraries
2023-10-13 11:45:04,099:INFO:Set up data.
2023-10-13 11:45:04,105:INFO:Set up index.
2023-10-13 11:47:29,160:INFO:Initializing load_model()
2023-10-13 11:47:29,161:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:47:29,164:INFO:Initializing load_model()
2023-10-13 11:47:29,164:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:47:29,168:INFO:Initializing load_model()
2023-10-13 11:47:29,168:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:47:29,170:INFO:Initializing load_model()
2023-10-13 11:47:29,170:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:47:29,172:INFO:Initializing load_model()
2023-10-13 11:47:29,172:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:47:29,200:INFO:Initializing predict_model()
2023-10-13 11:47:29,200:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b105510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b077610>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:47:29,200:INFO:Checking exceptions
2023-10-13 11:47:29,201:INFO:Preloading libraries
2023-10-13 11:47:29,201:INFO:Set up data.
2023-10-13 11:47:29,209:INFO:Set up index.
2023-10-13 11:47:29,319:INFO:Initializing predict_model()
2023-10-13 11:47:29,319:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:47:29,319:INFO:Checking exceptions
2023-10-13 11:47:29,319:INFO:Preloading libraries
2023-10-13 11:47:29,319:INFO:Set up data.
2023-10-13 11:47:29,326:INFO:Set up index.
2023-10-13 11:47:29,378:INFO:Initializing predict_model()
2023-10-13 11:47:29,378:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:47:29,378:INFO:Checking exceptions
2023-10-13 11:47:29,378:INFO:Preloading libraries
2023-10-13 11:47:29,378:INFO:Set up data.
2023-10-13 11:47:29,384:INFO:Set up index.
2023-10-13 11:47:29,436:INFO:Initializing predict_model()
2023-10-13 11:47:29,436:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:47:29,437:INFO:Checking exceptions
2023-10-13 11:47:29,437:INFO:Preloading libraries
2023-10-13 11:47:29,437:INFO:Set up data.
2023-10-13 11:47:29,443:INFO:Set up index.
2023-10-13 11:47:29,493:INFO:Initializing predict_model()
2023-10-13 11:47:29,493:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284e2b700>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:47:29,493:INFO:Checking exceptions
2023-10-13 11:47:29,493:INFO:Preloading libraries
2023-10-13 11:47:29,493:INFO:Set up data.
2023-10-13 11:47:29,499:INFO:Set up index.
2023-10-13 11:47:37,996:INFO:Initializing predict_model()
2023-10-13 11:47:37,996:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b0984f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b077610>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 11:47:37,996:INFO:Checking exceptions
2023-10-13 11:47:37,996:INFO:Preloading libraries
2023-10-13 11:47:37,997:INFO:Set up data.
2023-10-13 11:47:38,007:INFO:Set up index.
2023-10-13 11:47:38,081:INFO:Initializing predict_model()
2023-10-13 11:47:38,081:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 11:47:38,081:INFO:Checking exceptions
2023-10-13 11:47:38,081:INFO:Preloading libraries
2023-10-13 11:47:38,081:INFO:Set up data.
2023-10-13 11:47:38,087:INFO:Set up index.
2023-10-13 11:47:38,141:INFO:Initializing predict_model()
2023-10-13 11:47:38,141:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 11:47:38,141:INFO:Checking exceptions
2023-10-13 11:47:38,141:INFO:Preloading libraries
2023-10-13 11:47:38,141:INFO:Set up data.
2023-10-13 11:47:38,147:INFO:Set up index.
2023-10-13 11:47:38,199:INFO:Initializing predict_model()
2023-10-13 11:47:38,199:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 11:47:38,199:INFO:Checking exceptions
2023-10-13 11:47:38,199:INFO:Preloading libraries
2023-10-13 11:47:38,199:INFO:Set up data.
2023-10-13 11:47:38,206:INFO:Set up index.
2023-10-13 11:47:38,256:INFO:Initializing predict_model()
2023-10-13 11:47:38,256:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2916c79d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x284e2b700>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 11:47:38,256:INFO:Checking exceptions
2023-10-13 11:47:38,256:INFO:Preloading libraries
2023-10-13 11:47:38,256:INFO:Set up data.
2023-10-13 11:47:38,262:INFO:Set up index.
2023-10-13 11:48:28,134:INFO:Initializing load_model()
2023-10-13 11:48:28,134:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:48:28,139:INFO:Initializing load_model()
2023-10-13 11:48:28,139:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:48:28,146:INFO:Initializing load_model()
2023-10-13 11:48:28,146:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:48:28,150:INFO:Initializing load_model()
2023-10-13 11:48:28,150:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:48:28,153:INFO:Initializing load_model()
2023-10-13 11:48:28,153:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:48:28,182:INFO:Initializing predict_model()
2023-10-13 11:48:28,182:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b127550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:48:28,182:INFO:Checking exceptions
2023-10-13 11:48:28,182:INFO:Preloading libraries
2023-10-13 11:48:28,183:INFO:Set up data.
2023-10-13 11:48:28,205:INFO:Set up index.
2023-10-13 11:48:28,320:INFO:Initializing predict_model()
2023-10-13 11:48:28,320:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1707212d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:48:28,320:INFO:Checking exceptions
2023-10-13 11:48:28,320:INFO:Preloading libraries
2023-10-13 11:48:28,320:INFO:Set up data.
2023-10-13 11:48:28,327:INFO:Set up index.
2023-10-13 11:48:28,385:INFO:Initializing predict_model()
2023-10-13 11:48:28,385:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1707212d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:48:28,385:INFO:Checking exceptions
2023-10-13 11:48:28,385:INFO:Preloading libraries
2023-10-13 11:48:28,385:INFO:Set up data.
2023-10-13 11:48:28,392:INFO:Set up index.
2023-10-13 11:48:28,456:INFO:Initializing predict_model()
2023-10-13 11:48:28,456:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1707212d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:48:28,457:INFO:Checking exceptions
2023-10-13 11:48:28,457:INFO:Preloading libraries
2023-10-13 11:48:28,457:INFO:Set up data.
2023-10-13 11:48:28,464:INFO:Set up index.
2023-10-13 11:48:28,521:INFO:Initializing predict_model()
2023-10-13 11:48:28,521:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1707212d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:48:28,521:INFO:Checking exceptions
2023-10-13 11:48:28,521:INFO:Preloading libraries
2023-10-13 11:48:28,521:INFO:Set up data.
2023-10-13 11:48:28,528:INFO:Set up index.
2023-10-13 11:48:37,068:INFO:Initializing predict_model()
2023-10-13 11:48:37,069:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b1067a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a710>)
2023-10-13 11:48:37,069:INFO:Checking exceptions
2023-10-13 11:48:37,069:INFO:Preloading libraries
2023-10-13 11:48:37,070:INFO:Set up data.
2023-10-13 11:48:37,082:INFO:Set up index.
2023-10-13 11:48:37,172:INFO:Initializing predict_model()
2023-10-13 11:48:37,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd0f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a710>)
2023-10-13 11:48:37,172:INFO:Checking exceptions
2023-10-13 11:48:37,172:INFO:Preloading libraries
2023-10-13 11:48:37,172:INFO:Set up data.
2023-10-13 11:48:37,178:INFO:Set up index.
2023-10-13 11:48:37,229:INFO:Initializing predict_model()
2023-10-13 11:48:37,229:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b104a00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:48:37,229:INFO:Checking exceptions
2023-10-13 11:48:37,229:INFO:Preloading libraries
2023-10-13 11:48:37,230:INFO:Set up data.
2023-10-13 11:48:37,235:INFO:Set up index.
2023-10-13 11:48:37,286:INFO:Initializing predict_model()
2023-10-13 11:48:37,287:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1707212d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:48:37,287:INFO:Checking exceptions
2023-10-13 11:48:37,287:INFO:Preloading libraries
2023-10-13 11:48:37,287:INFO:Set up data.
2023-10-13 11:48:37,293:INFO:Set up index.
2023-10-13 11:48:37,343:INFO:Initializing predict_model()
2023-10-13 11:48:37,343:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1707212d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:48:37,343:INFO:Checking exceptions
2023-10-13 11:48:37,343:INFO:Preloading libraries
2023-10-13 11:48:37,343:INFO:Set up data.
2023-10-13 11:48:37,349:INFO:Set up index.
2023-10-13 11:48:45,920:INFO:Initializing predict_model()
2023-10-13 11:48:45,921:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101e70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1481f0>)
2023-10-13 11:48:45,921:INFO:Checking exceptions
2023-10-13 11:48:45,921:INFO:Preloading libraries
2023-10-13 11:48:45,921:INFO:Set up data.
2023-10-13 11:48:45,931:INFO:Set up index.
2023-10-13 11:48:46,003:INFO:Initializing predict_model()
2023-10-13 11:48:46,003:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1481f0>)
2023-10-13 11:48:46,003:INFO:Checking exceptions
2023-10-13 11:48:46,003:INFO:Preloading libraries
2023-10-13 11:48:46,004:INFO:Set up data.
2023-10-13 11:48:46,010:INFO:Set up index.
2023-10-13 11:48:46,061:INFO:Initializing predict_model()
2023-10-13 11:48:46,061:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1e320>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1481f0>)
2023-10-13 11:48:46,061:INFO:Checking exceptions
2023-10-13 11:48:46,061:INFO:Preloading libraries
2023-10-13 11:48:46,061:INFO:Set up data.
2023-10-13 11:48:46,067:INFO:Set up index.
2023-10-13 11:48:46,118:INFO:Initializing predict_model()
2023-10-13 11:48:46,118:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:48:46,118:INFO:Checking exceptions
2023-10-13 11:48:46,118:INFO:Preloading libraries
2023-10-13 11:48:46,119:INFO:Set up data.
2023-10-13 11:48:46,124:INFO:Set up index.
2023-10-13 11:48:46,175:INFO:Initializing predict_model()
2023-10-13 11:48:46,175:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b125510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:48:46,175:INFO:Checking exceptions
2023-10-13 11:48:46,175:INFO:Preloading libraries
2023-10-13 11:48:46,175:INFO:Set up data.
2023-10-13 11:48:46,181:INFO:Set up index.
2023-10-13 11:48:54,695:INFO:Initializing predict_model()
2023-10-13 11:48:54,696:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b357490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149990>)
2023-10-13 11:48:54,696:INFO:Checking exceptions
2023-10-13 11:48:54,696:INFO:Preloading libraries
2023-10-13 11:48:54,696:INFO:Set up data.
2023-10-13 11:48:54,705:INFO:Set up index.
2023-10-13 11:48:54,773:INFO:Initializing predict_model()
2023-10-13 11:48:54,773:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 11:48:54,773:INFO:Checking exceptions
2023-10-13 11:48:54,773:INFO:Preloading libraries
2023-10-13 11:48:54,773:INFO:Set up data.
2023-10-13 11:48:54,779:INFO:Set up index.
2023-10-13 11:48:54,833:INFO:Initializing predict_model()
2023-10-13 11:48:54,833:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 11:48:54,833:INFO:Checking exceptions
2023-10-13 11:48:54,833:INFO:Preloading libraries
2023-10-13 11:48:54,833:INFO:Set up data.
2023-10-13 11:48:54,839:INFO:Set up index.
2023-10-13 11:48:54,891:INFO:Initializing predict_model()
2023-10-13 11:48:54,891:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 11:48:54,891:INFO:Checking exceptions
2023-10-13 11:48:54,891:INFO:Preloading libraries
2023-10-13 11:48:54,891:INFO:Set up data.
2023-10-13 11:48:54,897:INFO:Set up index.
2023-10-13 11:48:54,948:INFO:Initializing predict_model()
2023-10-13 11:48:54,948:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7ea70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 11:48:54,948:INFO:Checking exceptions
2023-10-13 11:48:54,948:INFO:Preloading libraries
2023-10-13 11:48:54,948:INFO:Set up data.
2023-10-13 11:48:54,954:INFO:Set up index.
2023-10-13 11:49:03,529:INFO:Initializing predict_model()
2023-10-13 11:49:03,530:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b099210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:49:03,530:INFO:Checking exceptions
2023-10-13 11:49:03,530:INFO:Preloading libraries
2023-10-13 11:49:03,531:INFO:Set up data.
2023-10-13 11:49:03,542:INFO:Set up index.
2023-10-13 11:49:03,641:INFO:Initializing predict_model()
2023-10-13 11:49:03,641:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b075660>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:49:03,641:INFO:Checking exceptions
2023-10-13 11:49:03,642:INFO:Preloading libraries
2023-10-13 11:49:03,642:INFO:Set up data.
2023-10-13 11:49:03,649:INFO:Set up index.
2023-10-13 11:49:03,701:INFO:Initializing predict_model()
2023-10-13 11:49:03,701:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101420>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:49:03,701:INFO:Checking exceptions
2023-10-13 11:49:03,701:INFO:Preloading libraries
2023-10-13 11:49:03,701:INFO:Set up data.
2023-10-13 11:49:03,707:INFO:Set up index.
2023-10-13 11:49:03,759:INFO:Initializing predict_model()
2023-10-13 11:49:03,759:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b103040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:49:03,759:INFO:Checking exceptions
2023-10-13 11:49:03,759:INFO:Preloading libraries
2023-10-13 11:49:03,759:INFO:Set up data.
2023-10-13 11:49:03,765:INFO:Set up index.
2023-10-13 11:49:03,815:INFO:Initializing predict_model()
2023-10-13 11:49:03,815:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b103040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 11:49:03,815:INFO:Checking exceptions
2023-10-13 11:49:03,815:INFO:Preloading libraries
2023-10-13 11:49:03,815:INFO:Set up data.
2023-10-13 11:49:03,821:INFO:Set up index.
2023-10-13 11:49:12,379:INFO:Initializing predict_model()
2023-10-13 11:49:12,385:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b105300>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14af80>)
2023-10-13 11:49:12,385:INFO:Checking exceptions
2023-10-13 11:49:12,385:INFO:Preloading libraries
2023-10-13 11:49:12,389:INFO:Set up data.
2023-10-13 11:49:12,404:INFO:Set up index.
2023-10-13 11:49:12,503:INFO:Initializing predict_model()
2023-10-13 11:49:12,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2bbe0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:49:12,503:INFO:Checking exceptions
2023-10-13 11:49:12,503:INFO:Preloading libraries
2023-10-13 11:49:12,503:INFO:Set up data.
2023-10-13 11:49:12,510:INFO:Set up index.
2023-10-13 11:49:12,561:INFO:Initializing predict_model()
2023-10-13 11:49:12,561:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:49:12,561:INFO:Checking exceptions
2023-10-13 11:49:12,561:INFO:Preloading libraries
2023-10-13 11:49:12,561:INFO:Set up data.
2023-10-13 11:49:12,567:INFO:Set up index.
2023-10-13 11:49:12,619:INFO:Initializing predict_model()
2023-10-13 11:49:12,619:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101c60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:49:12,619:INFO:Checking exceptions
2023-10-13 11:49:12,619:INFO:Preloading libraries
2023-10-13 11:49:12,619:INFO:Set up data.
2023-10-13 11:49:12,625:INFO:Set up index.
2023-10-13 11:49:12,676:INFO:Initializing predict_model()
2023-10-13 11:49:12,676:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101c60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:49:12,676:INFO:Checking exceptions
2023-10-13 11:49:12,676:INFO:Preloading libraries
2023-10-13 11:49:12,676:INFO:Set up data.
2023-10-13 11:49:12,682:INFO:Set up index.
2023-10-13 11:49:21,241:INFO:Initializing predict_model()
2023-10-13 11:49:21,242:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b202c20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 11:49:21,242:INFO:Checking exceptions
2023-10-13 11:49:21,242:INFO:Preloading libraries
2023-10-13 11:49:21,242:INFO:Set up data.
2023-10-13 11:49:21,252:INFO:Set up index.
2023-10-13 11:49:21,324:INFO:Initializing predict_model()
2023-10-13 11:49:21,324:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2a7a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 11:49:21,324:INFO:Checking exceptions
2023-10-13 11:49:21,324:INFO:Preloading libraries
2023-10-13 11:49:21,324:INFO:Set up data.
2023-10-13 11:49:21,331:INFO:Set up index.
2023-10-13 11:49:21,433:INFO:Initializing predict_model()
2023-10-13 11:49:21,433:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b1049d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 11:49:21,434:INFO:Checking exceptions
2023-10-13 11:49:21,434:INFO:Preloading libraries
2023-10-13 11:49:21,435:INFO:Set up data.
2023-10-13 11:49:21,453:INFO:Set up index.
2023-10-13 11:49:21,689:INFO:Initializing predict_model()
2023-10-13 11:49:21,689:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101e70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 11:49:21,689:INFO:Checking exceptions
2023-10-13 11:49:21,689:INFO:Preloading libraries
2023-10-13 11:49:21,690:INFO:Set up data.
2023-10-13 11:49:21,716:INFO:Set up index.
2023-10-13 11:49:21,882:INFO:Initializing predict_model()
2023-10-13 11:49:21,883:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101e70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 11:49:21,883:INFO:Checking exceptions
2023-10-13 11:49:21,883:INFO:Preloading libraries
2023-10-13 11:49:21,883:INFO:Set up data.
2023-10-13 11:49:21,903:INFO:Set up index.
2023-10-13 11:49:30,521:INFO:Initializing predict_model()
2023-10-13 11:49:30,525:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3571c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 11:49:30,525:INFO:Checking exceptions
2023-10-13 11:49:30,525:INFO:Preloading libraries
2023-10-13 11:49:30,531:INFO:Set up data.
2023-10-13 11:49:30,578:INFO:Set up index.
2023-10-13 11:49:30,866:INFO:Initializing predict_model()
2023-10-13 11:49:30,866:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101e70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 11:49:30,866:INFO:Checking exceptions
2023-10-13 11:49:30,866:INFO:Preloading libraries
2023-10-13 11:49:30,867:INFO:Set up data.
2023-10-13 11:49:30,877:INFO:Set up index.
2023-10-13 11:49:30,947:INFO:Initializing predict_model()
2023-10-13 11:49:30,947:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101e70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 11:49:30,947:INFO:Checking exceptions
2023-10-13 11:49:30,947:INFO:Preloading libraries
2023-10-13 11:49:30,947:INFO:Set up data.
2023-10-13 11:49:30,953:INFO:Set up index.
2023-10-13 11:49:31,007:INFO:Initializing predict_model()
2023-10-13 11:49:31,007:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101e70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 11:49:31,007:INFO:Checking exceptions
2023-10-13 11:49:31,007:INFO:Preloading libraries
2023-10-13 11:49:31,007:INFO:Set up data.
2023-10-13 11:49:31,014:INFO:Set up index.
2023-10-13 11:49:31,070:INFO:Initializing predict_model()
2023-10-13 11:49:31,071:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b101e70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 11:49:31,071:INFO:Checking exceptions
2023-10-13 11:49:31,071:INFO:Preloading libraries
2023-10-13 11:49:31,071:INFO:Set up data.
2023-10-13 11:49:31,077:INFO:Set up index.
2023-10-13 11:49:39,649:INFO:Initializing predict_model()
2023-10-13 11:49:39,650:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b098ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:49:39,650:INFO:Checking exceptions
2023-10-13 11:49:39,650:INFO:Preloading libraries
2023-10-13 11:49:39,650:INFO:Set up data.
2023-10-13 11:49:39,661:INFO:Set up index.
2023-10-13 11:49:39,731:INFO:Initializing predict_model()
2023-10-13 11:49:39,731:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:49:39,731:INFO:Checking exceptions
2023-10-13 11:49:39,731:INFO:Preloading libraries
2023-10-13 11:49:39,731:INFO:Set up data.
2023-10-13 11:49:39,737:INFO:Set up index.
2023-10-13 11:49:39,794:INFO:Initializing predict_model()
2023-10-13 11:49:39,794:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:49:39,794:INFO:Checking exceptions
2023-10-13 11:49:39,794:INFO:Preloading libraries
2023-10-13 11:49:39,794:INFO:Set up data.
2023-10-13 11:49:39,800:INFO:Set up index.
2023-10-13 11:49:39,852:INFO:Initializing predict_model()
2023-10-13 11:49:39,852:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:49:39,852:INFO:Checking exceptions
2023-10-13 11:49:39,852:INFO:Preloading libraries
2023-10-13 11:49:39,853:INFO:Set up data.
2023-10-13 11:49:39,859:INFO:Set up index.
2023-10-13 11:49:39,911:INFO:Initializing predict_model()
2023-10-13 11:49:39,911:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:49:39,911:INFO:Checking exceptions
2023-10-13 11:49:39,911:INFO:Preloading libraries
2023-10-13 11:49:39,911:INFO:Set up data.
2023-10-13 11:49:39,917:INFO:Set up index.
2023-10-13 11:49:48,397:INFO:Initializing predict_model()
2023-10-13 11:49:48,398:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2a410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b356530>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 11:49:48,398:INFO:Checking exceptions
2023-10-13 11:49:48,398:INFO:Preloading libraries
2023-10-13 11:49:48,398:INFO:Set up data.
2023-10-13 11:49:48,409:INFO:Set up index.
2023-10-13 11:49:48,473:INFO:Initializing predict_model()
2023-10-13 11:49:48,474:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2a410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 11:49:48,474:INFO:Checking exceptions
2023-10-13 11:49:48,474:INFO:Preloading libraries
2023-10-13 11:49:48,474:INFO:Set up data.
2023-10-13 11:49:48,480:INFO:Set up index.
2023-10-13 11:49:48,531:INFO:Initializing predict_model()
2023-10-13 11:49:48,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2a410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 11:49:48,532:INFO:Checking exceptions
2023-10-13 11:49:48,532:INFO:Preloading libraries
2023-10-13 11:49:48,532:INFO:Set up data.
2023-10-13 11:49:48,538:INFO:Set up index.
2023-10-13 11:49:48,590:INFO:Initializing predict_model()
2023-10-13 11:49:48,590:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e29ff0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 11:49:48,590:INFO:Checking exceptions
2023-10-13 11:49:48,590:INFO:Preloading libraries
2023-10-13 11:49:48,590:INFO:Set up data.
2023-10-13 11:49:48,596:INFO:Set up index.
2023-10-13 11:49:48,647:INFO:Initializing predict_model()
2023-10-13 11:49:48,647:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e29ff0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b355690>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 11:49:48,647:INFO:Checking exceptions
2023-10-13 11:49:48,647:INFO:Preloading libraries
2023-10-13 11:49:48,647:INFO:Set up data.
2023-10-13 11:49:48,653:INFO:Set up index.
2023-10-13 11:49:59,750:INFO:Initializing load_model()
2023-10-13 11:49:59,750:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:49:59,757:INFO:Initializing load_model()
2023-10-13 11:49:59,757:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:49:59,759:INFO:Initializing load_model()
2023-10-13 11:49:59,759:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:49:59,761:INFO:Initializing load_model()
2023-10-13 11:49:59,761:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:49:59,763:INFO:Initializing load_model()
2023-10-13 11:49:59,763:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:49:59,786:INFO:Initializing predict_model()
2023-10-13 11:49:59,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd5a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47e3e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149360>)
2023-10-13 11:49:59,786:INFO:Checking exceptions
2023-10-13 11:49:59,786:INFO:Preloading libraries
2023-10-13 11:49:59,786:INFO:Set up data.
2023-10-13 11:49:59,793:INFO:Set up index.
2023-10-13 11:49:59,851:INFO:Initializing predict_model()
2023-10-13 11:49:59,851:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd5a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:49:59,851:INFO:Checking exceptions
2023-10-13 11:49:59,851:INFO:Preloading libraries
2023-10-13 11:49:59,851:INFO:Set up data.
2023-10-13 11:49:59,858:INFO:Set up index.
2023-10-13 11:49:59,911:INFO:Initializing predict_model()
2023-10-13 11:49:59,911:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b102e30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:49:59,911:INFO:Checking exceptions
2023-10-13 11:49:59,911:INFO:Preloading libraries
2023-10-13 11:49:59,911:INFO:Set up data.
2023-10-13 11:49:59,918:INFO:Set up index.
2023-10-13 11:49:59,971:INFO:Initializing predict_model()
2023-10-13 11:49:59,971:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b102e30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:49:59,971:INFO:Checking exceptions
2023-10-13 11:49:59,971:INFO:Preloading libraries
2023-10-13 11:49:59,972:INFO:Set up data.
2023-10-13 11:49:59,978:INFO:Set up index.
2023-10-13 11:50:00,034:INFO:Initializing predict_model()
2023-10-13 11:50:00,034:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b076a40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47d090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:00,034:INFO:Checking exceptions
2023-10-13 11:50:00,034:INFO:Preloading libraries
2023-10-13 11:50:00,034:INFO:Set up data.
2023-10-13 11:50:00,040:INFO:Set up index.
2023-10-13 11:50:08,572:INFO:Initializing predict_model()
2023-10-13 11:50:08,573:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b102e30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47e3e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:08,573:INFO:Checking exceptions
2023-10-13 11:50:08,573:INFO:Preloading libraries
2023-10-13 11:50:08,574:INFO:Set up data.
2023-10-13 11:50:08,584:INFO:Set up index.
2023-10-13 11:50:08,721:INFO:Initializing predict_model()
2023-10-13 11:50:08,723:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b076800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:08,724:INFO:Checking exceptions
2023-10-13 11:50:08,724:INFO:Preloading libraries
2023-10-13 11:50:08,724:INFO:Set up data.
2023-10-13 11:50:08,731:INFO:Set up index.
2023-10-13 11:50:08,785:INFO:Initializing predict_model()
2023-10-13 11:50:08,785:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b076800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:08,785:INFO:Checking exceptions
2023-10-13 11:50:08,785:INFO:Preloading libraries
2023-10-13 11:50:08,785:INFO:Set up data.
2023-10-13 11:50:08,791:INFO:Set up index.
2023-10-13 11:50:08,844:INFO:Initializing predict_model()
2023-10-13 11:50:08,844:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b076800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:08,844:INFO:Checking exceptions
2023-10-13 11:50:08,844:INFO:Preloading libraries
2023-10-13 11:50:08,844:INFO:Set up data.
2023-10-13 11:50:08,850:INFO:Set up index.
2023-10-13 11:50:08,904:INFO:Initializing predict_model()
2023-10-13 11:50:08,904:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b076800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47d090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:08,904:INFO:Checking exceptions
2023-10-13 11:50:08,904:INFO:Preloading libraries
2023-10-13 11:50:08,904:INFO:Set up data.
2023-10-13 11:50:08,910:INFO:Set up index.
2023-10-13 11:50:17,472:INFO:Initializing predict_model()
2023-10-13 11:50:17,473:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47e3e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:17,473:INFO:Checking exceptions
2023-10-13 11:50:17,473:INFO:Preloading libraries
2023-10-13 11:50:17,474:INFO:Set up data.
2023-10-13 11:50:17,485:INFO:Set up index.
2023-10-13 11:50:17,596:INFO:Initializing predict_model()
2023-10-13 11:50:17,596:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:17,596:INFO:Checking exceptions
2023-10-13 11:50:17,596:INFO:Preloading libraries
2023-10-13 11:50:17,596:INFO:Set up data.
2023-10-13 11:50:17,602:INFO:Set up index.
2023-10-13 11:50:17,656:INFO:Initializing predict_model()
2023-10-13 11:50:17,656:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:17,656:INFO:Checking exceptions
2023-10-13 11:50:17,656:INFO:Preloading libraries
2023-10-13 11:50:17,656:INFO:Set up data.
2023-10-13 11:50:17,662:INFO:Set up index.
2023-10-13 11:50:17,720:INFO:Initializing predict_model()
2023-10-13 11:50:17,720:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:17,720:INFO:Checking exceptions
2023-10-13 11:50:17,720:INFO:Preloading libraries
2023-10-13 11:50:17,720:INFO:Set up data.
2023-10-13 11:50:17,728:INFO:Set up index.
2023-10-13 11:50:17,782:INFO:Initializing predict_model()
2023-10-13 11:50:17,782:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47d090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:17,782:INFO:Checking exceptions
2023-10-13 11:50:17,782:INFO:Preloading libraries
2023-10-13 11:50:17,783:INFO:Set up data.
2023-10-13 11:50:17,789:INFO:Set up index.
2023-10-13 11:50:26,333:INFO:Initializing predict_model()
2023-10-13 11:50:26,334:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47e3e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:26,334:INFO:Checking exceptions
2023-10-13 11:50:26,334:INFO:Preloading libraries
2023-10-13 11:50:26,335:INFO:Set up data.
2023-10-13 11:50:26,346:INFO:Set up index.
2023-10-13 11:50:26,444:INFO:Initializing predict_model()
2023-10-13 11:50:26,444:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b203070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:26,444:INFO:Checking exceptions
2023-10-13 11:50:26,444:INFO:Preloading libraries
2023-10-13 11:50:26,444:INFO:Set up data.
2023-10-13 11:50:26,451:INFO:Set up index.
2023-10-13 11:50:26,506:INFO:Initializing predict_model()
2023-10-13 11:50:26,506:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bec80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:26,506:INFO:Checking exceptions
2023-10-13 11:50:26,506:INFO:Preloading libraries
2023-10-13 11:50:26,506:INFO:Set up data.
2023-10-13 11:50:26,512:INFO:Set up index.
2023-10-13 11:50:26,567:INFO:Initializing predict_model()
2023-10-13 11:50:26,567:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bec80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:26,567:INFO:Checking exceptions
2023-10-13 11:50:26,567:INFO:Preloading libraries
2023-10-13 11:50:26,567:INFO:Set up data.
2023-10-13 11:50:26,573:INFO:Set up index.
2023-10-13 11:50:26,628:INFO:Initializing predict_model()
2023-10-13 11:50:26,628:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bec80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47d090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:26,628:INFO:Checking exceptions
2023-10-13 11:50:26,628:INFO:Preloading libraries
2023-10-13 11:50:26,628:INFO:Set up data.
2023-10-13 11:50:26,634:INFO:Set up index.
2023-10-13 11:50:35,174:INFO:Initializing predict_model()
2023-10-13 11:50:35,175:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b125390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47e3e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:35,175:INFO:Checking exceptions
2023-10-13 11:50:35,175:INFO:Preloading libraries
2023-10-13 11:50:35,176:INFO:Set up data.
2023-10-13 11:50:35,187:INFO:Set up index.
2023-10-13 11:50:35,305:INFO:Initializing predict_model()
2023-10-13 11:50:35,305:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:35,305:INFO:Checking exceptions
2023-10-13 11:50:35,305:INFO:Preloading libraries
2023-10-13 11:50:35,305:INFO:Set up data.
2023-10-13 11:50:35,311:INFO:Set up index.
2023-10-13 11:50:35,365:INFO:Initializing predict_model()
2023-10-13 11:50:35,365:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:35,365:INFO:Checking exceptions
2023-10-13 11:50:35,365:INFO:Preloading libraries
2023-10-13 11:50:35,365:INFO:Set up data.
2023-10-13 11:50:35,371:INFO:Set up index.
2023-10-13 11:50:35,428:INFO:Initializing predict_model()
2023-10-13 11:50:35,428:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:35,428:INFO:Checking exceptions
2023-10-13 11:50:35,428:INFO:Preloading libraries
2023-10-13 11:50:35,428:INFO:Set up data.
2023-10-13 11:50:35,434:INFO:Set up index.
2023-10-13 11:50:35,485:INFO:Initializing predict_model()
2023-10-13 11:50:35,485:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bd7e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47d090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 11:50:35,485:INFO:Checking exceptions
2023-10-13 11:50:35,485:INFO:Preloading libraries
2023-10-13 11:50:35,486:INFO:Set up data.
2023-10-13 11:50:35,491:INFO:Set up index.
2023-10-13 11:50:44,037:INFO:Initializing predict_model()
2023-10-13 11:50:44,040:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b355cc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47e3e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:50:44,040:INFO:Checking exceptions
2023-10-13 11:50:44,040:INFO:Preloading libraries
2023-10-13 11:50:44,042:INFO:Set up data.
2023-10-13 11:50:44,053:INFO:Set up index.
2023-10-13 11:50:44,143:INFO:Initializing predict_model()
2023-10-13 11:50:44,143:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b521270>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:50:44,143:INFO:Checking exceptions
2023-10-13 11:50:44,143:INFO:Preloading libraries
2023-10-13 11:50:44,143:INFO:Set up data.
2023-10-13 11:50:44,150:INFO:Set up index.
2023-10-13 11:50:44,220:INFO:Initializing predict_model()
2023-10-13 11:50:44,220:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b105420>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:50:44,221:INFO:Checking exceptions
2023-10-13 11:50:44,221:INFO:Preloading libraries
2023-10-13 11:50:44,221:INFO:Set up data.
2023-10-13 11:50:44,228:INFO:Set up index.
2023-10-13 11:50:44,290:INFO:Initializing predict_model()
2023-10-13 11:50:44,290:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b355720>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:50:44,290:INFO:Checking exceptions
2023-10-13 11:50:44,290:INFO:Preloading libraries
2023-10-13 11:50:44,290:INFO:Set up data.
2023-10-13 11:50:44,297:INFO:Set up index.
2023-10-13 11:50:44,355:INFO:Initializing predict_model()
2023-10-13 11:50:44,355:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1fa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47d090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:50:44,355:INFO:Checking exceptions
2023-10-13 11:50:44,355:INFO:Preloading libraries
2023-10-13 11:50:44,355:INFO:Set up data.
2023-10-13 11:50:44,362:INFO:Set up index.
2023-10-13 11:50:52,894:INFO:Initializing predict_model()
2023-10-13 11:50:52,894:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b098070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47e3e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:50:52,894:INFO:Checking exceptions
2023-10-13 11:50:52,894:INFO:Preloading libraries
2023-10-13 11:50:52,895:INFO:Set up data.
2023-10-13 11:50:52,905:INFO:Set up index.
2023-10-13 11:50:53,012:INFO:Initializing predict_model()
2023-10-13 11:50:53,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47fe80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:50:53,012:INFO:Checking exceptions
2023-10-13 11:50:53,012:INFO:Preloading libraries
2023-10-13 11:50:53,012:INFO:Set up data.
2023-10-13 11:50:53,019:INFO:Set up index.
2023-10-13 11:50:53,072:INFO:Initializing predict_model()
2023-10-13 11:50:53,072:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1e050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:50:53,072:INFO:Checking exceptions
2023-10-13 11:50:53,072:INFO:Preloading libraries
2023-10-13 11:50:53,072:INFO:Set up data.
2023-10-13 11:50:53,078:INFO:Set up index.
2023-10-13 11:50:53,131:INFO:Initializing predict_model()
2023-10-13 11:50:53,131:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1df60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:50:53,131:INFO:Checking exceptions
2023-10-13 11:50:53,131:INFO:Preloading libraries
2023-10-13 11:50:53,131:INFO:Set up data.
2023-10-13 11:50:53,137:INFO:Set up index.
2023-10-13 11:50:53,189:INFO:Initializing predict_model()
2023-10-13 11:50:53,190:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1efb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47d090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:50:53,190:INFO:Checking exceptions
2023-10-13 11:50:53,190:INFO:Preloading libraries
2023-10-13 11:50:53,190:INFO:Set up data.
2023-10-13 11:50:53,196:INFO:Set up index.
2023-10-13 11:51:01,760:INFO:Initializing predict_model()
2023-10-13 11:51:01,760:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b126b90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47e3e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 11:51:01,760:INFO:Checking exceptions
2023-10-13 11:51:01,760:INFO:Preloading libraries
2023-10-13 11:51:01,761:INFO:Set up data.
2023-10-13 11:51:01,771:INFO:Set up index.
2023-10-13 11:51:01,840:INFO:Initializing predict_model()
2023-10-13 11:51:01,840:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47c700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 11:51:01,840:INFO:Checking exceptions
2023-10-13 11:51:01,840:INFO:Preloading libraries
2023-10-13 11:51:01,840:INFO:Set up data.
2023-10-13 11:51:01,846:INFO:Set up index.
2023-10-13 11:51:01,899:INFO:Initializing predict_model()
2023-10-13 11:51:01,899:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47c700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 11:51:01,899:INFO:Checking exceptions
2023-10-13 11:51:01,899:INFO:Preloading libraries
2023-10-13 11:51:01,899:INFO:Set up data.
2023-10-13 11:51:01,905:INFO:Set up index.
2023-10-13 11:51:01,957:INFO:Initializing predict_model()
2023-10-13 11:51:01,957:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47c700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 11:51:01,957:INFO:Checking exceptions
2023-10-13 11:51:01,957:INFO:Preloading libraries
2023-10-13 11:51:01,958:INFO:Set up data.
2023-10-13 11:51:01,964:INFO:Set up index.
2023-10-13 11:51:02,016:INFO:Initializing predict_model()
2023-10-13 11:51:02,016:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47c700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b47d090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 11:51:02,016:INFO:Checking exceptions
2023-10-13 11:51:02,016:INFO:Preloading libraries
2023-10-13 11:51:02,016:INFO:Set up data.
2023-10-13 11:51:02,022:INFO:Set up index.
2023-10-13 11:51:10,776:INFO:Initializing load_model()
2023-10-13 11:51:10,776:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:51:10,779:INFO:Initializing load_model()
2023-10-13 11:51:10,779:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:51:10,783:INFO:Initializing load_model()
2023-10-13 11:51:10,783:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:51:10,785:INFO:Initializing load_model()
2023-10-13 11:51:10,785:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:51:10,787:INFO:Initializing load_model()
2023-10-13 11:51:10,787:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 11:51:10,812:INFO:Initializing predict_model()
2023-10-13 11:51:10,812:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b077ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148310>)
2023-10-13 11:51:10,812:INFO:Checking exceptions
2023-10-13 11:51:10,812:INFO:Preloading libraries
2023-10-13 11:51:10,812:INFO:Set up data.
2023-10-13 11:51:10,819:INFO:Set up index.
2023-10-13 11:51:10,887:INFO:Initializing predict_model()
2023-10-13 11:51:10,887:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b077ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:51:10,887:INFO:Checking exceptions
2023-10-13 11:51:10,887:INFO:Preloading libraries
2023-10-13 11:51:10,887:INFO:Set up data.
2023-10-13 11:51:10,894:INFO:Set up index.
2023-10-13 11:51:10,952:INFO:Initializing predict_model()
2023-10-13 11:51:10,952:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b077ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:51:10,952:INFO:Checking exceptions
2023-10-13 11:51:10,952:INFO:Preloading libraries
2023-10-13 11:51:10,952:INFO:Set up data.
2023-10-13 11:51:10,959:INFO:Set up index.
2023-10-13 11:51:11,012:INFO:Initializing predict_model()
2023-10-13 11:51:11,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b077ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:51:11,012:INFO:Checking exceptions
2023-10-13 11:51:11,012:INFO:Preloading libraries
2023-10-13 11:51:11,012:INFO:Set up data.
2023-10-13 11:51:11,018:INFO:Set up index.
2023-10-13 11:51:11,074:INFO:Initializing predict_model()
2023-10-13 11:51:11,076:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b077ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 11:51:11,076:INFO:Checking exceptions
2023-10-13 11:51:11,076:INFO:Preloading libraries
2023-10-13 11:51:11,076:INFO:Set up data.
2023-10-13 11:51:11,082:INFO:Set up index.
2023-10-13 11:51:19,602:INFO:Initializing predict_model()
2023-10-13 11:51:19,604:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594b20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:51:19,604:INFO:Checking exceptions
2023-10-13 11:51:19,604:INFO:Preloading libraries
2023-10-13 11:51:19,604:INFO:Set up data.
2023-10-13 11:51:19,614:INFO:Set up index.
2023-10-13 11:51:19,680:INFO:Initializing predict_model()
2023-10-13 11:51:19,680:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b077ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:51:19,680:INFO:Checking exceptions
2023-10-13 11:51:19,680:INFO:Preloading libraries
2023-10-13 11:51:19,680:INFO:Set up data.
2023-10-13 11:51:19,687:INFO:Set up index.
2023-10-13 11:51:19,740:INFO:Initializing predict_model()
2023-10-13 11:51:19,740:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b077ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:51:19,740:INFO:Checking exceptions
2023-10-13 11:51:19,740:INFO:Preloading libraries
2023-10-13 11:51:19,740:INFO:Set up data.
2023-10-13 11:51:19,746:INFO:Set up index.
2023-10-13 11:51:19,799:INFO:Initializing predict_model()
2023-10-13 11:51:19,799:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b077ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:51:19,799:INFO:Checking exceptions
2023-10-13 11:51:19,799:INFO:Preloading libraries
2023-10-13 11:51:19,799:INFO:Set up data.
2023-10-13 11:51:19,805:INFO:Set up index.
2023-10-13 11:51:19,857:INFO:Initializing predict_model()
2023-10-13 11:51:19,857:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b077ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 11:51:19,857:INFO:Checking exceptions
2023-10-13 11:51:19,857:INFO:Preloading libraries
2023-10-13 11:51:19,858:INFO:Set up data.
2023-10-13 11:51:19,863:INFO:Set up index.
2023-10-13 11:51:28,390:INFO:Initializing predict_model()
2023-10-13 11:51:28,390:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b504df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:51:28,390:INFO:Checking exceptions
2023-10-13 11:51:28,390:INFO:Preloading libraries
2023-10-13 11:51:28,390:INFO:Set up data.
2023-10-13 11:51:28,400:INFO:Set up index.
2023-10-13 11:51:28,459:INFO:Initializing predict_model()
2023-10-13 11:51:28,460:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5222f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:51:28,460:INFO:Checking exceptions
2023-10-13 11:51:28,460:INFO:Preloading libraries
2023-10-13 11:51:28,460:INFO:Set up data.
2023-10-13 11:51:28,466:INFO:Set up index.
2023-10-13 11:51:28,518:INFO:Initializing predict_model()
2023-10-13 11:51:28,518:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5222f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:51:28,518:INFO:Checking exceptions
2023-10-13 11:51:28,518:INFO:Preloading libraries
2023-10-13 11:51:28,519:INFO:Set up data.
2023-10-13 11:51:28,525:INFO:Set up index.
2023-10-13 11:51:28,578:INFO:Initializing predict_model()
2023-10-13 11:51:28,579:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5222f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:51:28,579:INFO:Checking exceptions
2023-10-13 11:51:28,579:INFO:Preloading libraries
2023-10-13 11:51:28,579:INFO:Set up data.
2023-10-13 11:51:28,585:INFO:Set up index.
2023-10-13 11:51:28,637:INFO:Initializing predict_model()
2023-10-13 11:51:28,637:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5222f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 11:51:28,637:INFO:Checking exceptions
2023-10-13 11:51:28,637:INFO:Preloading libraries
2023-10-13 11:51:28,637:INFO:Set up data.
2023-10-13 11:51:28,643:INFO:Set up index.
2023-10-13 11:51:37,158:INFO:Initializing predict_model()
2023-10-13 11:51:37,159:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5222f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a4d0>)
2023-10-13 11:51:37,159:INFO:Checking exceptions
2023-10-13 11:51:37,159:INFO:Preloading libraries
2023-10-13 11:51:37,159:INFO:Set up data.
2023-10-13 11:51:37,169:INFO:Set up index.
2023-10-13 11:51:37,232:INFO:Initializing predict_model()
2023-10-13 11:51:37,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5222f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 11:51:37,232:INFO:Checking exceptions
2023-10-13 11:51:37,232:INFO:Preloading libraries
2023-10-13 11:51:37,232:INFO:Set up data.
2023-10-13 11:51:37,238:INFO:Set up index.
2023-10-13 11:51:37,290:INFO:Initializing predict_model()
2023-10-13 11:51:37,291:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5222f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 11:51:37,291:INFO:Checking exceptions
2023-10-13 11:51:37,291:INFO:Preloading libraries
2023-10-13 11:51:37,291:INFO:Set up data.
2023-10-13 11:51:37,297:INFO:Set up index.
2023-10-13 11:51:37,350:INFO:Initializing predict_model()
2023-10-13 11:51:37,350:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5222f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 11:51:37,350:INFO:Checking exceptions
2023-10-13 11:51:37,350:INFO:Preloading libraries
2023-10-13 11:51:37,350:INFO:Set up data.
2023-10-13 11:51:37,356:INFO:Set up index.
2023-10-13 11:51:37,409:INFO:Initializing predict_model()
2023-10-13 11:51:37,409:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5222f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 11:51:37,409:INFO:Checking exceptions
2023-10-13 11:51:37,409:INFO:Preloading libraries
2023-10-13 11:51:37,409:INFO:Set up data.
2023-10-13 11:51:37,415:INFO:Set up index.
2023-10-13 11:51:45,929:INFO:Initializing predict_model()
2023-10-13 11:51:45,930:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:45,930:INFO:Checking exceptions
2023-10-13 11:51:45,930:INFO:Preloading libraries
2023-10-13 11:51:45,930:INFO:Set up data.
2023-10-13 11:51:45,940:INFO:Set up index.
2023-10-13 11:51:46,003:INFO:Initializing predict_model()
2023-10-13 11:51:46,003:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:46,003:INFO:Checking exceptions
2023-10-13 11:51:46,004:INFO:Preloading libraries
2023-10-13 11:51:46,004:INFO:Set up data.
2023-10-13 11:51:46,009:INFO:Set up index.
2023-10-13 11:51:46,063:INFO:Initializing predict_model()
2023-10-13 11:51:46,063:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:46,063:INFO:Checking exceptions
2023-10-13 11:51:46,063:INFO:Preloading libraries
2023-10-13 11:51:46,063:INFO:Set up data.
2023-10-13 11:51:46,069:INFO:Set up index.
2023-10-13 11:51:46,122:INFO:Initializing predict_model()
2023-10-13 11:51:46,122:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:46,122:INFO:Checking exceptions
2023-10-13 11:51:46,122:INFO:Preloading libraries
2023-10-13 11:51:46,122:INFO:Set up data.
2023-10-13 11:51:46,128:INFO:Set up index.
2023-10-13 11:51:46,181:INFO:Initializing predict_model()
2023-10-13 11:51:46,181:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:46,181:INFO:Checking exceptions
2023-10-13 11:51:46,181:INFO:Preloading libraries
2023-10-13 11:51:46,181:INFO:Set up data.
2023-10-13 11:51:46,187:INFO:Set up index.
2023-10-13 11:51:54,719:INFO:Initializing predict_model()
2023-10-13 11:51:54,720:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5053c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:54,720:INFO:Checking exceptions
2023-10-13 11:51:54,720:INFO:Preloading libraries
2023-10-13 11:51:54,720:INFO:Set up data.
2023-10-13 11:51:54,730:INFO:Set up index.
2023-10-13 11:51:54,792:INFO:Initializing predict_model()
2023-10-13 11:51:54,792:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:54,792:INFO:Checking exceptions
2023-10-13 11:51:54,792:INFO:Preloading libraries
2023-10-13 11:51:54,792:INFO:Set up data.
2023-10-13 11:51:54,798:INFO:Set up index.
2023-10-13 11:51:54,851:INFO:Initializing predict_model()
2023-10-13 11:51:54,851:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:54,851:INFO:Checking exceptions
2023-10-13 11:51:54,851:INFO:Preloading libraries
2023-10-13 11:51:54,851:INFO:Set up data.
2023-10-13 11:51:54,857:INFO:Set up index.
2023-10-13 11:51:54,910:INFO:Initializing predict_model()
2023-10-13 11:51:54,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:54,910:INFO:Checking exceptions
2023-10-13 11:51:54,910:INFO:Preloading libraries
2023-10-13 11:51:54,910:INFO:Set up data.
2023-10-13 11:51:54,916:INFO:Set up index.
2023-10-13 11:51:54,969:INFO:Initializing predict_model()
2023-10-13 11:51:54,969:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284c7dc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 11:51:54,969:INFO:Checking exceptions
2023-10-13 11:51:54,969:INFO:Preloading libraries
2023-10-13 11:51:54,969:INFO:Set up data.
2023-10-13 11:51:54,975:INFO:Set up index.
2023-10-13 11:52:03,540:INFO:Initializing predict_model()
2023-10-13 11:52:03,540:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47e5c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:52:03,540:INFO:Checking exceptions
2023-10-13 11:52:03,540:INFO:Preloading libraries
2023-10-13 11:52:03,541:INFO:Set up data.
2023-10-13 11:52:03,550:INFO:Set up index.
2023-10-13 11:52:03,655:INFO:Initializing predict_model()
2023-10-13 11:52:03,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b1078b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:52:03,655:INFO:Checking exceptions
2023-10-13 11:52:03,655:INFO:Preloading libraries
2023-10-13 11:52:03,655:INFO:Set up data.
2023-10-13 11:52:03,661:INFO:Set up index.
2023-10-13 11:52:03,714:INFO:Initializing predict_model()
2023-10-13 11:52:03,714:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b106050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:52:03,715:INFO:Checking exceptions
2023-10-13 11:52:03,715:INFO:Preloading libraries
2023-10-13 11:52:03,715:INFO:Set up data.
2023-10-13 11:52:03,721:INFO:Set up index.
2023-10-13 11:52:03,774:INFO:Initializing predict_model()
2023-10-13 11:52:03,774:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b106050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:52:03,774:INFO:Checking exceptions
2023-10-13 11:52:03,774:INFO:Preloading libraries
2023-10-13 11:52:03,774:INFO:Set up data.
2023-10-13 11:52:03,780:INFO:Set up index.
2023-10-13 11:52:03,833:INFO:Initializing predict_model()
2023-10-13 11:52:03,833:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b106050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 11:52:03,833:INFO:Checking exceptions
2023-10-13 11:52:03,833:INFO:Preloading libraries
2023-10-13 11:52:03,833:INFO:Set up data.
2023-10-13 11:52:03,839:INFO:Set up index.
2023-10-13 11:52:12,369:INFO:Initializing predict_model()
2023-10-13 11:52:12,370:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b596b30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:12,370:INFO:Checking exceptions
2023-10-13 11:52:12,370:INFO:Preloading libraries
2023-10-13 11:52:12,371:INFO:Set up data.
2023-10-13 11:52:12,381:INFO:Set up index.
2023-10-13 11:52:12,499:INFO:Initializing predict_model()
2023-10-13 11:52:12,499:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b355bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:12,499:INFO:Checking exceptions
2023-10-13 11:52:12,499:INFO:Preloading libraries
2023-10-13 11:52:12,499:INFO:Set up data.
2023-10-13 11:52:12,505:INFO:Set up index.
2023-10-13 11:52:12,558:INFO:Initializing predict_model()
2023-10-13 11:52:12,558:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b09a0e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:12,558:INFO:Checking exceptions
2023-10-13 11:52:12,558:INFO:Preloading libraries
2023-10-13 11:52:12,558:INFO:Set up data.
2023-10-13 11:52:12,564:INFO:Set up index.
2023-10-13 11:52:12,619:INFO:Initializing predict_model()
2023-10-13 11:52:12,619:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5974c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:12,619:INFO:Checking exceptions
2023-10-13 11:52:12,619:INFO:Preloading libraries
2023-10-13 11:52:12,619:INFO:Set up data.
2023-10-13 11:52:12,625:INFO:Set up index.
2023-10-13 11:52:12,678:INFO:Initializing predict_model()
2023-10-13 11:52:12,678:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b125240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:12,678:INFO:Checking exceptions
2023-10-13 11:52:12,678:INFO:Preloading libraries
2023-10-13 11:52:12,678:INFO:Set up data.
2023-10-13 11:52:12,684:INFO:Set up index.
2023-10-13 11:52:21,235:INFO:Initializing predict_model()
2023-10-13 11:52:21,236:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b62d9f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:21,236:INFO:Checking exceptions
2023-10-13 11:52:21,236:INFO:Preloading libraries
2023-10-13 11:52:21,236:INFO:Set up data.
2023-10-13 11:52:21,246:INFO:Set up index.
2023-10-13 11:52:21,305:INFO:Initializing predict_model()
2023-10-13 11:52:21,305:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47fb20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:21,305:INFO:Checking exceptions
2023-10-13 11:52:21,305:INFO:Preloading libraries
2023-10-13 11:52:21,305:INFO:Set up data.
2023-10-13 11:52:21,311:INFO:Set up index.
2023-10-13 11:52:21,365:INFO:Initializing predict_model()
2023-10-13 11:52:21,365:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b62f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:21,365:INFO:Checking exceptions
2023-10-13 11:52:21,365:INFO:Preloading libraries
2023-10-13 11:52:21,365:INFO:Set up data.
2023-10-13 11:52:21,371:INFO:Set up index.
2023-10-13 11:52:21,424:INFO:Initializing predict_model()
2023-10-13 11:52:21,424:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b202260>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:21,424:INFO:Checking exceptions
2023-10-13 11:52:21,424:INFO:Preloading libraries
2023-10-13 11:52:21,424:INFO:Set up data.
2023-10-13 11:52:21,430:INFO:Set up index.
2023-10-13 11:52:21,483:INFO:Initializing predict_model()
2023-10-13 11:52:21,483:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b104970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 11:52:21,483:INFO:Checking exceptions
2023-10-13 11:52:21,483:INFO:Preloading libraries
2023-10-13 11:52:21,483:INFO:Set up data.
2023-10-13 11:52:21,489:INFO:Set up index.
2023-10-13 11:52:30,021:INFO:Initializing predict_model()
2023-10-13 11:52:30,022:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47e8f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5229e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:52:30,022:INFO:Checking exceptions
2023-10-13 11:52:30,022:INFO:Preloading libraries
2023-10-13 11:52:30,022:INFO:Set up data.
2023-10-13 11:52:30,032:INFO:Set up index.
2023-10-13 11:52:30,094:INFO:Initializing predict_model()
2023-10-13 11:52:30,094:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5050c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:52:30,094:INFO:Checking exceptions
2023-10-13 11:52:30,094:INFO:Preloading libraries
2023-10-13 11:52:30,094:INFO:Set up data.
2023-10-13 11:52:30,100:INFO:Set up index.
2023-10-13 11:52:30,154:INFO:Initializing predict_model()
2023-10-13 11:52:30,154:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5050c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:52:30,154:INFO:Checking exceptions
2023-10-13 11:52:30,154:INFO:Preloading libraries
2023-10-13 11:52:30,154:INFO:Set up data.
2023-10-13 11:52:30,160:INFO:Set up index.
2023-10-13 11:52:30,215:INFO:Initializing predict_model()
2023-10-13 11:52:30,215:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5050c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:52:30,215:INFO:Checking exceptions
2023-10-13 11:52:30,216:INFO:Preloading libraries
2023-10-13 11:52:30,216:INFO:Set up data.
2023-10-13 11:52:30,222:INFO:Set up index.
2023-10-13 11:52:30,274:INFO:Initializing predict_model()
2023-10-13 11:52:30,275:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5053f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b506b60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 11:52:30,275:INFO:Checking exceptions
2023-10-13 11:52:30,275:INFO:Preloading libraries
2023-10-13 11:52:30,275:INFO:Set up data.
2023-10-13 11:52:30,280:INFO:Set up index.
2023-10-13 12:29:21,786:INFO:Initializing load_model()
2023-10-13 12:29:21,787:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:29:21,802:INFO:Initializing load_model()
2023-10-13 12:29:21,802:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:29:21,810:INFO:Initializing load_model()
2023-10-13 12:29:21,810:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:29:21,812:INFO:Initializing load_model()
2023-10-13 12:29:21,812:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:29:21,814:INFO:Initializing load_model()
2023-10-13 12:29:21,814:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:29:21,877:INFO:Initializing predict_model()
2023-10-13 12:29:21,877:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1df60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256967a0>)
2023-10-13 12:29:21,877:INFO:Checking exceptions
2023-10-13 12:29:21,877:INFO:Preloading libraries
2023-10-13 12:29:21,877:INFO:Set up data.
2023-10-13 12:29:21,886:INFO:Set up index.
2023-10-13 12:29:22,165:INFO:Initializing predict_model()
2023-10-13 12:29:22,165:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1df60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256967a0>)
2023-10-13 12:29:22,165:INFO:Checking exceptions
2023-10-13 12:29:22,165:INFO:Preloading libraries
2023-10-13 12:29:22,165:INFO:Set up data.
2023-10-13 12:29:22,171:INFO:Set up index.
2023-10-13 12:29:22,227:INFO:Initializing predict_model()
2023-10-13 12:29:22,227:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1df60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256967a0>)
2023-10-13 12:29:22,227:INFO:Checking exceptions
2023-10-13 12:29:22,227:INFO:Preloading libraries
2023-10-13 12:29:22,227:INFO:Set up data.
2023-10-13 12:29:22,233:INFO:Set up index.
2023-10-13 12:29:22,288:INFO:Initializing predict_model()
2023-10-13 12:29:22,288:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1df60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256967a0>)
2023-10-13 12:29:22,288:INFO:Checking exceptions
2023-10-13 12:29:22,288:INFO:Preloading libraries
2023-10-13 12:29:22,288:INFO:Set up data.
2023-10-13 12:29:22,294:INFO:Set up index.
2023-10-13 12:29:22,349:INFO:Initializing predict_model()
2023-10-13 12:29:22,349:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292a1df60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256967a0>)
2023-10-13 12:29:22,349:INFO:Checking exceptions
2023-10-13 12:29:22,349:INFO:Preloading libraries
2023-10-13 12:29:22,349:INFO:Set up data.
2023-10-13 12:29:22,355:INFO:Set up index.
2023-10-13 12:29:30,921:INFO:Initializing predict_model()
2023-10-13 12:29:30,921:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b125390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b5b0>)
2023-10-13 12:29:30,921:INFO:Checking exceptions
2023-10-13 12:29:30,921:INFO:Preloading libraries
2023-10-13 12:29:30,922:INFO:Set up data.
2023-10-13 12:29:30,933:INFO:Set up index.
2023-10-13 12:29:31,024:INFO:Initializing predict_model()
2023-10-13 12:29:31,024:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2b250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b5b0>)
2023-10-13 12:29:31,024:INFO:Checking exceptions
2023-10-13 12:29:31,024:INFO:Preloading libraries
2023-10-13 12:29:31,025:INFO:Set up data.
2023-10-13 12:29:31,031:INFO:Set up index.
2023-10-13 12:29:31,085:INFO:Initializing predict_model()
2023-10-13 12:29:31,085:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2b250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b5b0>)
2023-10-13 12:29:31,085:INFO:Checking exceptions
2023-10-13 12:29:31,085:INFO:Preloading libraries
2023-10-13 12:29:31,085:INFO:Set up data.
2023-10-13 12:29:31,091:INFO:Set up index.
2023-10-13 12:29:31,147:INFO:Initializing predict_model()
2023-10-13 12:29:31,147:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2b250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b5b0>)
2023-10-13 12:29:31,147:INFO:Checking exceptions
2023-10-13 12:29:31,147:INFO:Preloading libraries
2023-10-13 12:29:31,147:INFO:Set up data.
2023-10-13 12:29:31,153:INFO:Set up index.
2023-10-13 12:29:31,207:INFO:Initializing predict_model()
2023-10-13 12:29:31,207:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e2b250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b5b0>)
2023-10-13 12:29:31,207:INFO:Checking exceptions
2023-10-13 12:29:31,207:INFO:Preloading libraries
2023-10-13 12:29:31,207:INFO:Set up data.
2023-10-13 12:29:31,213:INFO:Set up index.
2023-10-13 12:29:39,747:INFO:Initializing predict_model()
2023-10-13 12:29:39,747:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5977f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:29:39,747:INFO:Checking exceptions
2023-10-13 12:29:39,747:INFO:Preloading libraries
2023-10-13 12:29:39,748:INFO:Set up data.
2023-10-13 12:29:39,761:INFO:Set up index.
2023-10-13 12:29:39,852:INFO:Initializing predict_model()
2023-10-13 12:29:39,852:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:29:39,852:INFO:Checking exceptions
2023-10-13 12:29:39,852:INFO:Preloading libraries
2023-10-13 12:29:39,852:INFO:Set up data.
2023-10-13 12:29:39,859:INFO:Set up index.
2023-10-13 12:29:39,916:INFO:Initializing predict_model()
2023-10-13 12:29:39,916:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:29:39,916:INFO:Checking exceptions
2023-10-13 12:29:39,916:INFO:Preloading libraries
2023-10-13 12:29:39,916:INFO:Set up data.
2023-10-13 12:29:39,922:INFO:Set up index.
2023-10-13 12:29:39,978:INFO:Initializing predict_model()
2023-10-13 12:29:39,978:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:29:39,978:INFO:Checking exceptions
2023-10-13 12:29:39,978:INFO:Preloading libraries
2023-10-13 12:29:39,978:INFO:Set up data.
2023-10-13 12:29:39,984:INFO:Set up index.
2023-10-13 12:29:40,038:INFO:Initializing predict_model()
2023-10-13 12:29:40,038:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284dbf4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:29:40,038:INFO:Checking exceptions
2023-10-13 12:29:40,038:INFO:Preloading libraries
2023-10-13 12:29:40,038:INFO:Set up data.
2023-10-13 12:29:40,044:INFO:Set up index.
2023-10-13 12:29:48,615:INFO:Initializing predict_model()
2023-10-13 12:29:48,616:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5945e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:29:48,616:INFO:Checking exceptions
2023-10-13 12:29:48,616:INFO:Preloading libraries
2023-10-13 12:29:48,616:INFO:Set up data.
2023-10-13 12:29:48,626:INFO:Set up index.
2023-10-13 12:29:48,743:INFO:Initializing predict_model()
2023-10-13 12:29:48,743:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5965c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:29:48,743:INFO:Checking exceptions
2023-10-13 12:29:48,743:INFO:Preloading libraries
2023-10-13 12:29:48,743:INFO:Set up data.
2023-10-13 12:29:48,749:INFO:Set up index.
2023-10-13 12:29:48,803:INFO:Initializing predict_model()
2023-10-13 12:29:48,803:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b09a110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:29:48,803:INFO:Checking exceptions
2023-10-13 12:29:48,803:INFO:Preloading libraries
2023-10-13 12:29:48,803:INFO:Set up data.
2023-10-13 12:29:48,809:INFO:Set up index.
2023-10-13 12:29:48,862:INFO:Initializing predict_model()
2023-10-13 12:29:48,862:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b09a110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:29:48,862:INFO:Checking exceptions
2023-10-13 12:29:48,862:INFO:Preloading libraries
2023-10-13 12:29:48,862:INFO:Set up data.
2023-10-13 12:29:48,868:INFO:Set up index.
2023-10-13 12:29:48,921:INFO:Initializing predict_model()
2023-10-13 12:29:48,921:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b09a110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:29:48,921:INFO:Checking exceptions
2023-10-13 12:29:48,921:INFO:Preloading libraries
2023-10-13 12:29:48,921:INFO:Set up data.
2023-10-13 12:29:48,927:INFO:Set up index.
2023-10-13 12:29:57,518:INFO:Initializing predict_model()
2023-10-13 12:29:57,518:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b5b0>)
2023-10-13 12:29:57,518:INFO:Checking exceptions
2023-10-13 12:29:57,518:INFO:Preloading libraries
2023-10-13 12:29:57,519:INFO:Set up data.
2023-10-13 12:29:57,531:INFO:Set up index.
2023-10-13 12:29:57,689:INFO:Initializing predict_model()
2023-10-13 12:29:57,689:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b62ceb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b5b0>)
2023-10-13 12:29:57,689:INFO:Checking exceptions
2023-10-13 12:29:57,689:INFO:Preloading libraries
2023-10-13 12:29:57,689:INFO:Set up data.
2023-10-13 12:29:57,700:INFO:Set up index.
2023-10-13 12:29:57,758:INFO:Initializing predict_model()
2023-10-13 12:29:57,758:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b596fb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b5b0>)
2023-10-13 12:29:57,758:INFO:Checking exceptions
2023-10-13 12:29:57,758:INFO:Preloading libraries
2023-10-13 12:29:57,758:INFO:Set up data.
2023-10-13 12:29:57,764:INFO:Set up index.
2023-10-13 12:29:57,910:INFO:Initializing predict_model()
2023-10-13 12:29:57,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b596fb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:29:57,910:INFO:Checking exceptions
2023-10-13 12:29:57,910:INFO:Preloading libraries
2023-10-13 12:29:57,910:INFO:Set up data.
2023-10-13 12:29:57,920:INFO:Set up index.
2023-10-13 12:29:57,976:INFO:Initializing predict_model()
2023-10-13 12:29:57,976:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b596fb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:29:57,976:INFO:Checking exceptions
2023-10-13 12:29:57,976:INFO:Preloading libraries
2023-10-13 12:29:57,976:INFO:Set up data.
2023-10-13 12:29:57,982:INFO:Set up index.
2023-10-13 12:30:06,531:INFO:Initializing predict_model()
2023-10-13 12:30:06,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71d210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 12:30:06,532:INFO:Checking exceptions
2023-10-13 12:30:06,532:INFO:Preloading libraries
2023-10-13 12:30:06,533:INFO:Set up data.
2023-10-13 12:30:06,544:INFO:Set up index.
2023-10-13 12:30:06,672:INFO:Initializing predict_model()
2023-10-13 12:30:06,672:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b126080>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 12:30:06,672:INFO:Checking exceptions
2023-10-13 12:30:06,672:INFO:Preloading libraries
2023-10-13 12:30:06,672:INFO:Set up data.
2023-10-13 12:30:06,678:INFO:Set up index.
2023-10-13 12:30:06,759:INFO:Initializing predict_model()
2023-10-13 12:30:06,760:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71edd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 12:30:06,760:INFO:Checking exceptions
2023-10-13 12:30:06,760:INFO:Preloading libraries
2023-10-13 12:30:06,760:INFO:Set up data.
2023-10-13 12:30:06,768:INFO:Set up index.
2023-10-13 12:30:06,849:INFO:Initializing predict_model()
2023-10-13 12:30:06,849:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5969b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 12:30:06,849:INFO:Checking exceptions
2023-10-13 12:30:06,849:INFO:Preloading libraries
2023-10-13 12:30:06,849:INFO:Set up data.
2023-10-13 12:30:06,858:INFO:Set up index.
2023-10-13 12:30:06,926:INFO:Initializing predict_model()
2023-10-13 12:30:06,926:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5969b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 12:30:06,926:INFO:Checking exceptions
2023-10-13 12:30:06,926:INFO:Preloading libraries
2023-10-13 12:30:06,926:INFO:Set up data.
2023-10-13 12:30:06,933:INFO:Set up index.
2023-10-13 12:30:15,497:INFO:Initializing predict_model()
2023-10-13 12:30:15,498:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b685690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149bd0>)
2023-10-13 12:30:15,498:INFO:Checking exceptions
2023-10-13 12:30:15,498:INFO:Preloading libraries
2023-10-13 12:30:15,499:INFO:Set up data.
2023-10-13 12:30:15,509:INFO:Set up index.
2023-10-13 12:30:15,617:INFO:Initializing predict_model()
2023-10-13 12:30:15,617:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5969b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149bd0>)
2023-10-13 12:30:15,617:INFO:Checking exceptions
2023-10-13 12:30:15,617:INFO:Preloading libraries
2023-10-13 12:30:15,617:INFO:Set up data.
2023-10-13 12:30:15,623:INFO:Set up index.
2023-10-13 12:30:15,678:INFO:Initializing predict_model()
2023-10-13 12:30:15,678:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5969b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:30:15,678:INFO:Checking exceptions
2023-10-13 12:30:15,678:INFO:Preloading libraries
2023-10-13 12:30:15,678:INFO:Set up data.
2023-10-13 12:30:15,684:INFO:Set up index.
2023-10-13 12:30:15,738:INFO:Initializing predict_model()
2023-10-13 12:30:15,738:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5969b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:30:15,738:INFO:Checking exceptions
2023-10-13 12:30:15,738:INFO:Preloading libraries
2023-10-13 12:30:15,738:INFO:Set up data.
2023-10-13 12:30:15,744:INFO:Set up index.
2023-10-13 12:30:15,798:INFO:Initializing predict_model()
2023-10-13 12:30:15,798:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5969b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:30:15,798:INFO:Checking exceptions
2023-10-13 12:30:15,798:INFO:Preloading libraries
2023-10-13 12:30:15,798:INFO:Set up data.
2023-10-13 12:30:15,804:INFO:Set up index.
2023-10-13 12:30:24,349:INFO:Initializing predict_model()
2023-10-13 12:30:24,350:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b106500>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:30:24,350:INFO:Checking exceptions
2023-10-13 12:30:24,350:INFO:Preloading libraries
2023-10-13 12:30:24,350:INFO:Set up data.
2023-10-13 12:30:24,360:INFO:Set up index.
2023-10-13 12:30:24,425:INFO:Initializing predict_model()
2023-10-13 12:30:24,425:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47fa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:30:24,425:INFO:Checking exceptions
2023-10-13 12:30:24,425:INFO:Preloading libraries
2023-10-13 12:30:24,425:INFO:Set up data.
2023-10-13 12:30:24,431:INFO:Set up index.
2023-10-13 12:30:24,486:INFO:Initializing predict_model()
2023-10-13 12:30:24,486:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:30:24,486:INFO:Checking exceptions
2023-10-13 12:30:24,486:INFO:Preloading libraries
2023-10-13 12:30:24,486:INFO:Set up data.
2023-10-13 12:30:24,492:INFO:Set up index.
2023-10-13 12:30:24,547:INFO:Initializing predict_model()
2023-10-13 12:30:24,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:30:24,547:INFO:Checking exceptions
2023-10-13 12:30:24,547:INFO:Preloading libraries
2023-10-13 12:30:24,547:INFO:Set up data.
2023-10-13 12:30:24,553:INFO:Set up index.
2023-10-13 12:30:24,607:INFO:Initializing predict_model()
2023-10-13 12:30:24,607:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:30:24,607:INFO:Checking exceptions
2023-10-13 12:30:24,607:INFO:Preloading libraries
2023-10-13 12:30:24,607:INFO:Set up data.
2023-10-13 12:30:24,613:INFO:Set up index.
2023-10-13 12:30:33,180:INFO:Initializing predict_model()
2023-10-13 12:30:33,180:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b739210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:30:33,180:INFO:Checking exceptions
2023-10-13 12:30:33,180:INFO:Preloading libraries
2023-10-13 12:30:33,180:INFO:Set up data.
2023-10-13 12:30:33,191:INFO:Set up index.
2023-10-13 12:30:33,250:INFO:Initializing predict_model()
2023-10-13 12:30:33,250:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:30:33,250:INFO:Checking exceptions
2023-10-13 12:30:33,250:INFO:Preloading libraries
2023-10-13 12:30:33,250:INFO:Set up data.
2023-10-13 12:30:33,256:INFO:Set up index.
2023-10-13 12:30:33,310:INFO:Initializing predict_model()
2023-10-13 12:30:33,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:30:33,310:INFO:Checking exceptions
2023-10-13 12:30:33,310:INFO:Preloading libraries
2023-10-13 12:30:33,310:INFO:Set up data.
2023-10-13 12:30:33,316:INFO:Set up index.
2023-10-13 12:30:33,371:INFO:Initializing predict_model()
2023-10-13 12:30:33,371:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:30:33,371:INFO:Checking exceptions
2023-10-13 12:30:33,371:INFO:Preloading libraries
2023-10-13 12:30:33,371:INFO:Set up data.
2023-10-13 12:30:33,377:INFO:Set up index.
2023-10-13 12:30:33,431:INFO:Initializing predict_model()
2023-10-13 12:30:33,431:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b100640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:30:33,431:INFO:Checking exceptions
2023-10-13 12:30:33,431:INFO:Preloading libraries
2023-10-13 12:30:33,431:INFO:Set up data.
2023-10-13 12:30:33,437:INFO:Set up index.
2023-10-13 12:30:42,007:INFO:Initializing predict_model()
2023-10-13 12:30:42,008:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71da20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5944c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148dc0>)
2023-10-13 12:30:42,008:INFO:Checking exceptions
2023-10-13 12:30:42,008:INFO:Preloading libraries
2023-10-13 12:30:42,009:INFO:Set up data.
2023-10-13 12:30:42,018:INFO:Set up index.
2023-10-13 12:30:42,121:INFO:Initializing predict_model()
2023-10-13 12:30:42,121:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b47c9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148dc0>)
2023-10-13 12:30:42,121:INFO:Checking exceptions
2023-10-13 12:30:42,121:INFO:Preloading libraries
2023-10-13 12:30:42,121:INFO:Set up data.
2023-10-13 12:30:42,127:INFO:Set up index.
2023-10-13 12:30:42,182:INFO:Initializing predict_model()
2023-10-13 12:30:42,182:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5965f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148dc0>)
2023-10-13 12:30:42,182:INFO:Checking exceptions
2023-10-13 12:30:42,182:INFO:Preloading libraries
2023-10-13 12:30:42,182:INFO:Set up data.
2023-10-13 12:30:42,188:INFO:Set up index.
2023-10-13 12:30:42,242:INFO:Initializing predict_model()
2023-10-13 12:30:42,242:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5965f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148dc0>)
2023-10-13 12:30:42,242:INFO:Checking exceptions
2023-10-13 12:30:42,242:INFO:Preloading libraries
2023-10-13 12:30:42,242:INFO:Set up data.
2023-10-13 12:30:42,248:INFO:Set up index.
2023-10-13 12:30:42,302:INFO:Initializing predict_model()
2023-10-13 12:30:42,302:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5965f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b5961a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148dc0>)
2023-10-13 12:30:42,302:INFO:Checking exceptions
2023-10-13 12:30:42,302:INFO:Preloading libraries
2023-10-13 12:30:42,302:INFO:Set up data.
2023-10-13 12:30:42,308:INFO:Set up index.
2023-10-13 12:32:15,234:INFO:Initializing load_model()
2023-10-13 12:32:15,234:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:32:15,244:INFO:Initializing load_model()
2023-10-13 12:32:15,244:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:32:15,251:INFO:Initializing load_model()
2023-10-13 12:32:15,251:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:32:15,254:INFO:Initializing load_model()
2023-10-13 12:32:15,254:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:32:15,256:INFO:Initializing load_model()
2023-10-13 12:32:15,256:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:32:15,288:INFO:Initializing predict_model()
2023-10-13 12:32:15,288:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bf2b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b2024a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:32:15,288:INFO:Checking exceptions
2023-10-13 12:32:15,288:INFO:Preloading libraries
2023-10-13 12:32:15,289:INFO:Set up data.
2023-10-13 12:32:15,299:INFO:Set up index.
2023-10-13 12:32:15,444:INFO:Initializing predict_model()
2023-10-13 12:32:15,445:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bf2b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:32:15,445:INFO:Checking exceptions
2023-10-13 12:32:15,445:INFO:Preloading libraries
2023-10-13 12:32:15,445:INFO:Set up data.
2023-10-13 12:32:15,454:INFO:Set up index.
2023-10-13 12:32:15,521:INFO:Initializing predict_model()
2023-10-13 12:32:15,522:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bf2b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:32:15,522:INFO:Checking exceptions
2023-10-13 12:32:15,522:INFO:Preloading libraries
2023-10-13 12:32:15,522:INFO:Set up data.
2023-10-13 12:32:15,528:INFO:Set up index.
2023-10-13 12:32:15,587:INFO:Initializing predict_model()
2023-10-13 12:32:15,587:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bf2b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:32:15,588:INFO:Checking exceptions
2023-10-13 12:32:15,588:INFO:Preloading libraries
2023-10-13 12:32:15,588:INFO:Set up data.
2023-10-13 12:32:15,595:INFO:Set up index.
2023-10-13 12:32:15,651:INFO:Initializing predict_model()
2023-10-13 12:32:15,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3bf2b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b71c8e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:32:15,652:INFO:Checking exceptions
2023-10-13 12:32:15,652:INFO:Preloading libraries
2023-10-13 12:32:15,652:INFO:Set up data.
2023-10-13 12:32:15,658:INFO:Set up index.
2023-10-13 12:32:24,218:INFO:Initializing predict_model()
2023-10-13 12:32:24,219:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b687400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b2024a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:32:24,219:INFO:Checking exceptions
2023-10-13 12:32:24,220:INFO:Preloading libraries
2023-10-13 12:32:24,221:INFO:Set up data.
2023-10-13 12:32:24,236:INFO:Set up index.
2023-10-13 12:32:24,355:INFO:Initializing predict_model()
2023-10-13 12:32:24,355:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b2036d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:32:24,355:INFO:Checking exceptions
2023-10-13 12:32:24,355:INFO:Preloading libraries
2023-10-13 12:32:24,355:INFO:Set up data.
2023-10-13 12:32:24,361:INFO:Set up index.
2023-10-13 12:32:24,416:INFO:Initializing predict_model()
2023-10-13 12:32:24,417:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b202260>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:32:24,417:INFO:Checking exceptions
2023-10-13 12:32:24,417:INFO:Preloading libraries
2023-10-13 12:32:24,417:INFO:Set up data.
2023-10-13 12:32:24,423:INFO:Set up index.
2023-10-13 12:32:24,478:INFO:Initializing predict_model()
2023-10-13 12:32:24,478:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e28ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:32:24,478:INFO:Checking exceptions
2023-10-13 12:32:24,478:INFO:Preloading libraries
2023-10-13 12:32:24,478:INFO:Set up data.
2023-10-13 12:32:24,484:INFO:Set up index.
2023-10-13 12:32:24,539:INFO:Initializing predict_model()
2023-10-13 12:32:24,540:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e28ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b71c8e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:32:24,540:INFO:Checking exceptions
2023-10-13 12:32:24,540:INFO:Preloading libraries
2023-10-13 12:32:24,540:INFO:Set up data.
2023-10-13 12:32:24,545:INFO:Set up index.
2023-10-13 12:32:33,082:INFO:Initializing predict_model()
2023-10-13 12:32:33,083:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71d3f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b2024a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 12:32:33,083:INFO:Checking exceptions
2023-10-13 12:32:33,083:INFO:Preloading libraries
2023-10-13 12:32:33,084:INFO:Set up data.
2023-10-13 12:32:33,097:INFO:Set up index.
2023-10-13 12:32:33,209:INFO:Initializing predict_model()
2023-10-13 12:32:33,209:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e28ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 12:32:33,209:INFO:Checking exceptions
2023-10-13 12:32:33,209:INFO:Preloading libraries
2023-10-13 12:32:33,209:INFO:Set up data.
2023-10-13 12:32:33,215:INFO:Set up index.
2023-10-13 12:32:33,271:INFO:Initializing predict_model()
2023-10-13 12:32:33,271:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e28ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 12:32:33,271:INFO:Checking exceptions
2023-10-13 12:32:33,271:INFO:Preloading libraries
2023-10-13 12:32:33,271:INFO:Set up data.
2023-10-13 12:32:33,277:INFO:Set up index.
2023-10-13 12:32:33,332:INFO:Initializing predict_model()
2023-10-13 12:32:33,332:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e28ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 12:32:33,332:INFO:Checking exceptions
2023-10-13 12:32:33,332:INFO:Preloading libraries
2023-10-13 12:32:33,332:INFO:Set up data.
2023-10-13 12:32:33,338:INFO:Set up index.
2023-10-13 12:32:33,393:INFO:Initializing predict_model()
2023-10-13 12:32:33,394:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284e28ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b71c8e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 12:32:33,394:INFO:Checking exceptions
2023-10-13 12:32:33,394:INFO:Preloading libraries
2023-10-13 12:32:33,394:INFO:Set up data.
2023-10-13 12:32:33,400:INFO:Set up index.
2023-10-13 12:32:41,976:INFO:Initializing predict_model()
2023-10-13 12:32:41,977:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b356380>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b2024a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b640>)
2023-10-13 12:32:41,977:INFO:Checking exceptions
2023-10-13 12:32:41,977:INFO:Preloading libraries
2023-10-13 12:32:41,978:INFO:Set up data.
2023-10-13 12:32:41,987:INFO:Set up index.
2023-10-13 12:32:42,118:INFO:Initializing predict_model()
2023-10-13 12:32:42,118:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5045b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b640>)
2023-10-13 12:32:42,118:INFO:Checking exceptions
2023-10-13 12:32:42,118:INFO:Preloading libraries
2023-10-13 12:32:42,118:INFO:Set up data.
2023-10-13 12:32:42,125:INFO:Set up index.
2023-10-13 12:32:42,184:INFO:Initializing predict_model()
2023-10-13 12:32:42,184:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5045b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b640>)
2023-10-13 12:32:42,184:INFO:Checking exceptions
2023-10-13 12:32:42,184:INFO:Preloading libraries
2023-10-13 12:32:42,184:INFO:Set up data.
2023-10-13 12:32:42,190:INFO:Set up index.
2023-10-13 12:32:42,247:INFO:Initializing predict_model()
2023-10-13 12:32:42,247:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5045b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:32:42,247:INFO:Checking exceptions
2023-10-13 12:32:42,247:INFO:Preloading libraries
2023-10-13 12:32:42,248:INFO:Set up data.
2023-10-13 12:32:42,254:INFO:Set up index.
2023-10-13 12:32:42,311:INFO:Initializing predict_model()
2023-10-13 12:32:42,312:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5045b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b71c8e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:32:42,312:INFO:Checking exceptions
2023-10-13 12:32:42,312:INFO:Preloading libraries
2023-10-13 12:32:42,312:INFO:Set up data.
2023-10-13 12:32:42,319:INFO:Set up index.
2023-10-13 12:32:50,880:INFO:Initializing predict_model()
2023-10-13 12:32:50,881:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3befb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b2024a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:32:50,881:INFO:Checking exceptions
2023-10-13 12:32:50,881:INFO:Preloading libraries
2023-10-13 12:32:50,885:INFO:Set up data.
2023-10-13 12:32:50,898:INFO:Set up index.
2023-10-13 12:32:51,017:INFO:Initializing predict_model()
2023-10-13 12:32:51,018:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3befb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:32:51,018:INFO:Checking exceptions
2023-10-13 12:32:51,018:INFO:Preloading libraries
2023-10-13 12:32:51,018:INFO:Set up data.
2023-10-13 12:32:51,024:INFO:Set up index.
2023-10-13 12:32:51,078:INFO:Initializing predict_model()
2023-10-13 12:32:51,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3befb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:32:51,079:INFO:Checking exceptions
2023-10-13 12:32:51,079:INFO:Preloading libraries
2023-10-13 12:32:51,079:INFO:Set up data.
2023-10-13 12:32:51,085:INFO:Set up index.
2023-10-13 12:32:51,141:INFO:Initializing predict_model()
2023-10-13 12:32:51,142:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b106d40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:32:51,142:INFO:Checking exceptions
2023-10-13 12:32:51,142:INFO:Preloading libraries
2023-10-13 12:32:51,142:INFO:Set up data.
2023-10-13 12:32:51,148:INFO:Set up index.
2023-10-13 12:32:51,202:INFO:Initializing predict_model()
2023-10-13 12:32:51,202:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3545b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b71c8e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:32:51,202:INFO:Checking exceptions
2023-10-13 12:32:51,202:INFO:Preloading libraries
2023-10-13 12:32:51,202:INFO:Set up data.
2023-10-13 12:32:51,208:INFO:Set up index.
2023-10-13 12:32:59,746:INFO:Initializing predict_model()
2023-10-13 12:32:59,747:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b2024a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1488b0>)
2023-10-13 12:32:59,747:INFO:Checking exceptions
2023-10-13 12:32:59,747:INFO:Preloading libraries
2023-10-13 12:32:59,748:INFO:Set up data.
2023-10-13 12:32:59,759:INFO:Set up index.
2023-10-13 12:32:59,865:INFO:Initializing predict_model()
2023-10-13 12:32:59,865:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b62f400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:32:59,865:INFO:Checking exceptions
2023-10-13 12:32:59,865:INFO:Preloading libraries
2023-10-13 12:32:59,865:INFO:Set up data.
2023-10-13 12:32:59,871:INFO:Set up index.
2023-10-13 12:32:59,946:INFO:Initializing predict_model()
2023-10-13 12:32:59,946:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b1073a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:32:59,946:INFO:Checking exceptions
2023-10-13 12:32:59,946:INFO:Preloading libraries
2023-10-13 12:32:59,946:INFO:Set up data.
2023-10-13 12:32:59,955:INFO:Set up index.
2023-10-13 12:33:00,016:INFO:Initializing predict_model()
2023-10-13 12:33:00,016:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b1073a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:00,016:INFO:Checking exceptions
2023-10-13 12:33:00,016:INFO:Preloading libraries
2023-10-13 12:33:00,017:INFO:Set up data.
2023-10-13 12:33:00,023:INFO:Set up index.
2023-10-13 12:33:00,108:INFO:Initializing predict_model()
2023-10-13 12:33:00,108:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b1073a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b71c8e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:00,109:INFO:Checking exceptions
2023-10-13 12:33:00,109:INFO:Preloading libraries
2023-10-13 12:33:00,109:INFO:Set up data.
2023-10-13 12:33:00,118:INFO:Set up index.
2023-10-13 12:33:08,651:INFO:Initializing predict_model()
2023-10-13 12:33:08,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71f4f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b2024a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:08,652:INFO:Checking exceptions
2023-10-13 12:33:08,652:INFO:Preloading libraries
2023-10-13 12:33:08,653:INFO:Set up data.
2023-10-13 12:33:08,665:INFO:Set up index.
2023-10-13 12:33:08,772:INFO:Initializing predict_model()
2023-10-13 12:33:08,772:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b786380>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:08,772:INFO:Checking exceptions
2023-10-13 12:33:08,772:INFO:Preloading libraries
2023-10-13 12:33:08,772:INFO:Set up data.
2023-10-13 12:33:08,779:INFO:Set up index.
2023-10-13 12:33:08,836:INFO:Initializing predict_model()
2023-10-13 12:33:08,836:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b820fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:08,836:INFO:Checking exceptions
2023-10-13 12:33:08,836:INFO:Preloading libraries
2023-10-13 12:33:08,836:INFO:Set up data.
2023-10-13 12:33:08,842:INFO:Set up index.
2023-10-13 12:33:08,899:INFO:Initializing predict_model()
2023-10-13 12:33:08,899:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71d000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:08,899:INFO:Checking exceptions
2023-10-13 12:33:08,899:INFO:Preloading libraries
2023-10-13 12:33:08,899:INFO:Set up data.
2023-10-13 12:33:08,905:INFO:Set up index.
2023-10-13 12:33:08,962:INFO:Initializing predict_model()
2023-10-13 12:33:08,962:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b105de0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b71c8e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:08,962:INFO:Checking exceptions
2023-10-13 12:33:08,962:INFO:Preloading libraries
2023-10-13 12:33:08,962:INFO:Set up data.
2023-10-13 12:33:08,968:INFO:Set up index.
2023-10-13 12:33:17,382:INFO:Initializing load_model()
2023-10-13 12:33:17,383:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:33:17,391:INFO:Initializing load_model()
2023-10-13 12:33:17,391:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:33:17,397:INFO:Initializing load_model()
2023-10-13 12:33:17,397:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:33:17,400:INFO:Initializing load_model()
2023-10-13 12:33:17,400:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:33:17,401:INFO:Initializing load_model()
2023-10-13 12:33:17,401:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:33:17,522:INFO:Initializing predict_model()
2023-10-13 12:33:17,522:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:17,522:INFO:Checking exceptions
2023-10-13 12:33:17,522:INFO:Preloading libraries
2023-10-13 12:33:17,523:INFO:Set up data.
2023-10-13 12:33:17,528:INFO:Set up index.
2023-10-13 12:33:17,610:INFO:Initializing predict_model()
2023-10-13 12:33:17,610:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:17,610:INFO:Checking exceptions
2023-10-13 12:33:17,610:INFO:Preloading libraries
2023-10-13 12:33:17,610:INFO:Set up data.
2023-10-13 12:33:17,617:INFO:Set up index.
2023-10-13 12:33:17,675:INFO:Initializing predict_model()
2023-10-13 12:33:17,675:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:17,675:INFO:Checking exceptions
2023-10-13 12:33:17,675:INFO:Preloading libraries
2023-10-13 12:33:17,675:INFO:Set up data.
2023-10-13 12:33:17,681:INFO:Set up index.
2023-10-13 12:33:17,738:INFO:Initializing predict_model()
2023-10-13 12:33:17,738:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:17,738:INFO:Checking exceptions
2023-10-13 12:33:17,738:INFO:Preloading libraries
2023-10-13 12:33:17,738:INFO:Set up data.
2023-10-13 12:33:17,744:INFO:Set up index.
2023-10-13 12:33:17,801:INFO:Initializing predict_model()
2023-10-13 12:33:17,801:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:17,801:INFO:Checking exceptions
2023-10-13 12:33:17,801:INFO:Preloading libraries
2023-10-13 12:33:17,801:INFO:Set up data.
2023-10-13 12:33:17,807:INFO:Set up index.
2023-10-13 12:33:26,323:INFO:Initializing predict_model()
2023-10-13 12:33:26,324:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71e470>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:26,325:INFO:Checking exceptions
2023-10-13 12:33:26,325:INFO:Preloading libraries
2023-10-13 12:33:26,325:INFO:Set up data.
2023-10-13 12:33:26,336:INFO:Set up index.
2023-10-13 12:33:26,418:INFO:Initializing predict_model()
2023-10-13 12:33:26,418:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71e470>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:26,418:INFO:Checking exceptions
2023-10-13 12:33:26,418:INFO:Preloading libraries
2023-10-13 12:33:26,418:INFO:Set up data.
2023-10-13 12:33:26,425:INFO:Set up index.
2023-10-13 12:33:26,481:INFO:Initializing predict_model()
2023-10-13 12:33:26,481:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:26,481:INFO:Checking exceptions
2023-10-13 12:33:26,481:INFO:Preloading libraries
2023-10-13 12:33:26,481:INFO:Set up data.
2023-10-13 12:33:26,487:INFO:Set up index.
2023-10-13 12:33:26,544:INFO:Initializing predict_model()
2023-10-13 12:33:26,544:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:26,544:INFO:Checking exceptions
2023-10-13 12:33:26,544:INFO:Preloading libraries
2023-10-13 12:33:26,544:INFO:Set up data.
2023-10-13 12:33:26,550:INFO:Set up index.
2023-10-13 12:33:26,605:INFO:Initializing predict_model()
2023-10-13 12:33:26,605:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:33:26,605:INFO:Checking exceptions
2023-10-13 12:33:26,605:INFO:Preloading libraries
2023-10-13 12:33:26,605:INFO:Set up data.
2023-10-13 12:33:26,611:INFO:Set up index.
2023-10-13 12:33:35,186:INFO:Initializing predict_model()
2023-10-13 12:33:35,187:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3541f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:33:35,187:INFO:Checking exceptions
2023-10-13 12:33:35,187:INFO:Preloading libraries
2023-10-13 12:33:35,188:INFO:Set up data.
2023-10-13 12:33:35,198:INFO:Set up index.
2023-10-13 12:33:35,321:INFO:Initializing predict_model()
2023-10-13 12:33:35,321:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b55ae90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:33:35,322:INFO:Checking exceptions
2023-10-13 12:33:35,322:INFO:Preloading libraries
2023-10-13 12:33:35,322:INFO:Set up data.
2023-10-13 12:33:35,331:INFO:Set up index.
2023-10-13 12:33:35,393:INFO:Initializing predict_model()
2023-10-13 12:33:35,393:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b558d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:33:35,393:INFO:Checking exceptions
2023-10-13 12:33:35,393:INFO:Preloading libraries
2023-10-13 12:33:35,394:INFO:Set up data.
2023-10-13 12:33:35,400:INFO:Set up index.
2023-10-13 12:33:35,463:INFO:Initializing predict_model()
2023-10-13 12:33:35,463:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b506710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:33:35,463:INFO:Checking exceptions
2023-10-13 12:33:35,463:INFO:Preloading libraries
2023-10-13 12:33:35,463:INFO:Set up data.
2023-10-13 12:33:35,469:INFO:Set up index.
2023-10-13 12:33:35,525:INFO:Initializing predict_model()
2023-10-13 12:33:35,525:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b786f80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:33:35,525:INFO:Checking exceptions
2023-10-13 12:33:35,525:INFO:Preloading libraries
2023-10-13 12:33:35,525:INFO:Set up data.
2023-10-13 12:33:35,531:INFO:Set up index.
2023-10-13 12:33:44,131:INFO:Initializing predict_model()
2023-10-13 12:33:44,132:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b1073a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:44,132:INFO:Checking exceptions
2023-10-13 12:33:44,132:INFO:Preloading libraries
2023-10-13 12:33:44,133:INFO:Set up data.
2023-10-13 12:33:44,158:INFO:Set up index.
2023-10-13 12:33:44,248:INFO:Initializing predict_model()
2023-10-13 12:33:44,249:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b1073a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:44,249:INFO:Checking exceptions
2023-10-13 12:33:44,249:INFO:Preloading libraries
2023-10-13 12:33:44,249:INFO:Set up data.
2023-10-13 12:33:44,255:INFO:Set up index.
2023-10-13 12:33:44,358:INFO:Initializing predict_model()
2023-10-13 12:33:44,358:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:44,358:INFO:Checking exceptions
2023-10-13 12:33:44,358:INFO:Preloading libraries
2023-10-13 12:33:44,358:INFO:Set up data.
2023-10-13 12:33:44,365:INFO:Set up index.
2023-10-13 12:33:44,464:INFO:Initializing predict_model()
2023-10-13 12:33:44,464:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:44,464:INFO:Checking exceptions
2023-10-13 12:33:44,464:INFO:Preloading libraries
2023-10-13 12:33:44,464:INFO:Set up data.
2023-10-13 12:33:44,471:INFO:Set up index.
2023-10-13 12:33:44,549:INFO:Initializing predict_model()
2023-10-13 12:33:44,549:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b520130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:33:44,549:INFO:Checking exceptions
2023-10-13 12:33:44,549:INFO:Preloading libraries
2023-10-13 12:33:44,550:INFO:Set up data.
2023-10-13 12:33:44,557:INFO:Set up index.
2023-10-13 12:33:53,144:INFO:Initializing predict_model()
2023-10-13 12:33:53,146:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:33:53,146:INFO:Checking exceptions
2023-10-13 12:33:53,146:INFO:Preloading libraries
2023-10-13 12:33:53,148:INFO:Set up data.
2023-10-13 12:33:53,157:INFO:Set up index.
2023-10-13 12:33:53,262:INFO:Initializing predict_model()
2023-10-13 12:33:53,262:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b507970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:33:53,262:INFO:Checking exceptions
2023-10-13 12:33:53,262:INFO:Preloading libraries
2023-10-13 12:33:53,262:INFO:Set up data.
2023-10-13 12:33:53,269:INFO:Set up index.
2023-10-13 12:33:53,327:INFO:Initializing predict_model()
2023-10-13 12:33:53,327:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b507970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:33:53,327:INFO:Checking exceptions
2023-10-13 12:33:53,327:INFO:Preloading libraries
2023-10-13 12:33:53,327:INFO:Set up data.
2023-10-13 12:33:53,333:INFO:Set up index.
2023-10-13 12:33:53,390:INFO:Initializing predict_model()
2023-10-13 12:33:53,390:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71fd30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:33:53,390:INFO:Checking exceptions
2023-10-13 12:33:53,390:INFO:Preloading libraries
2023-10-13 12:33:53,390:INFO:Set up data.
2023-10-13 12:33:53,397:INFO:Set up index.
2023-10-13 12:33:53,466:INFO:Initializing predict_model()
2023-10-13 12:33:53,467:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b71fd30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:33:53,467:INFO:Checking exceptions
2023-10-13 12:33:53,467:INFO:Preloading libraries
2023-10-13 12:33:53,467:INFO:Set up data.
2023-10-13 12:33:53,473:INFO:Set up index.
2023-10-13 12:34:02,041:INFO:Initializing predict_model()
2023-10-13 12:34:02,042:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b687b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149a20>)
2023-10-13 12:34:02,042:INFO:Checking exceptions
2023-10-13 12:34:02,042:INFO:Preloading libraries
2023-10-13 12:34:02,043:INFO:Set up data.
2023-10-13 12:34:02,055:INFO:Set up index.
2023-10-13 12:34:02,193:INFO:Initializing predict_model()
2023-10-13 12:34:02,194:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b559150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149a20>)
2023-10-13 12:34:02,194:INFO:Checking exceptions
2023-10-13 12:34:02,194:INFO:Preloading libraries
2023-10-13 12:34:02,194:INFO:Set up data.
2023-10-13 12:34:02,200:INFO:Set up index.
2023-10-13 12:34:02,256:INFO:Initializing predict_model()
2023-10-13 12:34:02,256:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b559150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149a20>)
2023-10-13 12:34:02,256:INFO:Checking exceptions
2023-10-13 12:34:02,256:INFO:Preloading libraries
2023-10-13 12:34:02,256:INFO:Set up data.
2023-10-13 12:34:02,262:INFO:Set up index.
2023-10-13 12:34:02,318:INFO:Initializing predict_model()
2023-10-13 12:34:02,318:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b559150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149a20>)
2023-10-13 12:34:02,318:INFO:Checking exceptions
2023-10-13 12:34:02,318:INFO:Preloading libraries
2023-10-13 12:34:02,318:INFO:Set up data.
2023-10-13 12:34:02,324:INFO:Set up index.
2023-10-13 12:34:02,383:INFO:Initializing predict_model()
2023-10-13 12:34:02,383:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b559150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149a20>)
2023-10-13 12:34:02,383:INFO:Checking exceptions
2023-10-13 12:34:02,383:INFO:Preloading libraries
2023-10-13 12:34:02,383:INFO:Set up data.
2023-10-13 12:34:02,389:INFO:Set up index.
2023-10-13 12:34:10,967:INFO:Initializing predict_model()
2023-10-13 12:34:10,968:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba80430>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1495a0>)
2023-10-13 12:34:10,968:INFO:Checking exceptions
2023-10-13 12:34:10,968:INFO:Preloading libraries
2023-10-13 12:34:10,970:INFO:Set up data.
2023-10-13 12:34:10,981:INFO:Set up index.
2023-10-13 12:34:11,084:INFO:Initializing predict_model()
2023-10-13 12:34:11,084:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b559150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 12:34:11,084:INFO:Checking exceptions
2023-10-13 12:34:11,085:INFO:Preloading libraries
2023-10-13 12:34:11,085:INFO:Set up data.
2023-10-13 12:34:11,091:INFO:Set up index.
2023-10-13 12:34:11,148:INFO:Initializing predict_model()
2023-10-13 12:34:11,148:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b559150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 12:34:11,148:INFO:Checking exceptions
2023-10-13 12:34:11,148:INFO:Preloading libraries
2023-10-13 12:34:11,148:INFO:Set up data.
2023-10-13 12:34:11,154:INFO:Set up index.
2023-10-13 12:34:11,210:INFO:Initializing predict_model()
2023-10-13 12:34:11,210:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b201bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 12:34:11,210:INFO:Checking exceptions
2023-10-13 12:34:11,210:INFO:Preloading libraries
2023-10-13 12:34:11,210:INFO:Set up data.
2023-10-13 12:34:11,216:INFO:Set up index.
2023-10-13 12:34:11,271:INFO:Initializing predict_model()
2023-10-13 12:34:11,272:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b504b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695f30>)
2023-10-13 12:34:11,272:INFO:Checking exceptions
2023-10-13 12:34:11,272:INFO:Preloading libraries
2023-10-13 12:34:11,272:INFO:Set up data.
2023-10-13 12:34:11,278:INFO:Set up index.
2023-10-13 12:34:19,824:INFO:Initializing predict_model()
2023-10-13 12:34:19,825:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b89e470>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:34:19,825:INFO:Checking exceptions
2023-10-13 12:34:19,825:INFO:Preloading libraries
2023-10-13 12:34:19,826:INFO:Set up data.
2023-10-13 12:34:19,836:INFO:Set up index.
2023-10-13 12:34:19,962:INFO:Initializing predict_model()
2023-10-13 12:34:19,962:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5054b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:34:19,962:INFO:Checking exceptions
2023-10-13 12:34:19,962:INFO:Preloading libraries
2023-10-13 12:34:19,962:INFO:Set up data.
2023-10-13 12:34:19,969:INFO:Set up index.
2023-10-13 12:34:20,025:INFO:Initializing predict_model()
2023-10-13 12:34:20,025:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5054b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:34:20,025:INFO:Checking exceptions
2023-10-13 12:34:20,025:INFO:Preloading libraries
2023-10-13 12:34:20,025:INFO:Set up data.
2023-10-13 12:34:20,031:INFO:Set up index.
2023-10-13 12:34:20,087:INFO:Initializing predict_model()
2023-10-13 12:34:20,087:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5054b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:34:20,087:INFO:Checking exceptions
2023-10-13 12:34:20,087:INFO:Preloading libraries
2023-10-13 12:34:20,087:INFO:Set up data.
2023-10-13 12:34:20,093:INFO:Set up index.
2023-10-13 12:34:20,163:INFO:Initializing predict_model()
2023-10-13 12:34:20,163:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5054b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:34:20,163:INFO:Checking exceptions
2023-10-13 12:34:20,164:INFO:Preloading libraries
2023-10-13 12:34:20,164:INFO:Set up data.
2023-10-13 12:34:20,172:INFO:Set up index.
2023-10-13 12:34:28,740:INFO:Initializing predict_model()
2023-10-13 12:34:28,741:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73ba00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1485e0>)
2023-10-13 12:34:28,741:INFO:Checking exceptions
2023-10-13 12:34:28,741:INFO:Preloading libraries
2023-10-13 12:34:28,742:INFO:Set up data.
2023-10-13 12:34:28,760:INFO:Set up index.
2023-10-13 12:34:28,972:INFO:Initializing predict_model()
2023-10-13 12:34:28,972:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b738d60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256967a0>)
2023-10-13 12:34:28,972:INFO:Checking exceptions
2023-10-13 12:34:28,972:INFO:Preloading libraries
2023-10-13 12:34:28,972:INFO:Set up data.
2023-10-13 12:34:28,982:INFO:Set up index.
2023-10-13 12:34:29,066:INFO:Initializing predict_model()
2023-10-13 12:34:29,067:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73ae30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256967a0>)
2023-10-13 12:34:29,067:INFO:Checking exceptions
2023-10-13 12:34:29,067:INFO:Preloading libraries
2023-10-13 12:34:29,067:INFO:Set up data.
2023-10-13 12:34:29,073:INFO:Set up index.
2023-10-13 12:34:29,216:INFO:Initializing predict_model()
2023-10-13 12:34:29,216:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b596a70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256967a0>)
2023-10-13 12:34:29,216:INFO:Checking exceptions
2023-10-13 12:34:29,216:INFO:Preloading libraries
2023-10-13 12:34:29,216:INFO:Set up data.
2023-10-13 12:34:29,236:INFO:Set up index.
2023-10-13 12:34:29,587:INFO:Initializing predict_model()
2023-10-13 12:34:29,587:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256967a0>)
2023-10-13 12:34:29,587:INFO:Checking exceptions
2023-10-13 12:34:29,587:INFO:Preloading libraries
2023-10-13 12:34:29,589:INFO:Set up data.
2023-10-13 12:34:29,614:INFO:Set up index.
2023-10-13 12:34:38,293:INFO:Initializing predict_model()
2023-10-13 12:34:38,294:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b684310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b73a710>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:34:38,294:INFO:Checking exceptions
2023-10-13 12:34:38,294:INFO:Preloading libraries
2023-10-13 12:34:38,296:INFO:Set up data.
2023-10-13 12:34:38,311:INFO:Set up index.
2023-10-13 12:34:38,488:INFO:Initializing predict_model()
2023-10-13 12:34:38,488:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b596440>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:34:38,488:INFO:Checking exceptions
2023-10-13 12:34:38,488:INFO:Preloading libraries
2023-10-13 12:34:38,488:INFO:Set up data.
2023-10-13 12:34:38,496:INFO:Set up index.
2023-10-13 12:34:38,565:INFO:Initializing predict_model()
2023-10-13 12:34:38,565:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b596440>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:34:38,565:INFO:Checking exceptions
2023-10-13 12:34:38,565:INFO:Preloading libraries
2023-10-13 12:34:38,565:INFO:Set up data.
2023-10-13 12:34:38,571:INFO:Set up index.
2023-10-13 12:34:38,631:INFO:Initializing predict_model()
2023-10-13 12:34:38,631:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:34:38,631:INFO:Checking exceptions
2023-10-13 12:34:38,631:INFO:Preloading libraries
2023-10-13 12:34:38,631:INFO:Set up data.
2023-10-13 12:34:38,637:INFO:Set up index.
2023-10-13 12:34:38,694:INFO:Initializing predict_model()
2023-10-13 12:34:38,694:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89f5e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:34:38,694:INFO:Checking exceptions
2023-10-13 12:34:38,694:INFO:Preloading libraries
2023-10-13 12:34:38,694:INFO:Set up data.
2023-10-13 12:34:38,700:INFO:Set up index.
2023-10-13 12:34:44,434:INFO:Initializing load_model()
2023-10-13 12:34:44,434:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:34:44,441:INFO:Initializing load_model()
2023-10-13 12:34:44,441:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:34:44,444:INFO:Initializing load_model()
2023-10-13 12:34:44,444:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:34:44,446:INFO:Initializing load_model()
2023-10-13 12:34:44,446:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:34:44,448:INFO:Initializing load_model()
2023-10-13 12:34:44,448:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:34:44,475:INFO:Initializing predict_model()
2023-10-13 12:34:44,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b7383a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:34:44,476:INFO:Checking exceptions
2023-10-13 12:34:44,476:INFO:Preloading libraries
2023-10-13 12:34:44,476:INFO:Set up data.
2023-10-13 12:34:44,484:INFO:Set up index.
2023-10-13 12:34:44,600:INFO:Initializing predict_model()
2023-10-13 12:34:44,600:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b7383a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:34:44,600:INFO:Checking exceptions
2023-10-13 12:34:44,601:INFO:Preloading libraries
2023-10-13 12:34:44,601:INFO:Set up data.
2023-10-13 12:34:44,612:INFO:Set up index.
2023-10-13 12:34:44,746:INFO:Initializing predict_model()
2023-10-13 12:34:44,746:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b7383a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:34:44,746:INFO:Checking exceptions
2023-10-13 12:34:44,746:INFO:Preloading libraries
2023-10-13 12:34:44,747:INFO:Set up data.
2023-10-13 12:34:44,754:INFO:Set up index.
2023-10-13 12:34:44,812:INFO:Initializing predict_model()
2023-10-13 12:34:44,812:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b62fa60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:34:44,812:INFO:Checking exceptions
2023-10-13 12:34:44,812:INFO:Preloading libraries
2023-10-13 12:34:44,812:INFO:Set up data.
2023-10-13 12:34:44,818:INFO:Set up index.
2023-10-13 12:34:44,878:INFO:Initializing predict_model()
2023-10-13 12:34:44,878:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b62fa60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:34:44,878:INFO:Checking exceptions
2023-10-13 12:34:44,879:INFO:Preloading libraries
2023-10-13 12:34:44,879:INFO:Set up data.
2023-10-13 12:34:44,885:INFO:Set up index.
2023-10-13 12:34:53,508:INFO:Initializing predict_model()
2023-10-13 12:34:53,509:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:34:53,509:INFO:Checking exceptions
2023-10-13 12:34:53,509:INFO:Preloading libraries
2023-10-13 12:34:53,510:INFO:Set up data.
2023-10-13 12:34:53,525:INFO:Set up index.
2023-10-13 12:34:53,642:INFO:Initializing predict_model()
2023-10-13 12:34:53,643:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b124d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:34:53,643:INFO:Checking exceptions
2023-10-13 12:34:53,643:INFO:Preloading libraries
2023-10-13 12:34:53,643:INFO:Set up data.
2023-10-13 12:34:53,649:INFO:Set up index.
2023-10-13 12:34:53,706:INFO:Initializing predict_model()
2023-10-13 12:34:53,706:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b124d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:34:53,706:INFO:Checking exceptions
2023-10-13 12:34:53,706:INFO:Preloading libraries
2023-10-13 12:34:53,706:INFO:Set up data.
2023-10-13 12:34:53,712:INFO:Set up index.
2023-10-13 12:34:53,768:INFO:Initializing predict_model()
2023-10-13 12:34:53,768:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b124d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:34:53,768:INFO:Checking exceptions
2023-10-13 12:34:53,768:INFO:Preloading libraries
2023-10-13 12:34:53,768:INFO:Set up data.
2023-10-13 12:34:53,774:INFO:Set up index.
2023-10-13 12:34:53,830:INFO:Initializing predict_model()
2023-10-13 12:34:53,830:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b124d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:34:53,830:INFO:Checking exceptions
2023-10-13 12:34:53,830:INFO:Preloading libraries
2023-10-13 12:34:53,830:INFO:Set up data.
2023-10-13 12:34:53,836:INFO:Set up index.
2023-10-13 12:35:02,380:INFO:Initializing predict_model()
2023-10-13 12:35:02,380:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb4a6e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148820>)
2023-10-13 12:35:02,380:INFO:Checking exceptions
2023-10-13 12:35:02,380:INFO:Preloading libraries
2023-10-13 12:35:02,381:INFO:Set up data.
2023-10-13 12:35:02,391:INFO:Set up index.
2023-10-13 12:35:02,468:INFO:Initializing predict_model()
2023-10-13 12:35:02,468:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148820>)
2023-10-13 12:35:02,468:INFO:Checking exceptions
2023-10-13 12:35:02,468:INFO:Preloading libraries
2023-10-13 12:35:02,469:INFO:Set up data.
2023-10-13 12:35:02,474:INFO:Set up index.
2023-10-13 12:35:02,531:INFO:Initializing predict_model()
2023-10-13 12:35:02,531:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b522560>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148820>)
2023-10-13 12:35:02,531:INFO:Checking exceptions
2023-10-13 12:35:02,531:INFO:Preloading libraries
2023-10-13 12:35:02,531:INFO:Set up data.
2023-10-13 12:35:02,537:INFO:Set up index.
2023-10-13 12:35:02,593:INFO:Initializing predict_model()
2023-10-13 12:35:02,593:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148820>)
2023-10-13 12:35:02,593:INFO:Checking exceptions
2023-10-13 12:35:02,593:INFO:Preloading libraries
2023-10-13 12:35:02,594:INFO:Set up data.
2023-10-13 12:35:02,599:INFO:Set up index.
2023-10-13 12:35:02,655:INFO:Initializing predict_model()
2023-10-13 12:35:02,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148820>)
2023-10-13 12:35:02,655:INFO:Checking exceptions
2023-10-13 12:35:02,655:INFO:Preloading libraries
2023-10-13 12:35:02,656:INFO:Set up data.
2023-10-13 12:35:02,661:INFO:Set up index.
2023-10-13 12:35:11,249:INFO:Initializing predict_model()
2023-10-13 12:35:11,250:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b784f40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149cf0>)
2023-10-13 12:35:11,250:INFO:Checking exceptions
2023-10-13 12:35:11,250:INFO:Preloading libraries
2023-10-13 12:35:11,251:INFO:Set up data.
2023-10-13 12:35:11,266:INFO:Set up index.
2023-10-13 12:35:11,389:INFO:Initializing predict_model()
2023-10-13 12:35:11,389:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5970a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149cf0>)
2023-10-13 12:35:11,389:INFO:Checking exceptions
2023-10-13 12:35:11,389:INFO:Preloading libraries
2023-10-13 12:35:11,389:INFO:Set up data.
2023-10-13 12:35:11,395:INFO:Set up index.
2023-10-13 12:35:11,453:INFO:Initializing predict_model()
2023-10-13 12:35:11,453:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5970a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149cf0>)
2023-10-13 12:35:11,453:INFO:Checking exceptions
2023-10-13 12:35:11,453:INFO:Preloading libraries
2023-10-13 12:35:11,453:INFO:Set up data.
2023-10-13 12:35:11,459:INFO:Set up index.
2023-10-13 12:35:11,516:INFO:Initializing predict_model()
2023-10-13 12:35:11,516:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5970a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:35:11,516:INFO:Checking exceptions
2023-10-13 12:35:11,516:INFO:Preloading libraries
2023-10-13 12:35:11,516:INFO:Set up data.
2023-10-13 12:35:11,522:INFO:Set up index.
2023-10-13 12:35:11,579:INFO:Initializing predict_model()
2023-10-13 12:35:11,579:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5970a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:35:11,579:INFO:Checking exceptions
2023-10-13 12:35:11,579:INFO:Preloading libraries
2023-10-13 12:35:11,579:INFO:Set up data.
2023-10-13 12:35:11,585:INFO:Set up index.
2023-10-13 12:35:20,095:INFO:Initializing predict_model()
2023-10-13 12:35:20,096:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b202da0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:35:20,096:INFO:Checking exceptions
2023-10-13 12:35:20,096:INFO:Preloading libraries
2023-10-13 12:35:20,097:INFO:Set up data.
2023-10-13 12:35:20,109:INFO:Set up index.
2023-10-13 12:35:20,215:INFO:Initializing predict_model()
2023-10-13 12:35:20,215:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:35:20,215:INFO:Checking exceptions
2023-10-13 12:35:20,215:INFO:Preloading libraries
2023-10-13 12:35:20,215:INFO:Set up data.
2023-10-13 12:35:20,222:INFO:Set up index.
2023-10-13 12:35:20,279:INFO:Initializing predict_model()
2023-10-13 12:35:20,279:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:35:20,279:INFO:Checking exceptions
2023-10-13 12:35:20,279:INFO:Preloading libraries
2023-10-13 12:35:20,279:INFO:Set up data.
2023-10-13 12:35:20,285:INFO:Set up index.
2023-10-13 12:35:20,342:INFO:Initializing predict_model()
2023-10-13 12:35:20,342:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:35:20,342:INFO:Checking exceptions
2023-10-13 12:35:20,342:INFO:Preloading libraries
2023-10-13 12:35:20,342:INFO:Set up data.
2023-10-13 12:35:20,348:INFO:Set up index.
2023-10-13 12:35:20,405:INFO:Initializing predict_model()
2023-10-13 12:35:20,405:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:35:20,405:INFO:Checking exceptions
2023-10-13 12:35:20,405:INFO:Preloading libraries
2023-10-13 12:35:20,405:INFO:Set up data.
2023-10-13 12:35:20,411:INFO:Set up index.
2023-10-13 12:35:28,943:INFO:Initializing predict_model()
2023-10-13 12:35:28,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28badea10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:35:28,944:INFO:Checking exceptions
2023-10-13 12:35:28,944:INFO:Preloading libraries
2023-10-13 12:35:28,944:INFO:Set up data.
2023-10-13 12:35:28,959:INFO:Set up index.
2023-10-13 12:35:29,059:INFO:Initializing predict_model()
2023-10-13 12:35:29,059:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:35:29,060:INFO:Checking exceptions
2023-10-13 12:35:29,060:INFO:Preloading libraries
2023-10-13 12:35:29,060:INFO:Set up data.
2023-10-13 12:35:29,066:INFO:Set up index.
2023-10-13 12:35:29,122:INFO:Initializing predict_model()
2023-10-13 12:35:29,122:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:35:29,122:INFO:Checking exceptions
2023-10-13 12:35:29,122:INFO:Preloading libraries
2023-10-13 12:35:29,122:INFO:Set up data.
2023-10-13 12:35:29,128:INFO:Set up index.
2023-10-13 12:35:29,185:INFO:Initializing predict_model()
2023-10-13 12:35:29,185:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:35:29,185:INFO:Checking exceptions
2023-10-13 12:35:29,185:INFO:Preloading libraries
2023-10-13 12:35:29,185:INFO:Set up data.
2023-10-13 12:35:29,191:INFO:Set up index.
2023-10-13 12:35:29,247:INFO:Initializing predict_model()
2023-10-13 12:35:29,247:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:35:29,247:INFO:Checking exceptions
2023-10-13 12:35:29,247:INFO:Preloading libraries
2023-10-13 12:35:29,247:INFO:Set up data.
2023-10-13 12:35:29,253:INFO:Set up index.
2023-10-13 12:35:37,813:INFO:Initializing predict_model()
2023-10-13 12:35:37,814:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb4a3b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:35:37,814:INFO:Checking exceptions
2023-10-13 12:35:37,814:INFO:Preloading libraries
2023-10-13 12:35:37,815:INFO:Set up data.
2023-10-13 12:35:37,825:INFO:Set up index.
2023-10-13 12:35:37,909:INFO:Initializing predict_model()
2023-10-13 12:35:37,909:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73a860>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:35:37,909:INFO:Checking exceptions
2023-10-13 12:35:37,909:INFO:Preloading libraries
2023-10-13 12:35:37,909:INFO:Set up data.
2023-10-13 12:35:37,915:INFO:Set up index.
2023-10-13 12:35:37,972:INFO:Initializing predict_model()
2023-10-13 12:35:37,972:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b687760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:35:37,973:INFO:Checking exceptions
2023-10-13 12:35:37,973:INFO:Preloading libraries
2023-10-13 12:35:37,973:INFO:Set up data.
2023-10-13 12:35:37,979:INFO:Set up index.
2023-10-13 12:35:38,052:INFO:Initializing predict_model()
2023-10-13 12:35:38,052:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:35:38,052:INFO:Checking exceptions
2023-10-13 12:35:38,052:INFO:Preloading libraries
2023-10-13 12:35:38,052:INFO:Set up data.
2023-10-13 12:35:38,058:INFO:Set up index.
2023-10-13 12:35:38,113:INFO:Initializing predict_model()
2023-10-13 12:35:38,114:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b597670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:35:38,114:INFO:Checking exceptions
2023-10-13 12:35:38,114:INFO:Preloading libraries
2023-10-13 12:35:38,114:INFO:Set up data.
2023-10-13 12:35:38,120:INFO:Set up index.
2023-10-13 12:35:46,679:INFO:Initializing predict_model()
2023-10-13 12:35:46,680:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb14f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b6d0>)
2023-10-13 12:35:46,680:INFO:Checking exceptions
2023-10-13 12:35:46,680:INFO:Preloading libraries
2023-10-13 12:35:46,681:INFO:Set up data.
2023-10-13 12:35:46,693:INFO:Set up index.
2023-10-13 12:35:46,786:INFO:Initializing predict_model()
2023-10-13 12:35:46,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb14f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b6d0>)
2023-10-13 12:35:46,786:INFO:Checking exceptions
2023-10-13 12:35:46,786:INFO:Preloading libraries
2023-10-13 12:35:46,786:INFO:Set up data.
2023-10-13 12:35:46,792:INFO:Set up index.
2023-10-13 12:35:46,874:INFO:Initializing predict_model()
2023-10-13 12:35:46,874:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28badf130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b6d0>)
2023-10-13 12:35:46,880:INFO:Checking exceptions
2023-10-13 12:35:46,880:INFO:Preloading libraries
2023-10-13 12:35:46,881:INFO:Set up data.
2023-10-13 12:35:46,901:INFO:Set up index.
2023-10-13 12:35:47,419:INFO:Initializing predict_model()
2023-10-13 12:35:47,419:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b89fc70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b6d0>)
2023-10-13 12:35:47,420:INFO:Checking exceptions
2023-10-13 12:35:47,420:INFO:Preloading libraries
2023-10-13 12:35:47,420:INFO:Set up data.
2023-10-13 12:35:47,446:INFO:Set up index.
2023-10-13 12:35:47,550:INFO:Initializing predict_model()
2023-10-13 12:35:47,551:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb16800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 12:35:47,551:INFO:Checking exceptions
2023-10-13 12:35:47,551:INFO:Preloading libraries
2023-10-13 12:35:47,551:INFO:Set up data.
2023-10-13 12:35:47,557:INFO:Set up index.
2023-10-13 12:35:56,093:INFO:Initializing predict_model()
2023-10-13 12:35:56,094:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba81f90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1495a0>)
2023-10-13 12:35:56,094:INFO:Checking exceptions
2023-10-13 12:35:56,094:INFO:Preloading libraries
2023-10-13 12:35:56,095:INFO:Set up data.
2023-10-13 12:35:56,106:INFO:Set up index.
2023-10-13 12:35:56,246:INFO:Initializing predict_model()
2023-10-13 12:35:56,246:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b785db0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1495a0>)
2023-10-13 12:35:56,246:INFO:Checking exceptions
2023-10-13 12:35:56,246:INFO:Preloading libraries
2023-10-13 12:35:56,246:INFO:Set up data.
2023-10-13 12:35:56,253:INFO:Set up index.
2023-10-13 12:35:56,311:INFO:Initializing predict_model()
2023-10-13 12:35:56,311:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b739510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1495a0>)
2023-10-13 12:35:56,311:INFO:Checking exceptions
2023-10-13 12:35:56,311:INFO:Preloading libraries
2023-10-13 12:35:56,311:INFO:Set up data.
2023-10-13 12:35:56,317:INFO:Set up index.
2023-10-13 12:35:56,375:INFO:Initializing predict_model()
2023-10-13 12:35:56,375:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b785db0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1495a0>)
2023-10-13 12:35:56,375:INFO:Checking exceptions
2023-10-13 12:35:56,375:INFO:Preloading libraries
2023-10-13 12:35:56,375:INFO:Set up data.
2023-10-13 12:35:56,381:INFO:Set up index.
2023-10-13 12:35:56,437:INFO:Initializing predict_model()
2023-10-13 12:35:56,438:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b785db0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1495a0>)
2023-10-13 12:35:56,438:INFO:Checking exceptions
2023-10-13 12:35:56,438:INFO:Preloading libraries
2023-10-13 12:35:56,438:INFO:Set up data.
2023-10-13 12:35:56,444:INFO:Set up index.
2023-10-13 12:36:04,970:INFO:Initializing predict_model()
2023-10-13 12:36:04,971:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb81ab0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b830ee0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149c60>)
2023-10-13 12:36:04,971:INFO:Checking exceptions
2023-10-13 12:36:04,971:INFO:Preloading libraries
2023-10-13 12:36:04,972:INFO:Set up data.
2023-10-13 12:36:04,982:INFO:Set up index.
2023-10-13 12:36:05,100:INFO:Initializing predict_model()
2023-10-13 12:36:05,100:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b686770>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:36:05,100:INFO:Checking exceptions
2023-10-13 12:36:05,100:INFO:Preloading libraries
2023-10-13 12:36:05,100:INFO:Set up data.
2023-10-13 12:36:05,106:INFO:Set up index.
2023-10-13 12:36:05,163:INFO:Initializing predict_model()
2023-10-13 12:36:05,163:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b686770>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:36:05,163:INFO:Checking exceptions
2023-10-13 12:36:05,163:INFO:Preloading libraries
2023-10-13 12:36:05,163:INFO:Set up data.
2023-10-13 12:36:05,169:INFO:Set up index.
2023-10-13 12:36:05,226:INFO:Initializing predict_model()
2023-10-13 12:36:05,226:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b7866b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:36:05,226:INFO:Checking exceptions
2023-10-13 12:36:05,226:INFO:Preloading libraries
2023-10-13 12:36:05,226:INFO:Set up data.
2023-10-13 12:36:05,232:INFO:Set up index.
2023-10-13 12:36:05,289:INFO:Initializing predict_model()
2023-10-13 12:36:05,289:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b7866b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb17460>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:36:05,289:INFO:Checking exceptions
2023-10-13 12:36:05,289:INFO:Preloading libraries
2023-10-13 12:36:05,289:INFO:Set up data.
2023-10-13 12:36:05,295:INFO:Set up index.
2023-10-13 12:36:15,472:INFO:Initializing load_model()
2023-10-13 12:36:15,472:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:36:15,475:INFO:Initializing load_model()
2023-10-13 12:36:15,475:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:36:15,477:INFO:Initializing load_model()
2023-10-13 12:36:15,477:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:36:15,479:INFO:Initializing load_model()
2023-10-13 12:36:15,479:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:36:15,481:INFO:Initializing load_model()
2023-10-13 12:36:15,481:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:36:15,508:INFO:Initializing predict_model()
2023-10-13 12:36:15,508:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5951e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:36:15,508:INFO:Checking exceptions
2023-10-13 12:36:15,509:INFO:Preloading libraries
2023-10-13 12:36:15,509:INFO:Set up data.
2023-10-13 12:36:15,519:INFO:Set up index.
2023-10-13 12:36:15,603:INFO:Initializing predict_model()
2023-10-13 12:36:15,603:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5951e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:36:15,603:INFO:Checking exceptions
2023-10-13 12:36:15,603:INFO:Preloading libraries
2023-10-13 12:36:15,603:INFO:Set up data.
2023-10-13 12:36:15,614:INFO:Set up index.
2023-10-13 12:36:15,680:INFO:Initializing predict_model()
2023-10-13 12:36:15,680:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5951e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:36:15,680:INFO:Checking exceptions
2023-10-13 12:36:15,680:INFO:Preloading libraries
2023-10-13 12:36:15,680:INFO:Set up data.
2023-10-13 12:36:15,686:INFO:Set up index.
2023-10-13 12:36:15,744:INFO:Initializing predict_model()
2023-10-13 12:36:15,744:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5951e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:36:15,744:INFO:Checking exceptions
2023-10-13 12:36:15,744:INFO:Preloading libraries
2023-10-13 12:36:15,744:INFO:Set up data.
2023-10-13 12:36:15,750:INFO:Set up index.
2023-10-13 12:36:15,808:INFO:Initializing predict_model()
2023-10-13 12:36:15,808:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b5951e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:36:15,808:INFO:Checking exceptions
2023-10-13 12:36:15,808:INFO:Preloading libraries
2023-10-13 12:36:15,808:INFO:Set up data.
2023-10-13 12:36:15,815:INFO:Set up index.
2023-10-13 12:36:24,368:INFO:Initializing predict_model()
2023-10-13 12:36:24,369:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb4ad70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149d80>)
2023-10-13 12:36:24,369:INFO:Checking exceptions
2023-10-13 12:36:24,369:INFO:Preloading libraries
2023-10-13 12:36:24,369:INFO:Set up data.
2023-10-13 12:36:24,380:INFO:Set up index.
2023-10-13 12:36:24,452:INFO:Initializing predict_model()
2023-10-13 12:36:24,452:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149d80>)
2023-10-13 12:36:24,452:INFO:Checking exceptions
2023-10-13 12:36:24,452:INFO:Preloading libraries
2023-10-13 12:36:24,452:INFO:Set up data.
2023-10-13 12:36:24,458:INFO:Set up index.
2023-10-13 12:36:24,517:INFO:Initializing predict_model()
2023-10-13 12:36:24,517:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149d80>)
2023-10-13 12:36:24,517:INFO:Checking exceptions
2023-10-13 12:36:24,517:INFO:Preloading libraries
2023-10-13 12:36:24,517:INFO:Set up data.
2023-10-13 12:36:24,523:INFO:Set up index.
2023-10-13 12:36:24,580:INFO:Initializing predict_model()
2023-10-13 12:36:24,580:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 12:36:24,580:INFO:Checking exceptions
2023-10-13 12:36:24,580:INFO:Preloading libraries
2023-10-13 12:36:24,580:INFO:Set up data.
2023-10-13 12:36:24,586:INFO:Set up index.
2023-10-13 12:36:24,643:INFO:Initializing predict_model()
2023-10-13 12:36:24,643:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 12:36:24,643:INFO:Checking exceptions
2023-10-13 12:36:24,643:INFO:Preloading libraries
2023-10-13 12:36:24,643:INFO:Set up data.
2023-10-13 12:36:24,649:INFO:Set up index.
2023-10-13 12:36:33,220:INFO:Initializing predict_model()
2023-10-13 12:36:33,221:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba809a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:36:33,221:INFO:Checking exceptions
2023-10-13 12:36:33,221:INFO:Preloading libraries
2023-10-13 12:36:33,221:INFO:Set up data.
2023-10-13 12:36:33,231:INFO:Set up index.
2023-10-13 12:36:33,319:INFO:Initializing predict_model()
2023-10-13 12:36:33,319:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73b610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:36:33,319:INFO:Checking exceptions
2023-10-13 12:36:33,319:INFO:Preloading libraries
2023-10-13 12:36:33,319:INFO:Set up data.
2023-10-13 12:36:33,325:INFO:Set up index.
2023-10-13 12:36:33,382:INFO:Initializing predict_model()
2023-10-13 12:36:33,382:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73b610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:36:33,382:INFO:Checking exceptions
2023-10-13 12:36:33,382:INFO:Preloading libraries
2023-10-13 12:36:33,382:INFO:Set up data.
2023-10-13 12:36:33,388:INFO:Set up index.
2023-10-13 12:36:33,445:INFO:Initializing predict_model()
2023-10-13 12:36:33,446:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73b610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:36:33,446:INFO:Checking exceptions
2023-10-13 12:36:33,446:INFO:Preloading libraries
2023-10-13 12:36:33,446:INFO:Set up data.
2023-10-13 12:36:33,452:INFO:Set up index.
2023-10-13 12:36:33,509:INFO:Initializing predict_model()
2023-10-13 12:36:33,509:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73b610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:36:33,509:INFO:Checking exceptions
2023-10-13 12:36:33,509:INFO:Preloading libraries
2023-10-13 12:36:33,509:INFO:Set up data.
2023-10-13 12:36:33,515:INFO:Set up index.
2023-10-13 12:36:42,081:INFO:Initializing predict_model()
2023-10-13 12:36:42,082:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28badf6a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149900>)
2023-10-13 12:36:42,082:INFO:Checking exceptions
2023-10-13 12:36:42,082:INFO:Preloading libraries
2023-10-13 12:36:42,083:INFO:Set up data.
2023-10-13 12:36:42,100:INFO:Set up index.
2023-10-13 12:36:42,212:INFO:Initializing predict_model()
2023-10-13 12:36:42,212:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28badf6a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:36:42,212:INFO:Checking exceptions
2023-10-13 12:36:42,212:INFO:Preloading libraries
2023-10-13 12:36:42,212:INFO:Set up data.
2023-10-13 12:36:42,219:INFO:Set up index.
2023-10-13 12:36:42,278:INFO:Initializing predict_model()
2023-10-13 12:36:42,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b6847c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:36:42,278:INFO:Checking exceptions
2023-10-13 12:36:42,278:INFO:Preloading libraries
2023-10-13 12:36:42,278:INFO:Set up data.
2023-10-13 12:36:42,284:INFO:Set up index.
2023-10-13 12:36:42,343:INFO:Initializing predict_model()
2023-10-13 12:36:42,343:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b6847c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:36:42,343:INFO:Checking exceptions
2023-10-13 12:36:42,343:INFO:Preloading libraries
2023-10-13 12:36:42,343:INFO:Set up data.
2023-10-13 12:36:42,349:INFO:Set up index.
2023-10-13 12:36:42,407:INFO:Initializing predict_model()
2023-10-13 12:36:42,407:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b6847c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256943a0>)
2023-10-13 12:36:42,407:INFO:Checking exceptions
2023-10-13 12:36:42,407:INFO:Preloading libraries
2023-10-13 12:36:42,407:INFO:Set up data.
2023-10-13 12:36:42,414:INFO:Set up index.
2023-10-13 12:36:51,007:INFO:Initializing predict_model()
2023-10-13 12:36:51,008:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b596f80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:36:51,008:INFO:Checking exceptions
2023-10-13 12:36:51,008:INFO:Preloading libraries
2023-10-13 12:36:51,009:INFO:Set up data.
2023-10-13 12:36:51,018:INFO:Set up index.
2023-10-13 12:36:51,136:INFO:Initializing predict_model()
2023-10-13 12:36:51,136:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3545b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:36:51,136:INFO:Checking exceptions
2023-10-13 12:36:51,136:INFO:Preloading libraries
2023-10-13 12:36:51,136:INFO:Set up data.
2023-10-13 12:36:51,142:INFO:Set up index.
2023-10-13 12:36:51,199:INFO:Initializing predict_model()
2023-10-13 12:36:51,199:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3545b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:36:51,199:INFO:Checking exceptions
2023-10-13 12:36:51,199:INFO:Preloading libraries
2023-10-13 12:36:51,200:INFO:Set up data.
2023-10-13 12:36:51,206:INFO:Set up index.
2023-10-13 12:36:51,263:INFO:Initializing predict_model()
2023-10-13 12:36:51,263:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3545b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:36:51,263:INFO:Checking exceptions
2023-10-13 12:36:51,263:INFO:Preloading libraries
2023-10-13 12:36:51,263:INFO:Set up data.
2023-10-13 12:36:51,269:INFO:Set up index.
2023-10-13 12:36:51,326:INFO:Initializing predict_model()
2023-10-13 12:36:51,326:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b3545b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:36:51,326:INFO:Checking exceptions
2023-10-13 12:36:51,326:INFO:Preloading libraries
2023-10-13 12:36:51,326:INFO:Set up data.
2023-10-13 12:36:51,332:INFO:Set up index.
2023-10-13 12:36:59,877:INFO:Initializing predict_model()
2023-10-13 12:36:59,877:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb17b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:36:59,877:INFO:Checking exceptions
2023-10-13 12:36:59,877:INFO:Preloading libraries
2023-10-13 12:36:59,877:INFO:Set up data.
2023-10-13 12:36:59,887:INFO:Set up index.
2023-10-13 12:36:59,960:INFO:Initializing predict_model()
2023-10-13 12:36:59,960:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:36:59,960:INFO:Checking exceptions
2023-10-13 12:36:59,960:INFO:Preloading libraries
2023-10-13 12:36:59,960:INFO:Set up data.
2023-10-13 12:36:59,966:INFO:Set up index.
2023-10-13 12:37:00,027:INFO:Initializing predict_model()
2023-10-13 12:37:00,027:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:37:00,027:INFO:Checking exceptions
2023-10-13 12:37:00,027:INFO:Preloading libraries
2023-10-13 12:37:00,027:INFO:Set up data.
2023-10-13 12:37:00,033:INFO:Set up index.
2023-10-13 12:37:00,090:INFO:Initializing predict_model()
2023-10-13 12:37:00,090:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b6854e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:37:00,090:INFO:Checking exceptions
2023-10-13 12:37:00,090:INFO:Preloading libraries
2023-10-13 12:37:00,090:INFO:Set up data.
2023-10-13 12:37:00,096:INFO:Set up index.
2023-10-13 12:37:00,160:INFO:Initializing predict_model()
2023-10-13 12:37:00,160:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b6854e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:37:00,160:INFO:Checking exceptions
2023-10-13 12:37:00,160:INFO:Preloading libraries
2023-10-13 12:37:00,160:INFO:Set up data.
2023-10-13 12:37:00,166:INFO:Set up index.
2023-10-13 12:37:08,728:INFO:Initializing predict_model()
2023-10-13 12:37:08,729:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc20f40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 12:37:08,729:INFO:Checking exceptions
2023-10-13 12:37:08,729:INFO:Preloading libraries
2023-10-13 12:37:08,730:INFO:Set up data.
2023-10-13 12:37:08,749:INFO:Set up index.
2023-10-13 12:37:08,870:INFO:Initializing predict_model()
2023-10-13 12:37:08,871:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 12:37:08,871:INFO:Checking exceptions
2023-10-13 12:37:08,871:INFO:Preloading libraries
2023-10-13 12:37:08,871:INFO:Set up data.
2023-10-13 12:37:08,877:INFO:Set up index.
2023-10-13 12:37:08,939:INFO:Initializing predict_model()
2023-10-13 12:37:08,939:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 12:37:08,939:INFO:Checking exceptions
2023-10-13 12:37:08,939:INFO:Preloading libraries
2023-10-13 12:37:08,939:INFO:Set up data.
2023-10-13 12:37:08,946:INFO:Set up index.
2023-10-13 12:37:09,007:INFO:Initializing predict_model()
2023-10-13 12:37:09,007:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 12:37:09,007:INFO:Checking exceptions
2023-10-13 12:37:09,007:INFO:Preloading libraries
2023-10-13 12:37:09,007:INFO:Set up data.
2023-10-13 12:37:09,013:INFO:Set up index.
2023-10-13 12:37:09,073:INFO:Initializing predict_model()
2023-10-13 12:37:09,073:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 12:37:09,073:INFO:Checking exceptions
2023-10-13 12:37:09,073:INFO:Preloading libraries
2023-10-13 12:37:09,073:INFO:Set up data.
2023-10-13 12:37:09,079:INFO:Set up index.
2023-10-13 12:37:17,677:INFO:Initializing predict_model()
2023-10-13 12:37:17,682:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb83400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 12:37:17,682:INFO:Checking exceptions
2023-10-13 12:37:17,682:INFO:Preloading libraries
2023-10-13 12:37:17,688:INFO:Set up data.
2023-10-13 12:37:17,700:INFO:Set up index.
2023-10-13 12:37:17,812:INFO:Initializing predict_model()
2023-10-13 12:37:17,812:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 12:37:17,812:INFO:Checking exceptions
2023-10-13 12:37:17,812:INFO:Preloading libraries
2023-10-13 12:37:17,812:INFO:Set up data.
2023-10-13 12:37:17,818:INFO:Set up index.
2023-10-13 12:37:17,879:INFO:Initializing predict_model()
2023-10-13 12:37:17,879:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 12:37:17,879:INFO:Checking exceptions
2023-10-13 12:37:17,879:INFO:Preloading libraries
2023-10-13 12:37:17,880:INFO:Set up data.
2023-10-13 12:37:17,886:INFO:Set up index.
2023-10-13 12:37:17,944:INFO:Initializing predict_model()
2023-10-13 12:37:17,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 12:37:17,944:INFO:Checking exceptions
2023-10-13 12:37:17,944:INFO:Preloading libraries
2023-10-13 12:37:17,944:INFO:Set up data.
2023-10-13 12:37:17,950:INFO:Set up index.
2023-10-13 12:37:18,008:INFO:Initializing predict_model()
2023-10-13 12:37:18,008:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 12:37:18,008:INFO:Checking exceptions
2023-10-13 12:37:18,008:INFO:Preloading libraries
2023-10-13 12:37:18,008:INFO:Set up data.
2023-10-13 12:37:18,014:INFO:Set up index.
2023-10-13 12:37:26,571:INFO:Initializing predict_model()
2023-10-13 12:37:26,572:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9ad060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:37:26,572:INFO:Checking exceptions
2023-10-13 12:37:26,572:INFO:Preloading libraries
2023-10-13 12:37:26,572:INFO:Set up data.
2023-10-13 12:37:26,582:INFO:Set up index.
2023-10-13 12:37:26,663:INFO:Initializing predict_model()
2023-10-13 12:37:26,663:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28badffa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:37:26,663:INFO:Checking exceptions
2023-10-13 12:37:26,663:INFO:Preloading libraries
2023-10-13 12:37:26,663:INFO:Set up data.
2023-10-13 12:37:26,670:INFO:Set up index.
2023-10-13 12:37:26,728:INFO:Initializing predict_model()
2023-10-13 12:37:26,728:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9adbd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:37:26,728:INFO:Checking exceptions
2023-10-13 12:37:26,728:INFO:Preloading libraries
2023-10-13 12:37:26,728:INFO:Set up data.
2023-10-13 12:37:26,734:INFO:Set up index.
2023-10-13 12:37:26,792:INFO:Initializing predict_model()
2023-10-13 12:37:26,792:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba812a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:37:26,792:INFO:Checking exceptions
2023-10-13 12:37:26,792:INFO:Preloading libraries
2023-10-13 12:37:26,792:INFO:Set up data.
2023-10-13 12:37:26,798:INFO:Set up index.
2023-10-13 12:37:26,861:INFO:Initializing predict_model()
2023-10-13 12:37:26,861:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb4b010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:37:26,861:INFO:Checking exceptions
2023-10-13 12:37:26,861:INFO:Preloading libraries
2023-10-13 12:37:26,861:INFO:Set up data.
2023-10-13 12:37:26,868:INFO:Set up index.
2023-10-13 12:37:35,431:INFO:Initializing predict_model()
2023-10-13 12:37:35,432:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc22aa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b739510>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1480d0>)
2023-10-13 12:37:35,432:INFO:Checking exceptions
2023-10-13 12:37:35,432:INFO:Preloading libraries
2023-10-13 12:37:35,432:INFO:Set up data.
2023-10-13 12:37:35,442:INFO:Set up index.
2023-10-13 12:37:35,512:INFO:Initializing predict_model()
2023-10-13 12:37:35,512:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb16ad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1480d0>)
2023-10-13 12:37:35,512:INFO:Checking exceptions
2023-10-13 12:37:35,512:INFO:Preloading libraries
2023-10-13 12:37:35,512:INFO:Set up data.
2023-10-13 12:37:35,518:INFO:Set up index.
2023-10-13 12:37:35,576:INFO:Initializing predict_model()
2023-10-13 12:37:35,576:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba83e50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1480d0>)
2023-10-13 12:37:35,576:INFO:Checking exceptions
2023-10-13 12:37:35,576:INFO:Preloading libraries
2023-10-13 12:37:35,577:INFO:Set up data.
2023-10-13 12:37:35,582:INFO:Set up index.
2023-10-13 12:37:35,640:INFO:Initializing predict_model()
2023-10-13 12:37:35,640:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba830d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:37:35,640:INFO:Checking exceptions
2023-10-13 12:37:35,640:INFO:Preloading libraries
2023-10-13 12:37:35,640:INFO:Set up data.
2023-10-13 12:37:35,646:INFO:Set up index.
2023-10-13 12:37:35,703:INFO:Initializing predict_model()
2023-10-13 12:37:35,703:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb48820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb4b550>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:37:35,703:INFO:Checking exceptions
2023-10-13 12:37:35,703:INFO:Preloading libraries
2023-10-13 12:37:35,703:INFO:Set up data.
2023-10-13 12:37:35,709:INFO:Set up index.
2023-10-13 12:39:25,079:INFO:Initializing load_model()
2023-10-13 12:39:25,079:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:25,082:INFO:Initializing load_model()
2023-10-13 12:39:25,082:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:25,086:INFO:Initializing load_model()
2023-10-13 12:39:25,086:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:25,088:INFO:Initializing load_model()
2023-10-13 12:39:25,088:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:25,091:INFO:Initializing load_model()
2023-10-13 12:39:25,091:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:25,102:INFO:Initializing predict_model()
2023-10-13 12:39:25,102:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba83250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9ae380>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:39:25,103:INFO:Checking exceptions
2023-10-13 12:39:25,103:INFO:Preloading libraries
2023-10-13 12:39:25,103:INFO:Set up data.
2023-10-13 12:39:25,111:INFO:Set up index.
2023-10-13 12:39:25,222:INFO:Initializing predict_model()
2023-10-13 12:39:25,222:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba83250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:39:25,222:INFO:Checking exceptions
2023-10-13 12:39:25,222:INFO:Preloading libraries
2023-10-13 12:39:25,222:INFO:Set up data.
2023-10-13 12:39:25,229:INFO:Set up index.
2023-10-13 12:39:25,290:INFO:Initializing predict_model()
2023-10-13 12:39:25,290:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba83250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:39:25,291:INFO:Checking exceptions
2023-10-13 12:39:25,291:INFO:Preloading libraries
2023-10-13 12:39:25,291:INFO:Set up data.
2023-10-13 12:39:25,297:INFO:Set up index.
2023-10-13 12:39:25,359:INFO:Initializing predict_model()
2023-10-13 12:39:25,359:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba83250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:39:25,359:INFO:Checking exceptions
2023-10-13 12:39:25,359:INFO:Preloading libraries
2023-10-13 12:39:25,360:INFO:Set up data.
2023-10-13 12:39:25,366:INFO:Set up index.
2023-10-13 12:39:25,427:INFO:Initializing predict_model()
2023-10-13 12:39:25,427:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba83250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89cc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:39:25,427:INFO:Checking exceptions
2023-10-13 12:39:25,427:INFO:Preloading libraries
2023-10-13 12:39:25,427:INFO:Set up data.
2023-10-13 12:39:25,434:INFO:Set up index.
2023-10-13 12:39:33,935:INFO:Initializing predict_model()
2023-10-13 12:39:33,936:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb81720>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9ae380>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 12:39:33,936:INFO:Checking exceptions
2023-10-13 12:39:33,937:INFO:Preloading libraries
2023-10-13 12:39:33,939:INFO:Set up data.
2023-10-13 12:39:33,966:INFO:Set up index.
2023-10-13 12:39:34,044:INFO:Initializing predict_model()
2023-10-13 12:39:34,044:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 12:39:34,044:INFO:Checking exceptions
2023-10-13 12:39:34,044:INFO:Preloading libraries
2023-10-13 12:39:34,044:INFO:Set up data.
2023-10-13 12:39:34,050:INFO:Set up index.
2023-10-13 12:39:34,108:INFO:Initializing predict_model()
2023-10-13 12:39:34,108:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148670>)
2023-10-13 12:39:34,108:INFO:Checking exceptions
2023-10-13 12:39:34,108:INFO:Preloading libraries
2023-10-13 12:39:34,108:INFO:Set up data.
2023-10-13 12:39:34,114:INFO:Set up index.
2023-10-13 12:39:34,172:INFO:Initializing predict_model()
2023-10-13 12:39:34,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:39:34,172:INFO:Checking exceptions
2023-10-13 12:39:34,172:INFO:Preloading libraries
2023-10-13 12:39:34,172:INFO:Set up data.
2023-10-13 12:39:34,178:INFO:Set up index.
2023-10-13 12:39:34,235:INFO:Initializing predict_model()
2023-10-13 12:39:34,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b787df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89cc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:39:34,236:INFO:Checking exceptions
2023-10-13 12:39:34,236:INFO:Preloading libraries
2023-10-13 12:39:34,236:INFO:Set up data.
2023-10-13 12:39:34,241:INFO:Set up index.
2023-10-13 12:39:42,780:INFO:Initializing predict_model()
2023-10-13 12:39:42,782:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb82d70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9ae380>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:39:42,782:INFO:Checking exceptions
2023-10-13 12:39:42,782:INFO:Preloading libraries
2023-10-13 12:39:42,783:INFO:Set up data.
2023-10-13 12:39:42,811:INFO:Set up index.
2023-10-13 12:39:42,978:INFO:Initializing predict_model()
2023-10-13 12:39:42,978:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b7868c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:39:42,978:INFO:Checking exceptions
2023-10-13 12:39:42,978:INFO:Preloading libraries
2023-10-13 12:39:42,978:INFO:Set up data.
2023-10-13 12:39:42,985:INFO:Set up index.
2023-10-13 12:39:43,080:INFO:Initializing predict_model()
2023-10-13 12:39:43,080:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b7868c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:39:43,080:INFO:Checking exceptions
2023-10-13 12:39:43,080:INFO:Preloading libraries
2023-10-13 12:39:43,081:INFO:Set up data.
2023-10-13 12:39:43,087:INFO:Set up index.
2023-10-13 12:39:43,148:INFO:Initializing predict_model()
2023-10-13 12:39:43,148:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b7868c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:39:43,148:INFO:Checking exceptions
2023-10-13 12:39:43,148:INFO:Preloading libraries
2023-10-13 12:39:43,149:INFO:Set up data.
2023-10-13 12:39:43,155:INFO:Set up index.
2023-10-13 12:39:43,215:INFO:Initializing predict_model()
2023-10-13 12:39:43,216:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb49360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b89cc10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:39:43,216:INFO:Checking exceptions
2023-10-13 12:39:43,216:INFO:Preloading libraries
2023-10-13 12:39:43,216:INFO:Set up data.
2023-10-13 12:39:43,223:INFO:Set up index.
2023-10-13 12:39:43,418:INFO:Initializing load_model()
2023-10-13 12:39:43,418:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:43,421:INFO:Initializing load_model()
2023-10-13 12:39:43,421:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:43,423:INFO:Initializing load_model()
2023-10-13 12:39:43,423:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:43,425:INFO:Initializing load_model()
2023-10-13 12:39:43,425:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:43,426:INFO:Initializing load_model()
2023-10-13 12:39:43,426:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:45,361:INFO:Initializing load_model()
2023-10-13 12:39:45,361:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:45,364:INFO:Initializing load_model()
2023-10-13 12:39:45,364:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:45,366:INFO:Initializing load_model()
2023-10-13 12:39:45,366:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:45,368:INFO:Initializing load_model()
2023-10-13 12:39:45,368:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:45,371:INFO:Initializing load_model()
2023-10-13 12:39:45,371:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:39:45,386:INFO:Initializing predict_model()
2023-10-13 12:39:45,386:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb825f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:39:45,386:INFO:Checking exceptions
2023-10-13 12:39:45,386:INFO:Preloading libraries
2023-10-13 12:39:45,387:INFO:Set up data.
2023-10-13 12:39:45,393:INFO:Set up index.
2023-10-13 12:39:45,464:INFO:Initializing predict_model()
2023-10-13 12:39:45,464:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:39:45,464:INFO:Checking exceptions
2023-10-13 12:39:45,464:INFO:Preloading libraries
2023-10-13 12:39:45,464:INFO:Set up data.
2023-10-13 12:39:45,471:INFO:Set up index.
2023-10-13 12:39:45,540:INFO:Initializing predict_model()
2023-10-13 12:39:45,541:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:39:45,541:INFO:Checking exceptions
2023-10-13 12:39:45,541:INFO:Preloading libraries
2023-10-13 12:39:45,541:INFO:Set up data.
2023-10-13 12:39:45,547:INFO:Set up index.
2023-10-13 12:39:45,606:INFO:Initializing predict_model()
2023-10-13 12:39:45,606:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:39:45,606:INFO:Checking exceptions
2023-10-13 12:39:45,606:INFO:Preloading libraries
2023-10-13 12:39:45,606:INFO:Set up data.
2023-10-13 12:39:45,612:INFO:Set up index.
2023-10-13 12:39:45,671:INFO:Initializing predict_model()
2023-10-13 12:39:45,671:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:39:45,671:INFO:Checking exceptions
2023-10-13 12:39:45,671:INFO:Preloading libraries
2023-10-13 12:39:45,671:INFO:Set up data.
2023-10-13 12:39:45,678:INFO:Set up index.
2023-10-13 12:39:54,191:INFO:Initializing predict_model()
2023-10-13 12:39:54,192:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd033a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148dc0>)
2023-10-13 12:39:54,192:INFO:Checking exceptions
2023-10-13 12:39:54,192:INFO:Preloading libraries
2023-10-13 12:39:54,194:INFO:Set up data.
2023-10-13 12:39:54,218:INFO:Set up index.
2023-10-13 12:39:54,328:INFO:Initializing predict_model()
2023-10-13 12:39:54,328:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148dc0>)
2023-10-13 12:39:54,328:INFO:Checking exceptions
2023-10-13 12:39:54,328:INFO:Preloading libraries
2023-10-13 12:39:54,328:INFO:Set up data.
2023-10-13 12:39:54,334:INFO:Set up index.
2023-10-13 12:39:54,393:INFO:Initializing predict_model()
2023-10-13 12:39:54,393:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148dc0>)
2023-10-13 12:39:54,393:INFO:Checking exceptions
2023-10-13 12:39:54,393:INFO:Preloading libraries
2023-10-13 12:39:54,393:INFO:Set up data.
2023-10-13 12:39:54,399:INFO:Set up index.
2023-10-13 12:39:54,457:INFO:Initializing predict_model()
2023-10-13 12:39:54,457:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:39:54,457:INFO:Checking exceptions
2023-10-13 12:39:54,457:INFO:Preloading libraries
2023-10-13 12:39:54,457:INFO:Set up data.
2023-10-13 12:39:54,463:INFO:Set up index.
2023-10-13 12:39:54,521:INFO:Initializing predict_model()
2023-10-13 12:39:54,521:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:39:54,521:INFO:Checking exceptions
2023-10-13 12:39:54,521:INFO:Preloading libraries
2023-10-13 12:39:54,521:INFO:Set up data.
2023-10-13 12:39:54,527:INFO:Set up index.
2023-10-13 12:40:03,066:INFO:Initializing predict_model()
2023-10-13 12:40:03,067:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd03f40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:40:03,067:INFO:Checking exceptions
2023-10-13 12:40:03,067:INFO:Preloading libraries
2023-10-13 12:40:03,068:INFO:Set up data.
2023-10-13 12:40:03,090:INFO:Set up index.
2023-10-13 12:40:03,165:INFO:Initializing predict_model()
2023-10-13 12:40:03,165:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:40:03,165:INFO:Checking exceptions
2023-10-13 12:40:03,165:INFO:Preloading libraries
2023-10-13 12:40:03,165:INFO:Set up data.
2023-10-13 12:40:03,171:INFO:Set up index.
2023-10-13 12:40:03,230:INFO:Initializing predict_model()
2023-10-13 12:40:03,230:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:40:03,230:INFO:Checking exceptions
2023-10-13 12:40:03,230:INFO:Preloading libraries
2023-10-13 12:40:03,230:INFO:Set up data.
2023-10-13 12:40:03,236:INFO:Set up index.
2023-10-13 12:40:03,295:INFO:Initializing predict_model()
2023-10-13 12:40:03,295:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:40:03,295:INFO:Checking exceptions
2023-10-13 12:40:03,295:INFO:Preloading libraries
2023-10-13 12:40:03,295:INFO:Set up data.
2023-10-13 12:40:03,301:INFO:Set up index.
2023-10-13 12:40:03,359:INFO:Initializing predict_model()
2023-10-13 12:40:03,359:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:40:03,359:INFO:Checking exceptions
2023-10-13 12:40:03,359:INFO:Preloading libraries
2023-10-13 12:40:03,359:INFO:Set up data.
2023-10-13 12:40:03,365:INFO:Set up index.
2023-10-13 12:40:11,851:INFO:Initializing predict_model()
2023-10-13 12:40:11,852:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb173d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149e10>)
2023-10-13 12:40:11,852:INFO:Checking exceptions
2023-10-13 12:40:11,852:INFO:Preloading libraries
2023-10-13 12:40:11,854:INFO:Set up data.
2023-10-13 12:40:11,880:INFO:Set up index.
2023-10-13 12:40:12,000:INFO:Initializing predict_model()
2023-10-13 12:40:12,000:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb173d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149e10>)
2023-10-13 12:40:12,001:INFO:Checking exceptions
2023-10-13 12:40:12,001:INFO:Preloading libraries
2023-10-13 12:40:12,001:INFO:Set up data.
2023-10-13 12:40:12,007:INFO:Set up index.
2023-10-13 12:40:12,066:INFO:Initializing predict_model()
2023-10-13 12:40:12,067:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb178b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149e10>)
2023-10-13 12:40:12,067:INFO:Checking exceptions
2023-10-13 12:40:12,067:INFO:Preloading libraries
2023-10-13 12:40:12,067:INFO:Set up data.
2023-10-13 12:40:12,073:INFO:Set up index.
2023-10-13 12:40:12,132:INFO:Initializing predict_model()
2023-10-13 12:40:12,132:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb178b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149e10>)
2023-10-13 12:40:12,132:INFO:Checking exceptions
2023-10-13 12:40:12,132:INFO:Preloading libraries
2023-10-13 12:40:12,132:INFO:Set up data.
2023-10-13 12:40:12,138:INFO:Set up index.
2023-10-13 12:40:12,247:INFO:Initializing predict_model()
2023-10-13 12:40:12,247:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb17760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149e10>)
2023-10-13 12:40:12,247:INFO:Checking exceptions
2023-10-13 12:40:12,247:INFO:Preloading libraries
2023-10-13 12:40:12,248:INFO:Set up data.
2023-10-13 12:40:12,269:INFO:Set up index.
2023-10-13 12:40:20,866:INFO:Initializing predict_model()
2023-10-13 12:40:20,868:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc20c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b2e0>)
2023-10-13 12:40:20,868:INFO:Checking exceptions
2023-10-13 12:40:20,868:INFO:Preloading libraries
2023-10-13 12:40:20,870:INFO:Set up data.
2023-10-13 12:40:20,898:INFO:Set up index.
2023-10-13 12:40:21,053:INFO:Initializing predict_model()
2023-10-13 12:40:21,054:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb17550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b2e0>)
2023-10-13 12:40:21,054:INFO:Checking exceptions
2023-10-13 12:40:21,054:INFO:Preloading libraries
2023-10-13 12:40:21,054:INFO:Set up data.
2023-10-13 12:40:21,063:INFO:Set up index.
2023-10-13 12:40:21,134:INFO:Initializing predict_model()
2023-10-13 12:40:21,134:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb17550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b2e0>)
2023-10-13 12:40:21,134:INFO:Checking exceptions
2023-10-13 12:40:21,134:INFO:Preloading libraries
2023-10-13 12:40:21,134:INFO:Set up data.
2023-10-13 12:40:21,140:INFO:Set up index.
2023-10-13 12:40:21,199:INFO:Initializing predict_model()
2023-10-13 12:40:21,199:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb17550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:40:21,199:INFO:Checking exceptions
2023-10-13 12:40:21,199:INFO:Preloading libraries
2023-10-13 12:40:21,199:INFO:Set up data.
2023-10-13 12:40:21,205:INFO:Set up index.
2023-10-13 12:40:21,266:INFO:Initializing predict_model()
2023-10-13 12:40:21,266:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb17550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 12:40:21,266:INFO:Checking exceptions
2023-10-13 12:40:21,266:INFO:Preloading libraries
2023-10-13 12:40:21,266:INFO:Set up data.
2023-10-13 12:40:21,272:INFO:Set up index.
2023-10-13 12:40:29,834:INFO:Initializing predict_model()
2023-10-13 12:40:29,835:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94b490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:40:29,835:INFO:Checking exceptions
2023-10-13 12:40:29,836:INFO:Preloading libraries
2023-10-13 12:40:29,837:INFO:Set up data.
2023-10-13 12:40:29,861:INFO:Set up index.
2023-10-13 12:40:29,992:INFO:Initializing predict_model()
2023-10-13 12:40:29,992:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba81960>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:40:29,992:INFO:Checking exceptions
2023-10-13 12:40:29,992:INFO:Preloading libraries
2023-10-13 12:40:29,992:INFO:Set up data.
2023-10-13 12:40:29,999:INFO:Set up index.
2023-10-13 12:40:30,063:INFO:Initializing predict_model()
2023-10-13 12:40:30,063:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:40:30,063:INFO:Checking exceptions
2023-10-13 12:40:30,063:INFO:Preloading libraries
2023-10-13 12:40:30,063:INFO:Set up data.
2023-10-13 12:40:30,069:INFO:Set up index.
2023-10-13 12:40:30,128:INFO:Initializing predict_model()
2023-10-13 12:40:30,129:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:40:30,129:INFO:Checking exceptions
2023-10-13 12:40:30,129:INFO:Preloading libraries
2023-10-13 12:40:30,129:INFO:Set up data.
2023-10-13 12:40:30,135:INFO:Set up index.
2023-10-13 12:40:30,194:INFO:Initializing predict_model()
2023-10-13 12:40:30,194:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b354580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:40:30,194:INFO:Checking exceptions
2023-10-13 12:40:30,194:INFO:Preloading libraries
2023-10-13 12:40:30,194:INFO:Set up data.
2023-10-13 12:40:30,200:INFO:Set up index.
2023-10-13 12:40:38,725:INFO:Initializing predict_model()
2023-10-13 12:40:38,725:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94b5e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:40:38,725:INFO:Checking exceptions
2023-10-13 12:40:38,726:INFO:Preloading libraries
2023-10-13 12:40:38,727:INFO:Set up data.
2023-10-13 12:40:38,753:INFO:Set up index.
2023-10-13 12:40:38,917:INFO:Initializing predict_model()
2023-10-13 12:40:38,917:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:40:38,917:INFO:Checking exceptions
2023-10-13 12:40:38,917:INFO:Preloading libraries
2023-10-13 12:40:38,917:INFO:Set up data.
2023-10-13 12:40:38,924:INFO:Set up index.
2023-10-13 12:40:39,000:INFO:Initializing predict_model()
2023-10-13 12:40:39,001:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:40:39,001:INFO:Checking exceptions
2023-10-13 12:40:39,001:INFO:Preloading libraries
2023-10-13 12:40:39,001:INFO:Set up data.
2023-10-13 12:40:39,010:INFO:Set up index.
2023-10-13 12:40:39,073:INFO:Initializing predict_model()
2023-10-13 12:40:39,073:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:40:39,073:INFO:Checking exceptions
2023-10-13 12:40:39,073:INFO:Preloading libraries
2023-10-13 12:40:39,073:INFO:Set up data.
2023-10-13 12:40:39,079:INFO:Set up index.
2023-10-13 12:40:39,153:INFO:Initializing predict_model()
2023-10-13 12:40:39,153:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b594640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:40:39,153:INFO:Checking exceptions
2023-10-13 12:40:39,153:INFO:Preloading libraries
2023-10-13 12:40:39,153:INFO:Set up data.
2023-10-13 12:40:39,161:INFO:Set up index.
2023-10-13 12:40:47,688:INFO:Initializing predict_model()
2023-10-13 12:40:47,689:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd004c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149120>)
2023-10-13 12:40:47,690:INFO:Checking exceptions
2023-10-13 12:40:47,690:INFO:Preloading libraries
2023-10-13 12:40:47,691:INFO:Set up data.
2023-10-13 12:40:47,716:INFO:Set up index.
2023-10-13 12:40:47,855:INFO:Initializing predict_model()
2023-10-13 12:40:47,855:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b949420>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149120>)
2023-10-13 12:40:47,855:INFO:Checking exceptions
2023-10-13 12:40:47,855:INFO:Preloading libraries
2023-10-13 12:40:47,855:INFO:Set up data.
2023-10-13 12:40:47,861:INFO:Set up index.
2023-10-13 12:40:47,920:INFO:Initializing predict_model()
2023-10-13 12:40:47,920:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc221a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:40:47,920:INFO:Checking exceptions
2023-10-13 12:40:47,920:INFO:Preloading libraries
2023-10-13 12:40:47,920:INFO:Set up data.
2023-10-13 12:40:47,927:INFO:Set up index.
2023-10-13 12:40:47,987:INFO:Initializing predict_model()
2023-10-13 12:40:47,987:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94ab60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:40:47,987:INFO:Checking exceptions
2023-10-13 12:40:47,987:INFO:Preloading libraries
2023-10-13 12:40:47,988:INFO:Set up data.
2023-10-13 12:40:47,993:INFO:Set up index.
2023-10-13 12:40:48,054:INFO:Initializing predict_model()
2023-10-13 12:40:48,054:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb150f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125a56170>)
2023-10-13 12:40:48,054:INFO:Checking exceptions
2023-10-13 12:40:48,054:INFO:Preloading libraries
2023-10-13 12:40:48,054:INFO:Set up data.
2023-10-13 12:40:48,060:INFO:Set up index.
2023-10-13 12:40:56,603:INFO:Initializing predict_model()
2023-10-13 12:40:56,605:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb827d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149900>)
2023-10-13 12:40:56,605:INFO:Checking exceptions
2023-10-13 12:40:56,605:INFO:Preloading libraries
2023-10-13 12:40:56,606:INFO:Set up data.
2023-10-13 12:40:56,630:INFO:Set up index.
2023-10-13 12:40:56,764:INFO:Initializing predict_model()
2023-10-13 12:40:56,764:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9aec20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:40:56,764:INFO:Checking exceptions
2023-10-13 12:40:56,764:INFO:Preloading libraries
2023-10-13 12:40:56,765:INFO:Set up data.
2023-10-13 12:40:56,771:INFO:Set up index.
2023-10-13 12:40:56,830:INFO:Initializing predict_model()
2023-10-13 12:40:56,830:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9ac6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:40:56,830:INFO:Checking exceptions
2023-10-13 12:40:56,830:INFO:Preloading libraries
2023-10-13 12:40:56,830:INFO:Set up data.
2023-10-13 12:40:56,836:INFO:Set up index.
2023-10-13 12:40:56,896:INFO:Initializing predict_model()
2023-10-13 12:40:56,896:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9ac6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:40:56,896:INFO:Checking exceptions
2023-10-13 12:40:56,896:INFO:Preloading libraries
2023-10-13 12:40:56,896:INFO:Set up data.
2023-10-13 12:40:56,902:INFO:Set up index.
2023-10-13 12:40:56,967:INFO:Initializing predict_model()
2023-10-13 12:40:56,967:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9ac6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:40:56,967:INFO:Checking exceptions
2023-10-13 12:40:56,967:INFO:Preloading libraries
2023-10-13 12:40:56,967:INFO:Set up data.
2023-10-13 12:40:56,973:INFO:Set up index.
2023-10-13 12:41:05,514:INFO:Initializing predict_model()
2023-10-13 12:41:05,520:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb83760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28badcaf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149120>)
2023-10-13 12:41:05,520:INFO:Checking exceptions
2023-10-13 12:41:05,520:INFO:Preloading libraries
2023-10-13 12:41:05,522:INFO:Set up data.
2023-10-13 12:41:05,564:INFO:Set up index.
2023-10-13 12:41:05,757:INFO:Initializing predict_model()
2023-10-13 12:41:05,757:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94ab60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:41:05,757:INFO:Checking exceptions
2023-10-13 12:41:05,757:INFO:Preloading libraries
2023-10-13 12:41:05,758:INFO:Set up data.
2023-10-13 12:41:05,764:INFO:Set up index.
2023-10-13 12:41:05,828:INFO:Initializing predict_model()
2023-10-13 12:41:05,829:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94ab60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:41:05,829:INFO:Checking exceptions
2023-10-13 12:41:05,829:INFO:Preloading libraries
2023-10-13 12:41:05,829:INFO:Set up data.
2023-10-13 12:41:05,835:INFO:Set up index.
2023-10-13 12:41:05,899:INFO:Initializing predict_model()
2023-10-13 12:41:05,899:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94bdf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:41:05,899:INFO:Checking exceptions
2023-10-13 12:41:05,899:INFO:Preloading libraries
2023-10-13 12:41:05,899:INFO:Set up data.
2023-10-13 12:41:05,905:INFO:Set up index.
2023-10-13 12:41:05,974:INFO:Initializing predict_model()
2023-10-13 12:41:05,974:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94b370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28b9af760>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 12:41:05,974:INFO:Checking exceptions
2023-10-13 12:41:05,974:INFO:Preloading libraries
2023-10-13 12:41:05,975:INFO:Set up data.
2023-10-13 12:41:05,982:INFO:Set up index.
2023-10-13 12:43:13,045:INFO:Initializing load_model()
2023-10-13 12:43:13,046:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:13,050:INFO:Initializing load_model()
2023-10-13 12:43:13,050:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:13,053:INFO:Initializing load_model()
2023-10-13 12:43:13,053:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:13,055:INFO:Initializing load_model()
2023-10-13 12:43:13,055:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:13,056:INFO:Initializing load_model()
2023-10-13 12:43:13,056:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:13,065:INFO:Initializing predict_model()
2023-10-13 12:43:13,065:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b949000>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd01db0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149090>)
2023-10-13 12:43:13,065:INFO:Checking exceptions
2023-10-13 12:43:13,066:INFO:Preloading libraries
2023-10-13 12:43:13,066:INFO:Set up data.
2023-10-13 12:43:13,072:INFO:Set up index.
2023-10-13 12:43:13,163:INFO:Initializing predict_model()
2023-10-13 12:43:13,163:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb4baf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149090>)
2023-10-13 12:43:13,163:INFO:Checking exceptions
2023-10-13 12:43:13,163:INFO:Preloading libraries
2023-10-13 12:43:13,163:INFO:Set up data.
2023-10-13 12:43:13,172:INFO:Set up index.
2023-10-13 12:43:13,238:INFO:Initializing predict_model()
2023-10-13 12:43:13,238:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b949960>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 12:43:13,238:INFO:Checking exceptions
2023-10-13 12:43:13,238:INFO:Preloading libraries
2023-10-13 12:43:13,238:INFO:Set up data.
2023-10-13 12:43:13,244:INFO:Set up index.
2023-10-13 12:43:13,303:INFO:Initializing predict_model()
2023-10-13 12:43:13,304:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba82950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 12:43:13,304:INFO:Checking exceptions
2023-10-13 12:43:13,304:INFO:Preloading libraries
2023-10-13 12:43:13,304:INFO:Set up data.
2023-10-13 12:43:13,310:INFO:Set up index.
2023-10-13 12:43:13,370:INFO:Initializing predict_model()
2023-10-13 12:43:13,370:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba82950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb808b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e4fc790>)
2023-10-13 12:43:13,371:INFO:Checking exceptions
2023-10-13 12:43:13,371:INFO:Preloading libraries
2023-10-13 12:43:13,371:INFO:Set up data.
2023-10-13 12:43:13,377:INFO:Set up index.
2023-10-13 12:43:21,886:INFO:Initializing predict_model()
2023-10-13 12:43:21,888:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bed5d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd01db0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149900>)
2023-10-13 12:43:21,888:INFO:Checking exceptions
2023-10-13 12:43:21,889:INFO:Preloading libraries
2023-10-13 12:43:21,890:INFO:Set up data.
2023-10-13 12:43:21,914:INFO:Set up index.
2023-10-13 12:43:22,050:INFO:Initializing predict_model()
2023-10-13 12:43:22,050:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba82950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149900>)
2023-10-13 12:43:22,050:INFO:Checking exceptions
2023-10-13 12:43:22,051:INFO:Preloading libraries
2023-10-13 12:43:22,051:INFO:Set up data.
2023-10-13 12:43:22,057:INFO:Set up index.
2023-10-13 12:43:22,117:INFO:Initializing predict_model()
2023-10-13 12:43:22,117:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba82950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149900>)
2023-10-13 12:43:22,117:INFO:Checking exceptions
2023-10-13 12:43:22,117:INFO:Preloading libraries
2023-10-13 12:43:22,117:INFO:Set up data.
2023-10-13 12:43:22,123:INFO:Set up index.
2023-10-13 12:43:22,183:INFO:Initializing predict_model()
2023-10-13 12:43:22,183:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba82950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 12:43:22,183:INFO:Checking exceptions
2023-10-13 12:43:22,183:INFO:Preloading libraries
2023-10-13 12:43:22,183:INFO:Set up data.
2023-10-13 12:43:22,189:INFO:Set up index.
2023-10-13 12:43:22,249:INFO:Initializing predict_model()
2023-10-13 12:43:22,249:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28ba82950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb808b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170686e60>)
2023-10-13 12:43:22,249:INFO:Checking exceptions
2023-10-13 12:43:22,249:INFO:Preloading libraries
2023-10-13 12:43:22,249:INFO:Set up data.
2023-10-13 12:43:22,255:INFO:Set up index.
2023-10-13 12:43:30,841:INFO:Initializing predict_model()
2023-10-13 12:43:30,843:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd19ab0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd01db0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a4d0>)
2023-10-13 12:43:30,843:INFO:Checking exceptions
2023-10-13 12:43:30,843:INFO:Preloading libraries
2023-10-13 12:43:30,845:INFO:Set up data.
2023-10-13 12:43:30,870:INFO:Set up index.
2023-10-13 12:43:30,988:INFO:Initializing predict_model()
2023-10-13 12:43:30,988:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b89cc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a4d0>)
2023-10-13 12:43:30,988:INFO:Checking exceptions
2023-10-13 12:43:30,988:INFO:Preloading libraries
2023-10-13 12:43:30,988:INFO:Set up data.
2023-10-13 12:43:30,994:INFO:Set up index.
2023-10-13 12:43:31,055:INFO:Initializing predict_model()
2023-10-13 12:43:31,055:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b89cc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a4d0>)
2023-10-13 12:43:31,055:INFO:Checking exceptions
2023-10-13 12:43:31,055:INFO:Preloading libraries
2023-10-13 12:43:31,056:INFO:Set up data.
2023-10-13 12:43:31,061:INFO:Set up index.
2023-10-13 12:43:31,121:INFO:Initializing predict_model()
2023-10-13 12:43:31,121:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b89cc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a4d0>)
2023-10-13 12:43:31,121:INFO:Checking exceptions
2023-10-13 12:43:31,121:INFO:Preloading libraries
2023-10-13 12:43:31,121:INFO:Set up data.
2023-10-13 12:43:31,127:INFO:Set up index.
2023-10-13 12:43:31,187:INFO:Initializing predict_model()
2023-10-13 12:43:31,187:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b89d870>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bb808b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a4d0>)
2023-10-13 12:43:31,187:INFO:Checking exceptions
2023-10-13 12:43:31,187:INFO:Preloading libraries
2023-10-13 12:43:31,187:INFO:Set up data.
2023-10-13 12:43:31,193:INFO:Set up index.
2023-10-13 12:43:35,698:INFO:Initializing load_model()
2023-10-13 12:43:35,698:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:35,704:INFO:Initializing load_model()
2023-10-13 12:43:35,704:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:35,709:INFO:Initializing load_model()
2023-10-13 12:43:35,712:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:35,715:INFO:Initializing load_model()
2023-10-13 12:43:35,716:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:35,719:INFO:Initializing load_model()
2023-10-13 12:43:35,719:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:43:35,731:INFO:Initializing predict_model()
2023-10-13 12:43:35,731:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bcb74c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149f30>)
2023-10-13 12:43:35,731:INFO:Checking exceptions
2023-10-13 12:43:35,731:INFO:Preloading libraries
2023-10-13 12:43:35,732:INFO:Set up data.
2023-10-13 12:43:35,742:INFO:Set up index.
2023-10-13 12:43:35,864:INFO:Initializing predict_model()
2023-10-13 12:43:35,864:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94a500>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:43:35,864:INFO:Checking exceptions
2023-10-13 12:43:35,864:INFO:Preloading libraries
2023-10-13 12:43:35,864:INFO:Set up data.
2023-10-13 12:43:35,871:INFO:Set up index.
2023-10-13 12:43:35,935:INFO:Initializing predict_model()
2023-10-13 12:43:35,935:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94a500>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:43:35,935:INFO:Checking exceptions
2023-10-13 12:43:35,935:INFO:Preloading libraries
2023-10-13 12:43:35,935:INFO:Set up data.
2023-10-13 12:43:35,942:INFO:Set up index.
2023-10-13 12:43:36,004:INFO:Initializing predict_model()
2023-10-13 12:43:36,004:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94a500>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:43:36,005:INFO:Checking exceptions
2023-10-13 12:43:36,005:INFO:Preloading libraries
2023-10-13 12:43:36,005:INFO:Set up data.
2023-10-13 12:43:36,011:INFO:Set up index.
2023-10-13 12:43:36,081:INFO:Initializing predict_model()
2023-10-13 12:43:36,081:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94a500>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f8271c0>)
2023-10-13 12:43:36,081:INFO:Checking exceptions
2023-10-13 12:43:36,081:INFO:Preloading libraries
2023-10-13 12:43:36,081:INFO:Set up data.
2023-10-13 12:43:36,087:INFO:Set up index.
2023-10-13 12:43:44,595:INFO:Initializing predict_model()
2023-10-13 12:43:44,596:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc6e110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148430>)
2023-10-13 12:43:44,596:INFO:Checking exceptions
2023-10-13 12:43:44,597:INFO:Preloading libraries
2023-10-13 12:43:44,598:INFO:Set up data.
2023-10-13 12:43:44,623:INFO:Set up index.
2023-10-13 12:43:44,728:INFO:Initializing predict_model()
2023-10-13 12:43:44,728:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb48b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:43:44,729:INFO:Checking exceptions
2023-10-13 12:43:44,729:INFO:Preloading libraries
2023-10-13 12:43:44,729:INFO:Set up data.
2023-10-13 12:43:44,735:INFO:Set up index.
2023-10-13 12:43:44,794:INFO:Initializing predict_model()
2023-10-13 12:43:44,795:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb48b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:43:44,795:INFO:Checking exceptions
2023-10-13 12:43:44,795:INFO:Preloading libraries
2023-10-13 12:43:44,795:INFO:Set up data.
2023-10-13 12:43:44,801:INFO:Set up index.
2023-10-13 12:43:44,861:INFO:Initializing predict_model()
2023-10-13 12:43:44,861:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb48b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:43:44,861:INFO:Checking exceptions
2023-10-13 12:43:44,861:INFO:Preloading libraries
2023-10-13 12:43:44,861:INFO:Set up data.
2023-10-13 12:43:44,867:INFO:Set up index.
2023-10-13 12:43:44,926:INFO:Initializing predict_model()
2023-10-13 12:43:44,926:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb48b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:43:44,926:INFO:Checking exceptions
2023-10-13 12:43:44,926:INFO:Preloading libraries
2023-10-13 12:43:44,926:INFO:Set up data.
2023-10-13 12:43:44,932:INFO:Set up index.
2023-10-13 12:43:53,451:INFO:Initializing predict_model()
2023-10-13 12:43:53,452:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bcb4070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a320>)
2023-10-13 12:43:53,452:INFO:Checking exceptions
2023-10-13 12:43:53,452:INFO:Preloading libraries
2023-10-13 12:43:53,454:INFO:Set up data.
2023-10-13 12:43:53,475:INFO:Set up index.
2023-10-13 12:43:53,710:INFO:Initializing predict_model()
2023-10-13 12:43:53,710:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b7391e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14a320>)
2023-10-13 12:43:53,710:INFO:Checking exceptions
2023-10-13 12:43:53,710:INFO:Preloading libraries
2023-10-13 12:43:53,710:INFO:Set up data.
2023-10-13 12:43:53,723:INFO:Set up index.
2023-10-13 12:43:53,898:INFO:Initializing predict_model()
2023-10-13 12:43:53,898:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9af3a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:43:53,898:INFO:Checking exceptions
2023-10-13 12:43:53,898:INFO:Preloading libraries
2023-10-13 12:43:53,898:INFO:Set up data.
2023-10-13 12:43:53,911:INFO:Set up index.
2023-10-13 12:43:54,071:INFO:Initializing predict_model()
2023-10-13 12:43:54,071:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9af3a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:43:54,071:INFO:Checking exceptions
2023-10-13 12:43:54,071:INFO:Preloading libraries
2023-10-13 12:43:54,072:INFO:Set up data.
2023-10-13 12:43:54,083:INFO:Set up index.
2023-10-13 12:43:54,205:INFO:Initializing predict_model()
2023-10-13 12:43:54,205:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9af3a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:43:54,206:INFO:Checking exceptions
2023-10-13 12:43:54,206:INFO:Preloading libraries
2023-10-13 12:43:54,206:INFO:Set up data.
2023-10-13 12:43:54,215:INFO:Set up index.
2023-10-13 12:44:02,752:INFO:Initializing predict_model()
2023-10-13 12:44:02,754:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc6c580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b1c0>)
2023-10-13 12:44:02,754:INFO:Checking exceptions
2023-10-13 12:44:02,755:INFO:Preloading libraries
2023-10-13 12:44:02,756:INFO:Set up data.
2023-10-13 12:44:02,784:INFO:Set up index.
2023-10-13 12:44:02,910:INFO:Initializing predict_model()
2023-10-13 12:44:02,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94ab90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b1c0>)
2023-10-13 12:44:02,910:INFO:Checking exceptions
2023-10-13 12:44:02,910:INFO:Preloading libraries
2023-10-13 12:44:02,910:INFO:Set up data.
2023-10-13 12:44:02,917:INFO:Set up index.
2023-10-13 12:44:02,982:INFO:Initializing predict_model()
2023-10-13 12:44:02,982:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94ab90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b1c0>)
2023-10-13 12:44:02,982:INFO:Checking exceptions
2023-10-13 12:44:02,982:INFO:Preloading libraries
2023-10-13 12:44:02,982:INFO:Set up data.
2023-10-13 12:44:02,988:INFO:Set up index.
2023-10-13 12:44:03,052:INFO:Initializing predict_model()
2023-10-13 12:44:03,052:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73ac50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b1c0>)
2023-10-13 12:44:03,052:INFO:Checking exceptions
2023-10-13 12:44:03,052:INFO:Preloading libraries
2023-10-13 12:44:03,052:INFO:Set up data.
2023-10-13 12:44:03,060:INFO:Set up index.
2023-10-13 12:44:03,155:INFO:Initializing predict_model()
2023-10-13 12:44:03,155:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73ac50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b1c0>)
2023-10-13 12:44:03,155:INFO:Checking exceptions
2023-10-13 12:44:03,155:INFO:Preloading libraries
2023-10-13 12:44:03,155:INFO:Set up data.
2023-10-13 12:44:03,167:INFO:Set up index.
2023-10-13 12:44:11,692:INFO:Initializing predict_model()
2023-10-13 12:44:11,693:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc20f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149cf0>)
2023-10-13 12:44:11,693:INFO:Checking exceptions
2023-10-13 12:44:11,693:INFO:Preloading libraries
2023-10-13 12:44:11,696:INFO:Set up data.
2023-10-13 12:44:11,720:INFO:Set up index.
2023-10-13 12:44:11,879:INFO:Initializing predict_model()
2023-10-13 12:44:11,879:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc20f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149cf0>)
2023-10-13 12:44:11,879:INFO:Checking exceptions
2023-10-13 12:44:11,879:INFO:Preloading libraries
2023-10-13 12:44:11,879:INFO:Set up data.
2023-10-13 12:44:11,886:INFO:Set up index.
2023-10-13 12:44:11,983:INFO:Initializing predict_model()
2023-10-13 12:44:11,983:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc20f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:44:11,983:INFO:Checking exceptions
2023-10-13 12:44:11,983:INFO:Preloading libraries
2023-10-13 12:44:11,983:INFO:Set up data.
2023-10-13 12:44:11,990:INFO:Set up index.
2023-10-13 12:44:12,053:INFO:Initializing predict_model()
2023-10-13 12:44:12,054:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc20f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:44:12,054:INFO:Checking exceptions
2023-10-13 12:44:12,054:INFO:Preloading libraries
2023-10-13 12:44:12,054:INFO:Set up data.
2023-10-13 12:44:12,060:INFO:Set up index.
2023-10-13 12:44:12,126:INFO:Initializing predict_model()
2023-10-13 12:44:12,126:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b831690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 12:44:12,126:INFO:Checking exceptions
2023-10-13 12:44:12,126:INFO:Preloading libraries
2023-10-13 12:44:12,126:INFO:Set up data.
2023-10-13 12:44:12,133:INFO:Set up index.
2023-10-13 12:44:20,707:INFO:Initializing predict_model()
2023-10-13 12:44:20,710:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bed7ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:44:20,710:INFO:Checking exceptions
2023-10-13 12:44:20,710:INFO:Preloading libraries
2023-10-13 12:44:20,714:INFO:Set up data.
2023-10-13 12:44:20,752:INFO:Set up index.
2023-10-13 12:44:20,866:INFO:Initializing predict_model()
2023-10-13 12:44:20,866:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b831690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:44:20,866:INFO:Checking exceptions
2023-10-13 12:44:20,866:INFO:Preloading libraries
2023-10-13 12:44:20,866:INFO:Set up data.
2023-10-13 12:44:20,872:INFO:Set up index.
2023-10-13 12:44:20,933:INFO:Initializing predict_model()
2023-10-13 12:44:20,933:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b831690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:44:20,933:INFO:Checking exceptions
2023-10-13 12:44:20,933:INFO:Preloading libraries
2023-10-13 12:44:20,933:INFO:Set up data.
2023-10-13 12:44:20,939:INFO:Set up index.
2023-10-13 12:44:20,999:INFO:Initializing predict_model()
2023-10-13 12:44:20,999:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b831690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:44:20,999:INFO:Checking exceptions
2023-10-13 12:44:20,999:INFO:Preloading libraries
2023-10-13 12:44:20,999:INFO:Set up data.
2023-10-13 12:44:21,005:INFO:Set up index.
2023-10-13 12:44:21,064:INFO:Initializing predict_model()
2023-10-13 12:44:21,065:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b831690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 12:44:21,065:INFO:Checking exceptions
2023-10-13 12:44:21,065:INFO:Preloading libraries
2023-10-13 12:44:21,065:INFO:Set up data.
2023-10-13 12:44:21,070:INFO:Set up index.
2023-10-13 12:44:29,552:INFO:Initializing predict_model()
2023-10-13 12:44:29,553:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd1bb80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1491b0>)
2023-10-13 12:44:29,553:INFO:Checking exceptions
2023-10-13 12:44:29,554:INFO:Preloading libraries
2023-10-13 12:44:29,563:INFO:Set up data.
2023-10-13 12:44:29,594:INFO:Set up index.
2023-10-13 12:44:29,744:INFO:Initializing predict_model()
2023-10-13 12:44:29,744:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc6c670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b1491b0>)
2023-10-13 12:44:29,744:INFO:Checking exceptions
2023-10-13 12:44:29,744:INFO:Preloading libraries
2023-10-13 12:44:29,744:INFO:Set up data.
2023-10-13 12:44:29,750:INFO:Set up index.
2023-10-13 12:44:29,812:INFO:Initializing predict_model()
2023-10-13 12:44:29,812:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b948fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:44:29,812:INFO:Checking exceptions
2023-10-13 12:44:29,812:INFO:Preloading libraries
2023-10-13 12:44:29,812:INFO:Set up data.
2023-10-13 12:44:29,818:INFO:Set up index.
2023-10-13 12:44:29,879:INFO:Initializing predict_model()
2023-10-13 12:44:29,879:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b948fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:44:29,879:INFO:Checking exceptions
2023-10-13 12:44:29,879:INFO:Preloading libraries
2023-10-13 12:44:29,879:INFO:Set up data.
2023-10-13 12:44:29,885:INFO:Set up index.
2023-10-13 12:44:29,961:INFO:Initializing predict_model()
2023-10-13 12:44:29,961:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b948fa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695ea0>)
2023-10-13 12:44:29,961:INFO:Checking exceptions
2023-10-13 12:44:29,961:INFO:Preloading libraries
2023-10-13 12:44:29,962:INFO:Set up data.
2023-10-13 12:44:29,970:INFO:Set up index.
2023-10-13 12:44:38,538:INFO:Initializing predict_model()
2023-10-13 12:44:38,540:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc6e6e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:44:38,540:INFO:Checking exceptions
2023-10-13 12:44:38,540:INFO:Preloading libraries
2023-10-13 12:44:38,542:INFO:Set up data.
2023-10-13 12:44:38,568:INFO:Set up index.
2023-10-13 12:44:38,712:INFO:Initializing predict_model()
2023-10-13 12:44:38,712:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd02050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:44:38,712:INFO:Checking exceptions
2023-10-13 12:44:38,712:INFO:Preloading libraries
2023-10-13 12:44:38,712:INFO:Set up data.
2023-10-13 12:44:38,720:INFO:Set up index.
2023-10-13 12:44:38,787:INFO:Initializing predict_model()
2023-10-13 12:44:38,787:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd02050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:44:38,787:INFO:Checking exceptions
2023-10-13 12:44:38,787:INFO:Preloading libraries
2023-10-13 12:44:38,787:INFO:Set up data.
2023-10-13 12:44:38,793:INFO:Set up index.
2023-10-13 12:44:38,854:INFO:Initializing predict_model()
2023-10-13 12:44:38,854:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd02050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:44:38,854:INFO:Checking exceptions
2023-10-13 12:44:38,854:INFO:Preloading libraries
2023-10-13 12:44:38,854:INFO:Set up data.
2023-10-13 12:44:38,860:INFO:Set up index.
2023-10-13 12:44:38,920:INFO:Initializing predict_model()
2023-10-13 12:44:38,920:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd02050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:44:38,920:INFO:Checking exceptions
2023-10-13 12:44:38,920:INFO:Preloading libraries
2023-10-13 12:44:38,920:INFO:Set up data.
2023-10-13 12:44:38,926:INFO:Set up index.
2023-10-13 12:44:47,479:INFO:Initializing predict_model()
2023-10-13 12:44:47,480:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bed7ee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:44:47,480:INFO:Checking exceptions
2023-10-13 12:44:47,480:INFO:Preloading libraries
2023-10-13 12:44:47,481:INFO:Set up data.
2023-10-13 12:44:47,503:INFO:Set up index.
2023-10-13 12:44:47,589:INFO:Initializing predict_model()
2023-10-13 12:44:47,589:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb810c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:44:47,589:INFO:Checking exceptions
2023-10-13 12:44:47,589:INFO:Preloading libraries
2023-10-13 12:44:47,589:INFO:Set up data.
2023-10-13 12:44:47,595:INFO:Set up index.
2023-10-13 12:44:47,655:INFO:Initializing predict_model()
2023-10-13 12:44:47,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be2b5b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:44:47,655:INFO:Checking exceptions
2023-10-13 12:44:47,655:INFO:Preloading libraries
2023-10-13 12:44:47,655:INFO:Set up data.
2023-10-13 12:44:47,661:INFO:Set up index.
2023-10-13 12:44:47,721:INFO:Initializing predict_model()
2023-10-13 12:44:47,721:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bcb5a80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:44:47,721:INFO:Checking exceptions
2023-10-13 12:44:47,721:INFO:Preloading libraries
2023-10-13 12:44:47,721:INFO:Set up data.
2023-10-13 12:44:47,727:INFO:Set up index.
2023-10-13 12:44:47,787:INFO:Initializing predict_model()
2023-10-13 12:44:47,787:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be7e830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 12:44:47,787:INFO:Checking exceptions
2023-10-13 12:44:47,787:INFO:Preloading libraries
2023-10-13 12:44:47,787:INFO:Set up data.
2023-10-13 12:44:47,793:INFO:Set up index.
2023-10-13 12:44:56,355:INFO:Initializing predict_model()
2023-10-13 12:44:56,357:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bb81090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bd18f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:44:56,357:INFO:Checking exceptions
2023-10-13 12:44:56,357:INFO:Preloading libraries
2023-10-13 12:44:56,364:INFO:Set up data.
2023-10-13 12:44:56,395:INFO:Set up index.
2023-10-13 12:44:56,538:INFO:Initializing predict_model()
2023-10-13 12:44:56,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be7eb90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:44:56,539:INFO:Checking exceptions
2023-10-13 12:44:56,539:INFO:Preloading libraries
2023-10-13 12:44:56,539:INFO:Set up data.
2023-10-13 12:44:56,546:INFO:Set up index.
2023-10-13 12:44:56,627:INFO:Initializing predict_model()
2023-10-13 12:44:56,627:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be7eb90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:44:56,628:INFO:Checking exceptions
2023-10-13 12:44:56,628:INFO:Preloading libraries
2023-10-13 12:44:56,628:INFO:Set up data.
2023-10-13 12:44:56,635:INFO:Set up index.
2023-10-13 12:44:56,705:INFO:Initializing predict_model()
2023-10-13 12:44:56,705:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be7eb90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:44:56,705:INFO:Checking exceptions
2023-10-13 12:44:56,705:INFO:Preloading libraries
2023-10-13 12:44:56,705:INFO:Set up data.
2023-10-13 12:44:56,711:INFO:Set up index.
2023-10-13 12:44:56,772:INFO:Initializing predict_model()
2023-10-13 12:44:56,772:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28be7d870>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bc6ec50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 12:44:56,772:INFO:Checking exceptions
2023-10-13 12:44:56,772:INFO:Preloading libraries
2023-10-13 12:44:56,772:INFO:Set up data.
2023-10-13 12:44:56,778:INFO:Set up index.
2023-10-13 12:46:37,474:INFO:Initializing load_model()
2023-10-13 12:46:37,475:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:46:37,481:INFO:Initializing load_model()
2023-10-13 12:46:37,481:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:46:37,484:INFO:Initializing load_model()
2023-10-13 12:46:37,484:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:46:37,486:INFO:Initializing load_model()
2023-10-13 12:46:37,486:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:46:37,488:INFO:Initializing load_model()
2023-10-13 12:46:37,488:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 12:46:37,498:INFO:Initializing predict_model()
2023-10-13 12:46:37,498:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b94bd60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bed7400>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:46:37,498:INFO:Checking exceptions
2023-10-13 12:46:37,498:INFO:Preloading libraries
2023-10-13 12:46:37,499:INFO:Set up data.
2023-10-13 12:46:37,507:INFO:Set up index.
2023-10-13 12:46:37,625:INFO:Initializing predict_model()
2023-10-13 12:46:37,626:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bade2f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:46:37,626:INFO:Checking exceptions
2023-10-13 12:46:37,626:INFO:Preloading libraries
2023-10-13 12:46:37,626:INFO:Set up data.
2023-10-13 12:46:37,632:INFO:Set up index.
2023-10-13 12:46:37,699:INFO:Initializing predict_model()
2023-10-13 12:46:37,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9ad1e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:46:37,699:INFO:Checking exceptions
2023-10-13 12:46:37,699:INFO:Preloading libraries
2023-10-13 12:46:37,699:INFO:Set up data.
2023-10-13 12:46:37,705:INFO:Set up index.
2023-10-13 12:46:37,767:INFO:Initializing predict_model()
2023-10-13 12:46:37,767:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9ad1e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:46:37,767:INFO:Checking exceptions
2023-10-13 12:46:37,767:INFO:Preloading libraries
2023-10-13 12:46:37,768:INFO:Set up data.
2023-10-13 12:46:37,773:INFO:Set up index.
2023-10-13 12:46:37,834:INFO:Initializing predict_model()
2023-10-13 12:46:37,834:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b9ad1e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x28bcb5210>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125cc8940>)
2023-10-13 12:46:37,834:INFO:Checking exceptions
2023-10-13 12:46:37,834:INFO:Preloading libraries
2023-10-13 12:46:37,834:INFO:Set up data.
2023-10-13 12:46:37,840:INFO:Set up index.
2023-10-13 12:58:28,343:INFO:Initializing load_model()
2023-10-13 12:58:28,343:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:04,447:INFO:Initializing load_model()
2023-10-13 13:17:04,448:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:04,463:INFO:Initializing load_model()
2023-10-13 13:17:04,463:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:04,475:INFO:Initializing load_model()
2023-10-13 13:17:04,475:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:04,478:INFO:Initializing load_model()
2023-10-13 13:17:04,478:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:04,480:INFO:Initializing load_model()
2023-10-13 13:17:04,480:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:04,522:INFO:Initializing predict_model()
2023-10-13 13:17:04,523:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb53c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e79a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:17:04,523:INFO:Checking exceptions
2023-10-13 13:17:04,523:INFO:Preloading libraries
2023-10-13 13:17:04,523:INFO:Set up data.
2023-10-13 13:17:04,554:INFO:Set up index.
2023-10-13 13:17:04,689:INFO:Initializing predict_model()
2023-10-13 13:17:04,689:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73b610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:17:04,689:INFO:Checking exceptions
2023-10-13 13:17:04,689:INFO:Preloading libraries
2023-10-13 13:17:04,689:INFO:Set up data.
2023-10-13 13:17:04,695:INFO:Set up index.
2023-10-13 13:17:04,774:INFO:Initializing predict_model()
2023-10-13 13:17:04,774:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73b610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:17:04,774:INFO:Checking exceptions
2023-10-13 13:17:04,774:INFO:Preloading libraries
2023-10-13 13:17:04,774:INFO:Set up data.
2023-10-13 13:17:04,781:INFO:Set up index.
2023-10-13 13:17:04,848:INFO:Initializing predict_model()
2023-10-13 13:17:04,848:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73b610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:17:04,848:INFO:Checking exceptions
2023-10-13 13:17:04,848:INFO:Preloading libraries
2023-10-13 13:17:04,848:INFO:Set up data.
2023-10-13 13:17:04,855:INFO:Set up index.
2023-10-13 13:17:04,923:INFO:Initializing predict_model()
2023-10-13 13:17:04,923:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28b73b610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e7160>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:17:04,923:INFO:Checking exceptions
2023-10-13 13:17:04,923:INFO:Preloading libraries
2023-10-13 13:17:04,923:INFO:Set up data.
2023-10-13 13:17:04,929:INFO:Set up index.
2023-10-13 13:17:08,234:INFO:Initializing load_model()
2023-10-13 13:17:08,234:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:08,242:INFO:Initializing load_model()
2023-10-13 13:17:08,243:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:08,244:INFO:Initializing load_model()
2023-10-13 13:17:08,245:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:08,246:INFO:Initializing load_model()
2023-10-13 13:17:08,246:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:17:08,247:INFO:Initializing load_model()
2023-10-13 13:17:08,247:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:18:00,899:INFO:Initializing load_model()
2023-10-13 13:18:00,899:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:18:00,902:INFO:Initializing load_model()
2023-10-13 13:18:00,902:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:18:00,904:INFO:Initializing load_model()
2023-10-13 13:18:00,904:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:18:00,906:INFO:Initializing load_model()
2023-10-13 13:18:00,906:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:18:00,908:INFO:Initializing load_model()
2023-10-13 13:18:00,908:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:18:00,917:INFO:Initializing predict_model()
2023-10-13 13:18:00,917:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb7a60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab520>)
2023-10-13 13:18:00,917:INFO:Checking exceptions
2023-10-13 13:18:00,917:INFO:Preloading libraries
2023-10-13 13:18:00,918:INFO:Set up data.
2023-10-13 13:18:00,925:INFO:Set up index.
2023-10-13 13:18:01,065:INFO:Initializing predict_model()
2023-10-13 13:18:01,065:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bcb47c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:01,065:INFO:Checking exceptions
2023-10-13 13:18:01,065:INFO:Preloading libraries
2023-10-13 13:18:01,065:INFO:Set up data.
2023-10-13 13:18:01,072:INFO:Set up index.
2023-10-13 13:18:01,143:INFO:Initializing predict_model()
2023-10-13 13:18:01,143:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bcb47c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:01,143:INFO:Checking exceptions
2023-10-13 13:18:01,143:INFO:Preloading libraries
2023-10-13 13:18:01,143:INFO:Set up data.
2023-10-13 13:18:01,149:INFO:Set up index.
2023-10-13 13:18:01,217:INFO:Initializing predict_model()
2023-10-13 13:18:01,217:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bcb47c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:01,217:INFO:Checking exceptions
2023-10-13 13:18:01,217:INFO:Preloading libraries
2023-10-13 13:18:01,217:INFO:Set up data.
2023-10-13 13:18:01,223:INFO:Set up index.
2023-10-13 13:18:01,289:INFO:Initializing predict_model()
2023-10-13 13:18:01,289:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bcb47c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:01,289:INFO:Checking exceptions
2023-10-13 13:18:01,289:INFO:Preloading libraries
2023-10-13 13:18:01,289:INFO:Set up data.
2023-10-13 13:18:01,295:INFO:Set up index.
2023-10-13 13:18:09,853:INFO:Initializing predict_model()
2023-10-13 13:18:09,854:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb7a00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:09,854:INFO:Checking exceptions
2023-10-13 13:18:09,854:INFO:Preloading libraries
2023-10-13 13:18:09,856:INFO:Set up data.
2023-10-13 13:18:09,887:INFO:Set up index.
2023-10-13 13:18:10,007:INFO:Initializing predict_model()
2023-10-13 13:18:10,007:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:10,007:INFO:Checking exceptions
2023-10-13 13:18:10,007:INFO:Preloading libraries
2023-10-13 13:18:10,007:INFO:Set up data.
2023-10-13 13:18:10,013:INFO:Set up index.
2023-10-13 13:18:10,080:INFO:Initializing predict_model()
2023-10-13 13:18:10,080:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc6ef80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:10,080:INFO:Checking exceptions
2023-10-13 13:18:10,080:INFO:Preloading libraries
2023-10-13 13:18:10,081:INFO:Set up data.
2023-10-13 13:18:10,087:INFO:Set up index.
2023-10-13 13:18:10,160:INFO:Initializing predict_model()
2023-10-13 13:18:10,160:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc6ef80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:10,160:INFO:Checking exceptions
2023-10-13 13:18:10,160:INFO:Preloading libraries
2023-10-13 13:18:10,160:INFO:Set up data.
2023-10-13 13:18:10,166:INFO:Set up index.
2023-10-13 13:18:10,235:INFO:Initializing predict_model()
2023-10-13 13:18:10,236:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bc6ef80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:10,236:INFO:Checking exceptions
2023-10-13 13:18:10,236:INFO:Preloading libraries
2023-10-13 13:18:10,236:INFO:Set up data.
2023-10-13 13:18:10,242:INFO:Set up index.
2023-10-13 13:18:18,761:INFO:Initializing predict_model()
2023-10-13 13:18:18,762:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd18550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab2e0>)
2023-10-13 13:18:18,762:INFO:Checking exceptions
2023-10-13 13:18:18,762:INFO:Preloading libraries
2023-10-13 13:18:18,763:INFO:Set up data.
2023-10-13 13:18:18,782:INFO:Set up index.
2023-10-13 13:18:18,879:INFO:Initializing predict_model()
2023-10-13 13:18:18,880:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd18550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-13 13:18:18,880:INFO:Checking exceptions
2023-10-13 13:18:18,880:INFO:Preloading libraries
2023-10-13 13:18:18,880:INFO:Set up data.
2023-10-13 13:18:18,886:INFO:Set up index.
2023-10-13 13:18:18,956:INFO:Initializing predict_model()
2023-10-13 13:18:18,956:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd18550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-13 13:18:18,956:INFO:Checking exceptions
2023-10-13 13:18:18,956:INFO:Preloading libraries
2023-10-13 13:18:18,956:INFO:Set up data.
2023-10-13 13:18:18,962:INFO:Set up index.
2023-10-13 13:18:19,033:INFO:Initializing predict_model()
2023-10-13 13:18:19,033:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd18550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-13 13:18:19,033:INFO:Checking exceptions
2023-10-13 13:18:19,033:INFO:Preloading libraries
2023-10-13 13:18:19,033:INFO:Set up data.
2023-10-13 13:18:19,039:INFO:Set up index.
2023-10-13 13:18:19,110:INFO:Initializing predict_model()
2023-10-13 13:18:19,110:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd18550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-13 13:18:19,110:INFO:Checking exceptions
2023-10-13 13:18:19,110:INFO:Preloading libraries
2023-10-13 13:18:19,110:INFO:Set up data.
2023-10-13 13:18:19,116:INFO:Set up index.
2023-10-13 13:18:27,654:INFO:Initializing predict_model()
2023-10-13 13:18:27,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e6200>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab910>)
2023-10-13 13:18:27,655:INFO:Checking exceptions
2023-10-13 13:18:27,655:INFO:Preloading libraries
2023-10-13 13:18:27,657:INFO:Set up data.
2023-10-13 13:18:27,689:INFO:Set up index.
2023-10-13 13:18:27,827:INFO:Initializing predict_model()
2023-10-13 13:18:27,827:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296f88310>)
2023-10-13 13:18:27,827:INFO:Checking exceptions
2023-10-13 13:18:27,827:INFO:Preloading libraries
2023-10-13 13:18:27,827:INFO:Set up data.
2023-10-13 13:18:27,833:INFO:Set up index.
2023-10-13 13:18:27,900:INFO:Initializing predict_model()
2023-10-13 13:18:27,900:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296f88310>)
2023-10-13 13:18:27,900:INFO:Checking exceptions
2023-10-13 13:18:27,900:INFO:Preloading libraries
2023-10-13 13:18:27,900:INFO:Set up data.
2023-10-13 13:18:27,906:INFO:Set up index.
2023-10-13 13:18:27,972:INFO:Initializing predict_model()
2023-10-13 13:18:27,972:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296f88310>)
2023-10-13 13:18:27,972:INFO:Checking exceptions
2023-10-13 13:18:27,972:INFO:Preloading libraries
2023-10-13 13:18:27,972:INFO:Set up data.
2023-10-13 13:18:27,978:INFO:Set up index.
2023-10-13 13:18:28,043:INFO:Initializing predict_model()
2023-10-13 13:18:28,044:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296f88310>)
2023-10-13 13:18:28,044:INFO:Checking exceptions
2023-10-13 13:18:28,044:INFO:Preloading libraries
2023-10-13 13:18:28,044:INFO:Set up data.
2023-10-13 13:18:28,049:INFO:Set up index.
2023-10-13 13:18:36,573:INFO:Initializing predict_model()
2023-10-13 13:18:36,573:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb7df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab9a0>)
2023-10-13 13:18:36,574:INFO:Checking exceptions
2023-10-13 13:18:36,574:INFO:Preloading libraries
2023-10-13 13:18:36,574:INFO:Set up data.
2023-10-13 13:18:36,598:INFO:Set up index.
2023-10-13 13:18:36,683:INFO:Initializing predict_model()
2023-10-13 13:18:36,683:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a5750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:36,683:INFO:Checking exceptions
2023-10-13 13:18:36,683:INFO:Preloading libraries
2023-10-13 13:18:36,683:INFO:Set up data.
2023-10-13 13:18:36,690:INFO:Set up index.
2023-10-13 13:18:36,756:INFO:Initializing predict_model()
2023-10-13 13:18:36,756:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:36,756:INFO:Checking exceptions
2023-10-13 13:18:36,756:INFO:Preloading libraries
2023-10-13 13:18:36,756:INFO:Set up data.
2023-10-13 13:18:36,762:INFO:Set up index.
2023-10-13 13:18:36,827:INFO:Initializing predict_model()
2023-10-13 13:18:36,827:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:36,827:INFO:Checking exceptions
2023-10-13 13:18:36,827:INFO:Preloading libraries
2023-10-13 13:18:36,827:INFO:Set up data.
2023-10-13 13:18:36,833:INFO:Set up index.
2023-10-13 13:18:36,899:INFO:Initializing predict_model()
2023-10-13 13:18:36,899:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2f040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-13 13:18:36,899:INFO:Checking exceptions
2023-10-13 13:18:36,899:INFO:Preloading libraries
2023-10-13 13:18:36,899:INFO:Set up data.
2023-10-13 13:18:36,905:INFO:Set up index.
2023-10-13 13:18:45,462:INFO:Initializing predict_model()
2023-10-13 13:18:45,462:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a62c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabb50>)
2023-10-13 13:18:45,462:INFO:Checking exceptions
2023-10-13 13:18:45,463:INFO:Preloading libraries
2023-10-13 13:18:45,463:INFO:Set up data.
2023-10-13 13:18:45,491:INFO:Set up index.
2023-10-13 13:18:45,581:INFO:Initializing predict_model()
2023-10-13 13:18:45,582:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e74c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:18:45,582:INFO:Checking exceptions
2023-10-13 13:18:45,582:INFO:Preloading libraries
2023-10-13 13:18:45,582:INFO:Set up data.
2023-10-13 13:18:45,587:INFO:Set up index.
2023-10-13 13:18:45,654:INFO:Initializing predict_model()
2023-10-13 13:18:45,654:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfe8d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:18:45,654:INFO:Checking exceptions
2023-10-13 13:18:45,654:INFO:Preloading libraries
2023-10-13 13:18:45,654:INFO:Set up data.
2023-10-13 13:18:45,660:INFO:Set up index.
2023-10-13 13:18:45,726:INFO:Initializing predict_model()
2023-10-13 13:18:45,726:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfe8d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:18:45,726:INFO:Checking exceptions
2023-10-13 13:18:45,726:INFO:Preloading libraries
2023-10-13 13:18:45,727:INFO:Set up data.
2023-10-13 13:18:45,733:INFO:Set up index.
2023-10-13 13:18:45,798:INFO:Initializing predict_model()
2023-10-13 13:18:45,798:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfe8d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:18:45,798:INFO:Checking exceptions
2023-10-13 13:18:45,798:INFO:Preloading libraries
2023-10-13 13:18:45,798:INFO:Set up data.
2023-10-13 13:18:45,804:INFO:Set up index.
2023-10-13 13:18:54,366:INFO:Initializing predict_model()
2023-10-13 13:18:54,367:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a3550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab9a0>)
2023-10-13 13:18:54,368:INFO:Checking exceptions
2023-10-13 13:18:54,368:INFO:Preloading libraries
2023-10-13 13:18:54,368:INFO:Set up data.
2023-10-13 13:18:54,391:INFO:Set up index.
2023-10-13 13:18:54,487:INFO:Initializing predict_model()
2023-10-13 13:18:54,487:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfeaef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab9a0>)
2023-10-13 13:18:54,487:INFO:Checking exceptions
2023-10-13 13:18:54,487:INFO:Preloading libraries
2023-10-13 13:18:54,487:INFO:Set up data.
2023-10-13 13:18:54,493:INFO:Set up index.
2023-10-13 13:18:54,559:INFO:Initializing predict_model()
2023-10-13 13:18:54,559:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfeaef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 13:18:54,559:INFO:Checking exceptions
2023-10-13 13:18:54,559:INFO:Preloading libraries
2023-10-13 13:18:54,559:INFO:Set up data.
2023-10-13 13:18:54,565:INFO:Set up index.
2023-10-13 13:18:54,631:INFO:Initializing predict_model()
2023-10-13 13:18:54,631:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfeaef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 13:18:54,631:INFO:Checking exceptions
2023-10-13 13:18:54,631:INFO:Preloading libraries
2023-10-13 13:18:54,631:INFO:Set up data.
2023-10-13 13:18:54,637:INFO:Set up index.
2023-10-13 13:18:54,705:INFO:Initializing predict_model()
2023-10-13 13:18:54,705:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfeaef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 13:18:54,705:INFO:Checking exceptions
2023-10-13 13:18:54,705:INFO:Preloading libraries
2023-10-13 13:18:54,705:INFO:Set up data.
2023-10-13 13:18:54,711:INFO:Set up index.
2023-10-13 13:19:03,265:INFO:Initializing predict_model()
2023-10-13 13:19:03,267:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f2e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabb50>)
2023-10-13 13:19:03,267:INFO:Checking exceptions
2023-10-13 13:19:03,267:INFO:Preloading libraries
2023-10-13 13:19:03,269:INFO:Set up data.
2023-10-13 13:19:03,317:INFO:Set up index.
2023-10-13 13:19:03,470:INFO:Initializing predict_model()
2023-10-13 13:19:03,470:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfeaef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabb50>)
2023-10-13 13:19:03,470:INFO:Checking exceptions
2023-10-13 13:19:03,470:INFO:Preloading libraries
2023-10-13 13:19:03,470:INFO:Set up data.
2023-10-13 13:19:03,477:INFO:Set up index.
2023-10-13 13:19:03,543:INFO:Initializing predict_model()
2023-10-13 13:19:03,544:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfeaef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabb50>)
2023-10-13 13:19:03,544:INFO:Checking exceptions
2023-10-13 13:19:03,544:INFO:Preloading libraries
2023-10-13 13:19:03,544:INFO:Set up data.
2023-10-13 13:19:03,550:INFO:Set up index.
2023-10-13 13:19:03,616:INFO:Initializing predict_model()
2023-10-13 13:19:03,616:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfeaef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b010>)
2023-10-13 13:19:03,616:INFO:Checking exceptions
2023-10-13 13:19:03,616:INFO:Preloading libraries
2023-10-13 13:19:03,617:INFO:Set up data.
2023-10-13 13:19:03,622:INFO:Set up index.
2023-10-13 13:19:03,688:INFO:Initializing predict_model()
2023-10-13 13:19:03,688:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfeaef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b010>)
2023-10-13 13:19:03,688:INFO:Checking exceptions
2023-10-13 13:19:03,688:INFO:Preloading libraries
2023-10-13 13:19:03,688:INFO:Set up data.
2023-10-13 13:19:03,694:INFO:Set up index.
2023-10-13 13:19:12,231:INFO:Initializing predict_model()
2023-10-13 13:19:12,232:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a5330>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-13 13:19:12,233:INFO:Checking exceptions
2023-10-13 13:19:12,233:INFO:Preloading libraries
2023-10-13 13:19:12,233:INFO:Set up data.
2023-10-13 13:19:12,257:INFO:Set up index.
2023-10-13 13:19:12,341:INFO:Initializing predict_model()
2023-10-13 13:19:12,341:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a1990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-13 13:19:12,341:INFO:Checking exceptions
2023-10-13 13:19:12,341:INFO:Preloading libraries
2023-10-13 13:19:12,341:INFO:Set up data.
2023-10-13 13:19:12,347:INFO:Set up index.
2023-10-13 13:19:12,414:INFO:Initializing predict_model()
2023-10-13 13:19:12,414:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a2cb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab6d0>)
2023-10-13 13:19:12,414:INFO:Checking exceptions
2023-10-13 13:19:12,414:INFO:Preloading libraries
2023-10-13 13:19:12,414:INFO:Set up data.
2023-10-13 13:19:12,420:INFO:Set up index.
2023-10-13 13:19:12,486:INFO:Initializing predict_model()
2023-10-13 13:19:12,487:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a55d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab6d0>)
2023-10-13 13:19:12,487:INFO:Checking exceptions
2023-10-13 13:19:12,487:INFO:Preloading libraries
2023-10-13 13:19:12,487:INFO:Set up data.
2023-10-13 13:19:12,493:INFO:Set up index.
2023-10-13 13:19:12,558:INFO:Initializing predict_model()
2023-10-13 13:19:12,559:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c25d80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab6d0>)
2023-10-13 13:19:12,559:INFO:Checking exceptions
2023-10-13 13:19:12,559:INFO:Preloading libraries
2023-10-13 13:19:12,559:INFO:Set up data.
2023-10-13 13:19:12,565:INFO:Set up index.
2023-10-13 13:19:21,097:INFO:Initializing predict_model()
2023-10-13 13:19:21,098:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a38cd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e4b80>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff9a0>)
2023-10-13 13:19:21,098:INFO:Checking exceptions
2023-10-13 13:19:21,098:INFO:Preloading libraries
2023-10-13 13:19:21,099:INFO:Set up data.
2023-10-13 13:19:21,124:INFO:Set up index.
2023-10-13 13:19:21,208:INFO:Initializing predict_model()
2023-10-13 13:19:21,208:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb6560>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 13:19:21,208:INFO:Checking exceptions
2023-10-13 13:19:21,208:INFO:Preloading libraries
2023-10-13 13:19:21,208:INFO:Set up data.
2023-10-13 13:19:21,214:INFO:Set up index.
2023-10-13 13:19:21,280:INFO:Initializing predict_model()
2023-10-13 13:19:21,280:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e63e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 13:19:21,280:INFO:Checking exceptions
2023-10-13 13:19:21,280:INFO:Preloading libraries
2023-10-13 13:19:21,280:INFO:Set up data.
2023-10-13 13:19:21,286:INFO:Set up index.
2023-10-13 13:19:21,354:INFO:Initializing predict_model()
2023-10-13 13:19:21,354:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a1c60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 13:19:21,354:INFO:Checking exceptions
2023-10-13 13:19:21,354:INFO:Preloading libraries
2023-10-13 13:19:21,354:INFO:Set up data.
2023-10-13 13:19:21,360:INFO:Set up index.
2023-10-13 13:19:21,426:INFO:Initializing predict_model()
2023-10-13 13:19:21,426:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e4eb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938e5a50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 13:19:21,426:INFO:Checking exceptions
2023-10-13 13:19:21,426:INFO:Preloading libraries
2023-10-13 13:19:21,426:INFO:Set up data.
2023-10-13 13:19:21,432:INFO:Set up index.
2023-10-13 13:21:24,925:INFO:Initializing load_model()
2023-10-13 13:21:24,925:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:21:24,932:INFO:Initializing load_model()
2023-10-13 13:21:24,932:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:21:24,938:INFO:Initializing load_model()
2023-10-13 13:21:24,938:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:21:24,941:INFO:Initializing load_model()
2023-10-13 13:21:24,941:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:21:24,944:INFO:Initializing load_model()
2023-10-13 13:21:24,944:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:21:24,972:INFO:Initializing predict_model()
2023-10-13 13:21:24,972:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a1510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971a7f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabf40>)
2023-10-13 13:21:24,972:INFO:Checking exceptions
2023-10-13 13:21:24,972:INFO:Preloading libraries
2023-10-13 13:21:24,975:INFO:Set up data.
2023-10-13 13:21:24,993:INFO:Set up index.
2023-10-13 13:21:25,265:INFO:Initializing predict_model()
2023-10-13 13:21:25,265:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfebc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e50f70>)
2023-10-13 13:21:25,265:INFO:Checking exceptions
2023-10-13 13:21:25,265:INFO:Preloading libraries
2023-10-13 13:21:25,266:INFO:Set up data.
2023-10-13 13:21:25,272:INFO:Set up index.
2023-10-13 13:21:25,343:INFO:Initializing predict_model()
2023-10-13 13:21:25,343:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfebc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e50f70>)
2023-10-13 13:21:25,343:INFO:Checking exceptions
2023-10-13 13:21:25,343:INFO:Preloading libraries
2023-10-13 13:21:25,343:INFO:Set up data.
2023-10-13 13:21:25,351:INFO:Set up index.
2023-10-13 13:21:25,420:INFO:Initializing predict_model()
2023-10-13 13:21:25,420:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfebc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e50f70>)
2023-10-13 13:21:25,420:INFO:Checking exceptions
2023-10-13 13:21:25,420:INFO:Preloading libraries
2023-10-13 13:21:25,420:INFO:Set up data.
2023-10-13 13:21:25,426:INFO:Set up index.
2023-10-13 13:21:25,499:INFO:Initializing predict_model()
2023-10-13 13:21:25,499:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfebc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f3d60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e50f70>)
2023-10-13 13:21:25,499:INFO:Checking exceptions
2023-10-13 13:21:25,499:INFO:Preloading libraries
2023-10-13 13:21:25,499:INFO:Set up data.
2023-10-13 13:21:25,505:INFO:Set up index.
2023-10-13 13:21:34,012:INFO:Initializing predict_model()
2023-10-13 13:21:34,013:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e56f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971a7f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 13:21:34,013:INFO:Checking exceptions
2023-10-13 13:21:34,013:INFO:Preloading libraries
2023-10-13 13:21:34,015:INFO:Set up data.
2023-10-13 13:21:34,040:INFO:Set up index.
2023-10-13 13:21:34,175:INFO:Initializing predict_model()
2023-10-13 13:21:34,175:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd1b550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 13:21:34,175:INFO:Checking exceptions
2023-10-13 13:21:34,175:INFO:Preloading libraries
2023-10-13 13:21:34,175:INFO:Set up data.
2023-10-13 13:21:34,182:INFO:Set up index.
2023-10-13 13:21:34,254:INFO:Initializing predict_model()
2023-10-13 13:21:34,254:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd1b550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 13:21:34,254:INFO:Checking exceptions
2023-10-13 13:21:34,254:INFO:Preloading libraries
2023-10-13 13:21:34,254:INFO:Set up data.
2023-10-13 13:21:34,261:INFO:Set up index.
2023-10-13 13:21:34,335:INFO:Initializing predict_model()
2023-10-13 13:21:34,335:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd1b550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 13:21:34,335:INFO:Checking exceptions
2023-10-13 13:21:34,335:INFO:Preloading libraries
2023-10-13 13:21:34,335:INFO:Set up data.
2023-10-13 13:21:34,341:INFO:Set up index.
2023-10-13 13:21:34,415:INFO:Initializing predict_model()
2023-10-13 13:21:34,415:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd1b550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f3d60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 13:21:34,415:INFO:Checking exceptions
2023-10-13 13:21:34,415:INFO:Preloading libraries
2023-10-13 13:21:34,415:INFO:Set up data.
2023-10-13 13:21:34,421:INFO:Set up index.
2023-10-13 13:21:42,975:INFO:Initializing predict_model()
2023-10-13 13:21:42,980:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e6740>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971a7f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296faaf80>)
2023-10-13 13:21:42,980:INFO:Checking exceptions
2023-10-13 13:21:42,981:INFO:Preloading libraries
2023-10-13 13:21:42,985:INFO:Set up data.
2023-10-13 13:21:43,013:INFO:Set up index.
2023-10-13 13:21:43,167:INFO:Initializing predict_model()
2023-10-13 13:21:43,167:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb5900>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:21:43,167:INFO:Checking exceptions
2023-10-13 13:21:43,167:INFO:Preloading libraries
2023-10-13 13:21:43,167:INFO:Set up data.
2023-10-13 13:21:43,173:INFO:Set up index.
2023-10-13 13:21:43,241:INFO:Initializing predict_model()
2023-10-13 13:21:43,241:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a6410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:21:43,241:INFO:Checking exceptions
2023-10-13 13:21:43,241:INFO:Preloading libraries
2023-10-13 13:21:43,242:INFO:Set up data.
2023-10-13 13:21:43,247:INFO:Set up index.
2023-10-13 13:21:43,316:INFO:Initializing predict_model()
2023-10-13 13:21:43,316:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd1b7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:21:43,316:INFO:Checking exceptions
2023-10-13 13:21:43,316:INFO:Preloading libraries
2023-10-13 13:21:43,316:INFO:Set up data.
2023-10-13 13:21:43,322:INFO:Set up index.
2023-10-13 13:21:43,389:INFO:Initializing predict_model()
2023-10-13 13:21:43,389:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bd1b7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f3d60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:21:43,389:INFO:Checking exceptions
2023-10-13 13:21:43,389:INFO:Preloading libraries
2023-10-13 13:21:43,389:INFO:Set up data.
2023-10-13 13:21:43,395:INFO:Set up index.
2023-10-13 13:21:51,938:INFO:Initializing predict_model()
2023-10-13 13:21:51,939:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c274f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971a7f10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab2e0>)
2023-10-13 13:21:51,940:INFO:Checking exceptions
2023-10-13 13:21:51,940:INFO:Preloading libraries
2023-10-13 13:21:51,941:INFO:Set up data.
2023-10-13 13:21:51,979:INFO:Set up index.
2023-10-13 13:21:52,237:INFO:Initializing predict_model()
2023-10-13 13:21:52,237:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294ea77c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab2e0>)
2023-10-13 13:21:52,237:INFO:Checking exceptions
2023-10-13 13:21:52,237:INFO:Preloading libraries
2023-10-13 13:21:52,238:INFO:Set up data.
2023-10-13 13:21:52,247:INFO:Set up index.
2023-10-13 13:21:52,360:INFO:Initializing predict_model()
2023-10-13 13:21:52,360:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294ea77c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab2e0>)
2023-10-13 13:21:52,360:INFO:Checking exceptions
2023-10-13 13:21:52,360:INFO:Preloading libraries
2023-10-13 13:21:52,360:INFO:Set up data.
2023-10-13 13:21:52,370:INFO:Set up index.
2023-10-13 13:21:52,450:INFO:Initializing predict_model()
2023-10-13 13:21:52,450:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294ea77c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab2e0>)
2023-10-13 13:21:52,450:INFO:Checking exceptions
2023-10-13 13:21:52,450:INFO:Preloading libraries
2023-10-13 13:21:52,451:INFO:Set up data.
2023-10-13 13:21:52,458:INFO:Set up index.
2023-10-13 13:21:52,541:INFO:Initializing predict_model()
2023-10-13 13:21:52,541:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294ea77c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f3d60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab2e0>)
2023-10-13 13:21:52,541:INFO:Checking exceptions
2023-10-13 13:21:52,541:INFO:Preloading libraries
2023-10-13 13:21:52,541:INFO:Set up data.
2023-10-13 13:21:52,549:INFO:Set up index.
2023-10-13 13:21:55,607:INFO:Initializing load_model()
2023-10-13 13:21:55,607:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:21:55,610:INFO:Initializing load_model()
2023-10-13 13:21:55,611:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:21:55,613:INFO:Initializing load_model()
2023-10-13 13:21:55,613:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:21:55,615:INFO:Initializing load_model()
2023-10-13 13:21:55,616:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:21:55,617:INFO:Initializing load_model()
2023-10-13 13:21:55,617:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:09,268:INFO:Initializing load_model()
2023-10-13 13:22:09,269:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:09,275:INFO:Initializing load_model()
2023-10-13 13:22:09,275:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:09,278:INFO:Initializing load_model()
2023-10-13 13:22:09,278:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:09,280:INFO:Initializing load_model()
2023-10-13 13:22:09,280:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:09,282:INFO:Initializing load_model()
2023-10-13 13:22:09,282:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:09,299:INFO:Initializing predict_model()
2023-10-13 13:22:09,299:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b77f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f18d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabb50>)
2023-10-13 13:22:09,299:INFO:Checking exceptions
2023-10-13 13:22:09,299:INFO:Preloading libraries
2023-10-13 13:22:09,300:INFO:Set up data.
2023-10-13 13:22:09,312:INFO:Set up index.
2023-10-13 13:22:09,465:INFO:Initializing predict_model()
2023-10-13 13:22:09,465:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f1480>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:22:09,465:INFO:Checking exceptions
2023-10-13 13:22:09,465:INFO:Preloading libraries
2023-10-13 13:22:09,465:INFO:Set up data.
2023-10-13 13:22:09,471:INFO:Set up index.
2023-10-13 13:22:09,544:INFO:Initializing predict_model()
2023-10-13 13:22:09,544:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e260>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:22:09,544:INFO:Checking exceptions
2023-10-13 13:22:09,544:INFO:Preloading libraries
2023-10-13 13:22:09,544:INFO:Set up data.
2023-10-13 13:22:09,550:INFO:Set up index.
2023-10-13 13:22:09,620:INFO:Initializing predict_model()
2023-10-13 13:22:09,620:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e260>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:22:09,620:INFO:Checking exceptions
2023-10-13 13:22:09,620:INFO:Preloading libraries
2023-10-13 13:22:09,620:INFO:Set up data.
2023-10-13 13:22:09,626:INFO:Set up index.
2023-10-13 13:22:09,695:INFO:Initializing predict_model()
2023-10-13 13:22:09,695:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e260>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f2920>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:22:09,695:INFO:Checking exceptions
2023-10-13 13:22:09,695:INFO:Preloading libraries
2023-10-13 13:22:09,695:INFO:Set up data.
2023-10-13 13:22:09,701:INFO:Set up index.
2023-10-13 13:22:18,197:INFO:Initializing predict_model()
2023-10-13 13:22:18,199:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f18d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:22:18,199:INFO:Checking exceptions
2023-10-13 13:22:18,199:INFO:Preloading libraries
2023-10-13 13:22:18,201:INFO:Set up data.
2023-10-13 13:22:18,237:INFO:Set up index.
2023-10-13 13:22:18,392:INFO:Initializing predict_model()
2023-10-13 13:22:18,392:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:22:18,392:INFO:Checking exceptions
2023-10-13 13:22:18,392:INFO:Preloading libraries
2023-10-13 13:22:18,392:INFO:Set up data.
2023-10-13 13:22:18,399:INFO:Set up index.
2023-10-13 13:22:18,479:INFO:Initializing predict_model()
2023-10-13 13:22:18,479:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:22:18,479:INFO:Checking exceptions
2023-10-13 13:22:18,479:INFO:Preloading libraries
2023-10-13 13:22:18,479:INFO:Set up data.
2023-10-13 13:22:18,486:INFO:Set up index.
2023-10-13 13:22:18,555:INFO:Initializing predict_model()
2023-10-13 13:22:18,556:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f1fc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:22:18,556:INFO:Checking exceptions
2023-10-13 13:22:18,556:INFO:Preloading libraries
2023-10-13 13:22:18,556:INFO:Set up data.
2023-10-13 13:22:18,562:INFO:Set up index.
2023-10-13 13:22:18,632:INFO:Initializing predict_model()
2023-10-13 13:22:18,632:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f1fc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f2920>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:22:18,632:INFO:Checking exceptions
2023-10-13 13:22:18,632:INFO:Preloading libraries
2023-10-13 13:22:18,632:INFO:Set up data.
2023-10-13 13:22:18,638:INFO:Set up index.
2023-10-13 13:22:27,149:INFO:Initializing predict_model()
2023-10-13 13:22:27,150:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a886a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f18d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-13 13:22:27,151:INFO:Checking exceptions
2023-10-13 13:22:27,151:INFO:Preloading libraries
2023-10-13 13:22:27,154:INFO:Set up data.
2023-10-13 13:22:27,195:INFO:Set up index.
2023-10-13 13:22:27,336:INFO:Initializing predict_model()
2023-10-13 13:22:27,336:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f1fc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-13 13:22:27,336:INFO:Checking exceptions
2023-10-13 13:22:27,336:INFO:Preloading libraries
2023-10-13 13:22:27,336:INFO:Set up data.
2023-10-13 13:22:27,342:INFO:Set up index.
2023-10-13 13:22:27,409:INFO:Initializing predict_model()
2023-10-13 13:22:27,409:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f1fc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-13 13:22:27,409:INFO:Checking exceptions
2023-10-13 13:22:27,409:INFO:Preloading libraries
2023-10-13 13:22:27,409:INFO:Set up data.
2023-10-13 13:22:27,416:INFO:Set up index.
2023-10-13 13:22:27,485:INFO:Initializing predict_model()
2023-10-13 13:22:27,485:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f1fc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-13 13:22:27,485:INFO:Checking exceptions
2023-10-13 13:22:27,485:INFO:Preloading libraries
2023-10-13 13:22:27,485:INFO:Set up data.
2023-10-13 13:22:27,491:INFO:Set up index.
2023-10-13 13:22:27,661:INFO:Initializing predict_model()
2023-10-13 13:22:27,662:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f1fc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f2920>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-13 13:22:27,662:INFO:Checking exceptions
2023-10-13 13:22:27,662:INFO:Preloading libraries
2023-10-13 13:22:27,662:INFO:Set up data.
2023-10-13 13:22:27,671:INFO:Set up index.
2023-10-13 13:22:36,228:INFO:Initializing predict_model()
2023-10-13 13:22:36,229:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383cb20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f18d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabac0>)
2023-10-13 13:22:36,229:INFO:Checking exceptions
2023-10-13 13:22:36,229:INFO:Preloading libraries
2023-10-13 13:22:36,231:INFO:Set up data.
2023-10-13 13:22:36,263:INFO:Set up index.
2023-10-13 13:22:36,394:INFO:Initializing predict_model()
2023-10-13 13:22:36,394:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b4070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabac0>)
2023-10-13 13:22:36,394:INFO:Checking exceptions
2023-10-13 13:22:36,394:INFO:Preloading libraries
2023-10-13 13:22:36,395:INFO:Set up data.
2023-10-13 13:22:36,401:INFO:Set up index.
2023-10-13 13:22:36,472:INFO:Initializing predict_model()
2023-10-13 13:22:36,472:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c24f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabac0>)
2023-10-13 13:22:36,472:INFO:Checking exceptions
2023-10-13 13:22:36,472:INFO:Preloading libraries
2023-10-13 13:22:36,472:INFO:Set up data.
2023-10-13 13:22:36,478:INFO:Set up index.
2023-10-13 13:22:36,546:INFO:Initializing predict_model()
2023-10-13 13:22:36,546:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b2560>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabac0>)
2023-10-13 13:22:36,546:INFO:Checking exceptions
2023-10-13 13:22:36,546:INFO:Preloading libraries
2023-10-13 13:22:36,546:INFO:Set up data.
2023-10-13 13:22:36,552:INFO:Set up index.
2023-10-13 13:22:36,619:INFO:Initializing predict_model()
2023-10-13 13:22:36,619:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383e3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f2920>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabac0>)
2023-10-13 13:22:36,619:INFO:Checking exceptions
2023-10-13 13:22:36,619:INFO:Preloading libraries
2023-10-13 13:22:36,619:INFO:Set up data.
2023-10-13 13:22:36,625:INFO:Set up index.
2023-10-13 13:22:45,113:INFO:Initializing predict_model()
2023-10-13 13:22:45,114:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c26a10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f18d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff2e0>)
2023-10-13 13:22:45,115:INFO:Checking exceptions
2023-10-13 13:22:45,115:INFO:Preloading libraries
2023-10-13 13:22:45,116:INFO:Set up data.
2023-10-13 13:22:45,141:INFO:Set up index.
2023-10-13 13:22:45,301:INFO:Initializing predict_model()
2023-10-13 13:22:45,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a5c90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 13:22:45,301:INFO:Checking exceptions
2023-10-13 13:22:45,301:INFO:Preloading libraries
2023-10-13 13:22:45,301:INFO:Set up data.
2023-10-13 13:22:45,308:INFO:Set up index.
2023-10-13 13:22:45,382:INFO:Initializing predict_model()
2023-10-13 13:22:45,383:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383dc30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 13:22:45,383:INFO:Checking exceptions
2023-10-13 13:22:45,383:INFO:Preloading libraries
2023-10-13 13:22:45,383:INFO:Set up data.
2023-10-13 13:22:45,389:INFO:Set up index.
2023-10-13 13:22:45,462:INFO:Initializing predict_model()
2023-10-13 13:22:45,462:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a3a2f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 13:22:45,462:INFO:Checking exceptions
2023-10-13 13:22:45,462:INFO:Preloading libraries
2023-10-13 13:22:45,462:INFO:Set up data.
2023-10-13 13:22:45,468:INFO:Set up index.
2023-10-13 13:22:45,540:INFO:Initializing predict_model()
2023-10-13 13:22:45,540:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c25b70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f2920>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 13:22:45,540:INFO:Checking exceptions
2023-10-13 13:22:45,540:INFO:Preloading libraries
2023-10-13 13:22:45,540:INFO:Set up data.
2023-10-13 13:22:45,546:INFO:Set up index.
2023-10-13 13:22:54,855:INFO:Initializing load_model()
2023-10-13 13:22:54,859:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:54,873:INFO:Initializing load_model()
2023-10-13 13:22:54,890:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:54,894:INFO:Initializing load_model()
2023-10-13 13:22:54,894:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:54,897:INFO:Initializing load_model()
2023-10-13 13:22:54,897:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:54,899:INFO:Initializing load_model()
2023-10-13 13:22:54,899:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:22:54,910:INFO:Initializing predict_model()
2023-10-13 13:22:54,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb6110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f0fa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabb50>)
2023-10-13 13:22:54,910:INFO:Checking exceptions
2023-10-13 13:22:54,910:INFO:Preloading libraries
2023-10-13 13:22:54,910:INFO:Set up data.
2023-10-13 13:22:54,919:INFO:Set up index.
2023-10-13 13:22:55,037:INFO:Initializing predict_model()
2023-10-13 13:22:55,037:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e2c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:22:55,037:INFO:Checking exceptions
2023-10-13 13:22:55,037:INFO:Preloading libraries
2023-10-13 13:22:55,037:INFO:Set up data.
2023-10-13 13:22:55,044:INFO:Set up index.
2023-10-13 13:22:55,116:INFO:Initializing predict_model()
2023-10-13 13:22:55,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e2c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:22:55,116:INFO:Checking exceptions
2023-10-13 13:22:55,116:INFO:Preloading libraries
2023-10-13 13:22:55,117:INFO:Set up data.
2023-10-13 13:22:55,123:INFO:Set up index.
2023-10-13 13:22:55,192:INFO:Initializing predict_model()
2023-10-13 13:22:55,192:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e2c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:22:55,192:INFO:Checking exceptions
2023-10-13 13:22:55,192:INFO:Preloading libraries
2023-10-13 13:22:55,192:INFO:Set up data.
2023-10-13 13:22:55,198:INFO:Set up index.
2023-10-13 13:22:55,269:INFO:Initializing predict_model()
2023-10-13 13:22:55,269:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e2c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x293c275b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 13:22:55,269:INFO:Checking exceptions
2023-10-13 13:22:55,269:INFO:Preloading libraries
2023-10-13 13:22:55,269:INFO:Set up data.
2023-10-13 13:22:55,275:INFO:Set up index.
2023-10-13 13:23:03,789:INFO:Initializing predict_model()
2023-10-13 13:23:03,792:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b10c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2971f0fa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-13 13:23:03,792:INFO:Checking exceptions
2023-10-13 13:23:03,792:INFO:Preloading libraries
2023-10-13 13:23:03,794:INFO:Set up data.
2023-10-13 13:23:03,847:INFO:Set up index.
2023-10-13 13:23:03,997:INFO:Initializing predict_model()
2023-10-13 13:23:03,997:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e2c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-13 13:23:03,997:INFO:Checking exceptions
2023-10-13 13:23:03,997:INFO:Preloading libraries
2023-10-13 13:23:03,997:INFO:Set up data.
2023-10-13 13:23:04,003:INFO:Set up index.
2023-10-13 13:23:04,075:INFO:Initializing predict_model()
2023-10-13 13:23:04,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e2c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-13 13:23:04,075:INFO:Checking exceptions
2023-10-13 13:23:04,076:INFO:Preloading libraries
2023-10-13 13:23:04,076:INFO:Set up data.
2023-10-13 13:23:04,082:INFO:Set up index.
2023-10-13 13:23:04,153:INFO:Initializing predict_model()
2023-10-13 13:23:04,153:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e2c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-13 13:23:04,153:INFO:Checking exceptions
2023-10-13 13:23:04,153:INFO:Preloading libraries
2023-10-13 13:23:04,153:INFO:Set up data.
2023-10-13 13:23:04,159:INFO:Set up index.
2023-10-13 13:23:04,235:INFO:Initializing predict_model()
2023-10-13 13:23:04,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x292c2e2c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x293c275b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-13 13:23:04,235:INFO:Checking exceptions
2023-10-13 13:23:04,235:INFO:Preloading libraries
2023-10-13 13:23:04,235:INFO:Set up data.
2023-10-13 13:23:04,241:INFO:Set up index.
2023-10-13 13:23:09,204:INFO:Initializing load_model()
2023-10-13 13:23:09,204:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:23:09,210:INFO:Initializing load_model()
2023-10-13 13:23:09,210:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:23:09,213:INFO:Initializing load_model()
2023-10-13 13:23:09,213:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:23:09,215:INFO:Initializing load_model()
2023-10-13 13:23:09,215:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:23:09,218:INFO:Initializing load_model()
2023-10-13 13:23:09,219:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:23:09,231:INFO:Initializing predict_model()
2023-10-13 13:23:09,231:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b1570>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabac0>)
2023-10-13 13:23:09,231:INFO:Checking exceptions
2023-10-13 13:23:09,231:INFO:Preloading libraries
2023-10-13 13:23:09,231:INFO:Set up data.
2023-10-13 13:23:09,238:INFO:Set up index.
2023-10-13 13:23:09,351:INFO:Initializing predict_model()
2023-10-13 13:23:09,351:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f2950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabac0>)
2023-10-13 13:23:09,351:INFO:Checking exceptions
2023-10-13 13:23:09,351:INFO:Preloading libraries
2023-10-13 13:23:09,351:INFO:Set up data.
2023-10-13 13:23:09,357:INFO:Set up index.
2023-10-13 13:23:09,432:INFO:Initializing predict_model()
2023-10-13 13:23:09,433:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f2950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabac0>)
2023-10-13 13:23:09,433:INFO:Checking exceptions
2023-10-13 13:23:09,433:INFO:Preloading libraries
2023-10-13 13:23:09,433:INFO:Set up data.
2023-10-13 13:23:09,439:INFO:Set up index.
2023-10-13 13:23:09,510:INFO:Initializing predict_model()
2023-10-13 13:23:09,510:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f2950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:23:09,510:INFO:Checking exceptions
2023-10-13 13:23:09,510:INFO:Preloading libraries
2023-10-13 13:23:09,510:INFO:Set up data.
2023-10-13 13:23:09,516:INFO:Set up index.
2023-10-13 13:23:09,586:INFO:Initializing predict_model()
2023-10-13 13:23:09,586:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f2950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 13:23:09,586:INFO:Checking exceptions
2023-10-13 13:23:09,586:INFO:Preloading libraries
2023-10-13 13:23:09,586:INFO:Set up data.
2023-10-13 13:23:09,592:INFO:Set up index.
2023-10-13 13:23:18,098:INFO:Initializing predict_model()
2023-10-13 13:23:18,100:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294839240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff2e0>)
2023-10-13 13:23:18,100:INFO:Checking exceptions
2023-10-13 13:23:18,100:INFO:Preloading libraries
2023-10-13 13:23:18,101:INFO:Set up data.
2023-10-13 13:23:18,124:INFO:Set up index.
2023-10-13 13:23:18,274:INFO:Initializing predict_model()
2023-10-13 13:23:18,274:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb7fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 13:23:18,274:INFO:Checking exceptions
2023-10-13 13:23:18,274:INFO:Preloading libraries
2023-10-13 13:23:18,274:INFO:Set up data.
2023-10-13 13:23:18,282:INFO:Set up index.
2023-10-13 13:23:18,353:INFO:Initializing predict_model()
2023-10-13 13:23:18,353:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb7fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 13:23:18,353:INFO:Checking exceptions
2023-10-13 13:23:18,353:INFO:Preloading libraries
2023-10-13 13:23:18,354:INFO:Set up data.
2023-10-13 13:23:18,360:INFO:Set up index.
2023-10-13 13:23:18,429:INFO:Initializing predict_model()
2023-10-13 13:23:18,429:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb7fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 13:23:18,429:INFO:Checking exceptions
2023-10-13 13:23:18,429:INFO:Preloading libraries
2023-10-13 13:23:18,429:INFO:Set up data.
2023-10-13 13:23:18,435:INFO:Set up index.
2023-10-13 13:23:18,506:INFO:Initializing predict_model()
2023-10-13 13:23:18,507:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb6560>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-13 13:23:18,507:INFO:Checking exceptions
2023-10-13 13:23:18,507:INFO:Preloading libraries
2023-10-13 13:23:18,507:INFO:Set up data.
2023-10-13 13:23:18,513:INFO:Set up index.
2023-10-13 13:23:27,052:INFO:Initializing predict_model()
2023-10-13 13:23:27,054:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a8a050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe830>)
2023-10-13 13:23:27,054:INFO:Checking exceptions
2023-10-13 13:23:27,054:INFO:Preloading libraries
2023-10-13 13:23:27,055:INFO:Set up data.
2023-10-13 13:23:27,081:INFO:Set up index.
2023-10-13 13:23:27,262:INFO:Initializing predict_model()
2023-10-13 13:23:27,263:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb5e40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:23:27,263:INFO:Checking exceptions
2023-10-13 13:23:27,263:INFO:Preloading libraries
2023-10-13 13:23:27,263:INFO:Set up data.
2023-10-13 13:23:27,269:INFO:Set up index.
2023-10-13 13:23:27,338:INFO:Initializing predict_model()
2023-10-13 13:23:27,338:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb5e40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:23:27,338:INFO:Checking exceptions
2023-10-13 13:23:27,338:INFO:Preloading libraries
2023-10-13 13:23:27,338:INFO:Set up data.
2023-10-13 13:23:27,344:INFO:Set up index.
2023-10-13 13:23:27,412:INFO:Initializing predict_model()
2023-10-13 13:23:27,412:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a74c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:23:27,413:INFO:Checking exceptions
2023-10-13 13:23:27,413:INFO:Preloading libraries
2023-10-13 13:23:27,413:INFO:Set up data.
2023-10-13 13:23:27,419:INFO:Set up index.
2023-10-13 13:23:27,487:INFO:Initializing predict_model()
2023-10-13 13:23:27,487:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb66e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:23:27,487:INFO:Checking exceptions
2023-10-13 13:23:27,487:INFO:Preloading libraries
2023-10-13 13:23:27,487:INFO:Set up data.
2023-10-13 13:23:27,493:INFO:Set up index.
2023-10-13 13:23:36,033:INFO:Initializing predict_model()
2023-10-13 13:23:36,035:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b1360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab640>)
2023-10-13 13:23:36,035:INFO:Checking exceptions
2023-10-13 13:23:36,035:INFO:Preloading libraries
2023-10-13 13:23:36,037:INFO:Set up data.
2023-10-13 13:23:36,063:INFO:Set up index.
2023-10-13 13:23:36,170:INFO:Initializing predict_model()
2023-10-13 13:23:36,170:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb66e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab640>)
2023-10-13 13:23:36,170:INFO:Checking exceptions
2023-10-13 13:23:36,170:INFO:Preloading libraries
2023-10-13 13:23:36,170:INFO:Set up data.
2023-10-13 13:23:36,176:INFO:Set up index.
2023-10-13 13:23:36,247:INFO:Initializing predict_model()
2023-10-13 13:23:36,247:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a7c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab640>)
2023-10-13 13:23:36,247:INFO:Checking exceptions
2023-10-13 13:23:36,247:INFO:Preloading libraries
2023-10-13 13:23:36,248:INFO:Set up data.
2023-10-13 13:23:36,254:INFO:Set up index.
2023-10-13 13:23:36,322:INFO:Initializing predict_model()
2023-10-13 13:23:36,322:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a7c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 13:23:36,322:INFO:Checking exceptions
2023-10-13 13:23:36,322:INFO:Preloading libraries
2023-10-13 13:23:36,323:INFO:Set up data.
2023-10-13 13:23:36,329:INFO:Set up index.
2023-10-13 13:23:36,397:INFO:Initializing predict_model()
2023-10-13 13:23:36,397:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a7c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 13:23:36,397:INFO:Checking exceptions
2023-10-13 13:23:36,397:INFO:Preloading libraries
2023-10-13 13:23:36,397:INFO:Set up data.
2023-10-13 13:23:36,403:INFO:Set up index.
2023-10-13 13:23:44,928:INFO:Initializing predict_model()
2023-10-13 13:23:44,930:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f2b90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab1c0>)
2023-10-13 13:23:44,930:INFO:Checking exceptions
2023-10-13 13:23:44,930:INFO:Preloading libraries
2023-10-13 13:23:44,932:INFO:Set up data.
2023-10-13 13:23:44,956:INFO:Set up index.
2023-10-13 13:23:45,079:INFO:Initializing predict_model()
2023-10-13 13:23:45,079:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a8af50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab1c0>)
2023-10-13 13:23:45,079:INFO:Checking exceptions
2023-10-13 13:23:45,079:INFO:Preloading libraries
2023-10-13 13:23:45,079:INFO:Set up data.
2023-10-13 13:23:45,086:INFO:Set up index.
2023-10-13 13:23:45,154:INFO:Initializing predict_model()
2023-10-13 13:23:45,154:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b34f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 13:23:45,154:INFO:Checking exceptions
2023-10-13 13:23:45,154:INFO:Preloading libraries
2023-10-13 13:23:45,154:INFO:Set up data.
2023-10-13 13:23:45,160:INFO:Set up index.
2023-10-13 13:23:45,228:INFO:Initializing predict_model()
2023-10-13 13:23:45,228:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b4070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 13:23:45,228:INFO:Checking exceptions
2023-10-13 13:23:45,228:INFO:Preloading libraries
2023-10-13 13:23:45,228:INFO:Set up data.
2023-10-13 13:23:45,234:INFO:Set up index.
2023-10-13 13:23:45,301:INFO:Initializing predict_model()
2023-10-13 13:23:45,302:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a88c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 13:23:45,302:INFO:Checking exceptions
2023-10-13 13:23:45,302:INFO:Preloading libraries
2023-10-13 13:23:45,302:INFO:Set up data.
2023-10-13 13:23:45,307:INFO:Set up index.
2023-10-13 13:23:53,805:INFO:Initializing predict_model()
2023-10-13 13:23:53,806:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29483acb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe050>)
2023-10-13 13:23:53,806:INFO:Checking exceptions
2023-10-13 13:23:53,806:INFO:Preloading libraries
2023-10-13 13:23:53,807:INFO:Set up data.
2023-10-13 13:23:53,831:INFO:Set up index.
2023-10-13 13:23:53,926:INFO:Initializing predict_model()
2023-10-13 13:23:53,926:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb74f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-13 13:23:53,926:INFO:Checking exceptions
2023-10-13 13:23:53,926:INFO:Preloading libraries
2023-10-13 13:23:53,926:INFO:Set up data.
2023-10-13 13:23:53,932:INFO:Set up index.
2023-10-13 13:23:54,000:INFO:Initializing predict_model()
2023-10-13 13:23:54,001:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb74f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-13 13:23:54,001:INFO:Checking exceptions
2023-10-13 13:23:54,001:INFO:Preloading libraries
2023-10-13 13:23:54,001:INFO:Set up data.
2023-10-13 13:23:54,007:INFO:Set up index.
2023-10-13 13:23:54,075:INFO:Initializing predict_model()
2023-10-13 13:23:54,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb74f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-13 13:23:54,075:INFO:Checking exceptions
2023-10-13 13:23:54,075:INFO:Preloading libraries
2023-10-13 13:23:54,075:INFO:Set up data.
2023-10-13 13:23:54,081:INFO:Set up index.
2023-10-13 13:23:54,149:INFO:Initializing predict_model()
2023-10-13 13:23:54,149:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x296fb74f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-13 13:23:54,149:INFO:Checking exceptions
2023-10-13 13:23:54,149:INFO:Preloading libraries
2023-10-13 13:23:54,149:INFO:Set up data.
2023-10-13 13:23:54,155:INFO:Set up index.
2023-10-13 13:24:02,680:INFO:Initializing predict_model()
2023-10-13 13:24:02,681:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e6740>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296faba30>)
2023-10-13 13:24:02,682:INFO:Checking exceptions
2023-10-13 13:24:02,682:INFO:Preloading libraries
2023-10-13 13:24:02,684:INFO:Set up data.
2023-10-13 13:24:02,705:INFO:Set up index.
2023-10-13 13:24:02,877:INFO:Initializing predict_model()
2023-10-13 13:24:02,877:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfe86d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296faba30>)
2023-10-13 13:24:02,877:INFO:Checking exceptions
2023-10-13 13:24:02,877:INFO:Preloading libraries
2023-10-13 13:24:02,877:INFO:Set up data.
2023-10-13 13:24:02,883:INFO:Set up index.
2023-10-13 13:24:02,956:INFO:Initializing predict_model()
2023-10-13 13:24:02,957:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfe86d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 13:24:02,957:INFO:Checking exceptions
2023-10-13 13:24:02,957:INFO:Preloading libraries
2023-10-13 13:24:02,957:INFO:Set up data.
2023-10-13 13:24:02,963:INFO:Set up index.
2023-10-13 13:24:03,032:INFO:Initializing predict_model()
2023-10-13 13:24:03,032:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfe86d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 13:24:03,032:INFO:Checking exceptions
2023-10-13 13:24:03,032:INFO:Preloading libraries
2023-10-13 13:24:03,032:INFO:Set up data.
2023-10-13 13:24:03,038:INFO:Set up index.
2023-10-13 13:24:03,106:INFO:Initializing predict_model()
2023-10-13 13:24:03,106:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28bfe86d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 13:24:03,106:INFO:Checking exceptions
2023-10-13 13:24:03,106:INFO:Preloading libraries
2023-10-13 13:24:03,106:INFO:Set up data.
2023-10-13 13:24:03,112:INFO:Set up index.
2023-10-13 13:24:11,627:INFO:Initializing predict_model()
2023-10-13 13:24:11,628:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299255c30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab1c0>)
2023-10-13 13:24:11,628:INFO:Checking exceptions
2023-10-13 13:24:11,629:INFO:Preloading libraries
2023-10-13 13:24:11,629:INFO:Set up data.
2023-10-13 13:24:11,652:INFO:Set up index.
2023-10-13 13:24:11,747:INFO:Initializing predict_model()
2023-10-13 13:24:11,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b1db0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab1c0>)
2023-10-13 13:24:11,748:INFO:Checking exceptions
2023-10-13 13:24:11,748:INFO:Preloading libraries
2023-10-13 13:24:11,748:INFO:Set up data.
2023-10-13 13:24:11,754:INFO:Set up index.
2023-10-13 13:24:11,823:INFO:Initializing predict_model()
2023-10-13 13:24:11,823:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b32b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab1c0>)
2023-10-13 13:24:11,823:INFO:Checking exceptions
2023-10-13 13:24:11,823:INFO:Preloading libraries
2023-10-13 13:24:11,823:INFO:Set up data.
2023-10-13 13:24:11,829:INFO:Set up index.
2023-10-13 13:24:11,897:INFO:Initializing predict_model()
2023-10-13 13:24:11,897:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2948396f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab1c0>)
2023-10-13 13:24:11,897:INFO:Checking exceptions
2023-10-13 13:24:11,897:INFO:Preloading libraries
2023-10-13 13:24:11,897:INFO:Set up data.
2023-10-13 13:24:11,903:INFO:Set up index.
2023-10-13 13:24:11,970:INFO:Initializing predict_model()
2023-10-13 13:24:11,970:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b2e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab1c0>)
2023-10-13 13:24:11,971:INFO:Checking exceptions
2023-10-13 13:24:11,971:INFO:Preloading libraries
2023-10-13 13:24:11,971:INFO:Set up data.
2023-10-13 13:24:11,976:INFO:Set up index.
2023-10-13 13:24:20,531:INFO:Initializing predict_model()
2023-10-13 13:24:20,531:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383e9e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 13:24:20,531:INFO:Checking exceptions
2023-10-13 13:24:20,531:INFO:Preloading libraries
2023-10-13 13:24:20,532:INFO:Set up data.
2023-10-13 13:24:20,557:INFO:Set up index.
2023-10-13 13:24:20,651:INFO:Initializing predict_model()
2023-10-13 13:24:20,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a8a4d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 13:24:20,652:INFO:Checking exceptions
2023-10-13 13:24:20,652:INFO:Preloading libraries
2023-10-13 13:24:20,652:INFO:Set up data.
2023-10-13 13:24:20,658:INFO:Set up index.
2023-10-13 13:24:20,727:INFO:Initializing predict_model()
2023-10-13 13:24:20,727:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383ff10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 13:24:20,727:INFO:Checking exceptions
2023-10-13 13:24:20,727:INFO:Preloading libraries
2023-10-13 13:24:20,727:INFO:Set up data.
2023-10-13 13:24:20,733:INFO:Set up index.
2023-10-13 13:24:20,802:INFO:Initializing predict_model()
2023-10-13 13:24:20,802:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29483a980>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 13:24:20,802:INFO:Checking exceptions
2023-10-13 13:24:20,802:INFO:Preloading libraries
2023-10-13 13:24:20,802:INFO:Set up data.
2023-10-13 13:24:20,808:INFO:Set up index.
2023-10-13 13:24:20,876:INFO:Initializing predict_model()
2023-10-13 13:24:20,876:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c26890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 13:24:20,876:INFO:Checking exceptions
2023-10-13 13:24:20,876:INFO:Preloading libraries
2023-10-13 13:24:20,876:INFO:Set up data.
2023-10-13 13:24:20,882:INFO:Set up index.
2023-10-13 13:24:29,395:INFO:Initializing predict_model()
2023-10-13 13:24:29,397:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c244c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483bfa0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:24:29,398:INFO:Checking exceptions
2023-10-13 13:24:29,398:INFO:Preloading libraries
2023-10-13 13:24:29,399:INFO:Set up data.
2023-10-13 13:24:29,423:INFO:Set up index.
2023-10-13 13:24:29,597:INFO:Initializing predict_model()
2023-10-13 13:24:29,597:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f1390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:24:29,597:INFO:Checking exceptions
2023-10-13 13:24:29,597:INFO:Preloading libraries
2023-10-13 13:24:29,597:INFO:Set up data.
2023-10-13 13:24:29,603:INFO:Set up index.
2023-10-13 13:24:29,672:INFO:Initializing predict_model()
2023-10-13 13:24:29,672:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39d20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:24:29,672:INFO:Checking exceptions
2023-10-13 13:24:29,672:INFO:Preloading libraries
2023-10-13 13:24:29,672:INFO:Set up data.
2023-10-13 13:24:29,678:INFO:Set up index.
2023-10-13 13:24:29,747:INFO:Initializing predict_model()
2023-10-13 13:24:29,747:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39d20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:24:29,747:INFO:Checking exceptions
2023-10-13 13:24:29,747:INFO:Preloading libraries
2023-10-13 13:24:29,747:INFO:Set up data.
2023-10-13 13:24:29,753:INFO:Set up index.
2023-10-13 13:24:29,822:INFO:Initializing predict_model()
2023-10-13 13:24:29,822:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39d20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b2e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 13:24:29,822:INFO:Checking exceptions
2023-10-13 13:24:29,822:INFO:Preloading libraries
2023-10-13 13:24:29,822:INFO:Set up data.
2023-10-13 13:24:29,828:INFO:Set up index.
2023-10-13 13:25:37,088:INFO:Initializing load_model()
2023-10-13 13:25:37,089:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:25:37,092:INFO:Initializing load_model()
2023-10-13 13:25:37,092:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:25:37,095:INFO:Initializing load_model()
2023-10-13 13:25:37,095:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:25:37,097:INFO:Initializing load_model()
2023-10-13 13:25:37,097:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:25:37,099:INFO:Initializing load_model()
2023-10-13 13:25:37,099:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:25:37,109:INFO:Initializing predict_model()
2023-10-13 13:25:37,109:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a393c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x293c26d70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab910>)
2023-10-13 13:25:37,109:INFO:Checking exceptions
2023-10-13 13:25:37,110:INFO:Preloading libraries
2023-10-13 13:25:37,110:INFO:Set up data.
2023-10-13 13:25:37,117:INFO:Set up index.
2023-10-13 13:25:37,241:INFO:Initializing predict_model()
2023-10-13 13:25:37,241:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a1de0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 13:25:37,241:INFO:Checking exceptions
2023-10-13 13:25:37,241:INFO:Preloading libraries
2023-10-13 13:25:37,241:INFO:Set up data.
2023-10-13 13:25:37,248:INFO:Set up index.
2023-10-13 13:25:37,323:INFO:Initializing predict_model()
2023-10-13 13:25:37,323:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a3b400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 13:25:37,323:INFO:Checking exceptions
2023-10-13 13:25:37,323:INFO:Preloading libraries
2023-10-13 13:25:37,323:INFO:Set up data.
2023-10-13 13:25:37,329:INFO:Set up index.
2023-10-13 13:25:37,402:INFO:Initializing predict_model()
2023-10-13 13:25:37,403:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e5c90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 13:25:37,403:INFO:Checking exceptions
2023-10-13 13:25:37,403:INFO:Preloading libraries
2023-10-13 13:25:37,403:INFO:Set up data.
2023-10-13 13:25:37,409:INFO:Set up index.
2023-10-13 13:25:37,479:INFO:Initializing predict_model()
2023-10-13 13:25:37,479:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c25810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2938b3ac0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 13:25:37,479:INFO:Checking exceptions
2023-10-13 13:25:37,479:INFO:Preloading libraries
2023-10-13 13:25:37,479:INFO:Set up data.
2023-10-13 13:25:37,485:INFO:Set up index.
2023-10-13 13:25:41,138:INFO:Initializing load_model()
2023-10-13 13:25:41,138:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:25:41,140:INFO:Initializing load_model()
2023-10-13 13:25:41,140:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:25:41,141:INFO:Initializing load_model()
2023-10-13 13:25:41,141:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:25:41,142:INFO:Initializing load_model()
2023-10-13 13:25:41,142:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:25:41,144:INFO:Initializing load_model()
2023-10-13 13:25:41,144:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:26:57,658:INFO:Initializing load_model()
2023-10-13 13:26:57,659:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:26:57,666:INFO:Initializing load_model()
2023-10-13 13:26:57,666:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:26:57,668:INFO:Initializing load_model()
2023-10-13 13:26:57,669:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:26:57,671:INFO:Initializing load_model()
2023-10-13 13:26:57,671:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:26:57,673:INFO:Initializing load_model()
2023-10-13 13:26:57,673:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:27:37,674:INFO:Initializing load_model()
2023-10-13 13:27:37,674:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:27:37,677:INFO:Initializing load_model()
2023-10-13 13:27:37,677:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:27:37,680:INFO:Initializing load_model()
2023-10-13 13:27:37,681:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:27:37,682:INFO:Initializing load_model()
2023-10-13 13:27:37,682:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:27:37,684:INFO:Initializing load_model()
2023-10-13 13:27:37,684:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:28:43,638:INFO:Initializing load_model()
2023-10-13 13:28:43,638:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:28:43,641:INFO:Initializing load_model()
2023-10-13 13:28:43,641:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:28:43,647:INFO:Initializing load_model()
2023-10-13 13:28:43,647:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:28:43,649:INFO:Initializing load_model()
2023-10-13 13:28:43,649:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:28:43,651:INFO:Initializing load_model()
2023-10-13 13:28:43,651:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:29:07,034:INFO:Initializing load_model()
2023-10-13 13:29:07,035:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:29:07,038:INFO:Initializing load_model()
2023-10-13 13:29:07,039:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:29:07,042:INFO:Initializing load_model()
2023-10-13 13:29:07,042:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:29:07,045:INFO:Initializing load_model()
2023-10-13 13:29:07,045:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:29:07,046:INFO:Initializing load_model()
2023-10-13 13:29:07,047:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:40,570:INFO:Initializing load_model()
2023-10-13 13:37:40,572:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:40,586:INFO:Initializing load_model()
2023-10-13 13:37:40,586:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:40,598:INFO:Initializing load_model()
2023-10-13 13:37:40,598:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:40,600:INFO:Initializing load_model()
2023-10-13 13:37:40,600:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:40,605:INFO:Initializing load_model()
2023-10-13 13:37:40,605:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:57,042:INFO:Initializing load_model()
2023-10-13 13:37:57,043:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:57,049:INFO:Initializing load_model()
2023-10-13 13:37:57,049:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:57,053:INFO:Initializing load_model()
2023-10-13 13:37:57,053:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:57,056:INFO:Initializing load_model()
2023-10-13 13:37:57,056:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:37:57,059:INFO:Initializing load_model()
2023-10-13 13:37:57,059:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:01,116:INFO:Initializing load_model()
2023-10-13 13:38:01,116:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:01,124:INFO:Initializing load_model()
2023-10-13 13:38:01,125:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:01,126:INFO:Initializing load_model()
2023-10-13 13:38:01,127:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:01,128:INFO:Initializing load_model()
2023-10-13 13:38:01,128:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:01,130:INFO:Initializing load_model()
2023-10-13 13:38:01,130:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:08,414:INFO:Initializing load_model()
2023-10-13 13:38:08,415:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:08,421:INFO:Initializing load_model()
2023-10-13 13:38:08,421:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:08,423:INFO:Initializing load_model()
2023-10-13 13:38:08,423:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:08,425:INFO:Initializing load_model()
2023-10-13 13:38:08,425:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:08,426:INFO:Initializing load_model()
2023-10-13 13:38:08,426:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:13,136:INFO:Initializing load_model()
2023-10-13 13:38:13,136:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:13,137:INFO:Initializing load_model()
2023-10-13 13:38:13,137:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:13,139:INFO:Initializing load_model()
2023-10-13 13:38:13,139:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:13,140:INFO:Initializing load_model()
2023-10-13 13:38:13,140:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:13,142:INFO:Initializing load_model()
2023-10-13 13:38:13,142:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:17,176:INFO:Initializing load_model()
2023-10-13 13:38:17,176:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:17,177:INFO:Initializing load_model()
2023-10-13 13:38:17,177:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:17,178:INFO:Initializing load_model()
2023-10-13 13:38:17,178:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:17,180:INFO:Initializing load_model()
2023-10-13 13:38:17,180:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:17,181:INFO:Initializing load_model()
2023-10-13 13:38:17,181:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:27,209:INFO:Initializing load_model()
2023-10-13 13:38:27,210:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:27,212:INFO:Initializing load_model()
2023-10-13 13:38:27,213:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:27,215:INFO:Initializing load_model()
2023-10-13 13:38:27,215:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:27,218:INFO:Initializing load_model()
2023-10-13 13:38:27,218:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:38:27,221:INFO:Initializing load_model()
2023-10-13 13:38:27,221:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:42:34,913:INFO:Initializing load_model()
2023-10-13 13:42:34,914:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:42:34,928:INFO:Initializing load_model()
2023-10-13 13:42:34,928:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:42:34,936:INFO:Initializing load_model()
2023-10-13 13:42:34,936:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:42:34,938:INFO:Initializing load_model()
2023-10-13 13:42:34,938:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:42:34,940:INFO:Initializing load_model()
2023-10-13 13:42:34,940:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:32,024:INFO:Initializing load_model()
2023-10-13 13:43:32,025:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:32,036:INFO:Initializing load_model()
2023-10-13 13:43:32,036:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:32,049:INFO:Initializing load_model()
2023-10-13 13:43:32,049:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:32,051:INFO:Initializing load_model()
2023-10-13 13:43:32,051:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:32,053:INFO:Initializing load_model()
2023-10-13 13:43:32,053:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:36,566:INFO:Initializing load_model()
2023-10-13 13:43:36,567:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:36,568:INFO:Initializing load_model()
2023-10-13 13:43:36,568:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:36,570:INFO:Initializing load_model()
2023-10-13 13:43:36,570:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:36,571:INFO:Initializing load_model()
2023-10-13 13:43:36,571:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:36,572:INFO:Initializing load_model()
2023-10-13 13:43:36,572:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:55,676:INFO:Initializing load_model()
2023-10-13 13:43:55,676:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:55,679:INFO:Initializing load_model()
2023-10-13 13:43:55,679:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:55,682:INFO:Initializing load_model()
2023-10-13 13:43:55,682:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:55,684:INFO:Initializing load_model()
2023-10-13 13:43:55,684:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:43:55,685:INFO:Initializing load_model()
2023-10-13 13:43:55,685:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:41,375:WARNING:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

2023-10-13 13:44:44,684:INFO:Initializing load_model()
2023-10-13 13:44:44,685:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:44,688:INFO:Initializing load_model()
2023-10-13 13:44:44,688:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:44,690:INFO:Initializing load_model()
2023-10-13 13:44:44,690:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:44,692:INFO:Initializing load_model()
2023-10-13 13:44:44,692:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:44,694:INFO:Initializing load_model()
2023-10-13 13:44:44,694:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:47,900:INFO:Initializing load_model()
2023-10-13 13:44:47,900:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:47,902:INFO:Initializing load_model()
2023-10-13 13:44:47,902:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:47,904:INFO:Initializing load_model()
2023-10-13 13:44:47,904:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:47,905:INFO:Initializing load_model()
2023-10-13 13:44:47,905:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:47,906:INFO:Initializing load_model()
2023-10-13 13:44:47,906:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:55,734:INFO:Initializing load_model()
2023-10-13 13:44:55,735:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:55,736:INFO:Initializing load_model()
2023-10-13 13:44:55,736:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:55,738:INFO:Initializing load_model()
2023-10-13 13:44:55,738:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:55,739:INFO:Initializing load_model()
2023-10-13 13:44:55,739:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:44:55,740:INFO:Initializing load_model()
2023-10-13 13:44:55,740:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:01,456:INFO:Initializing load_model()
2023-10-13 13:45:01,456:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:01,458:INFO:Initializing load_model()
2023-10-13 13:45:01,458:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:01,467:INFO:Initializing load_model()
2023-10-13 13:45:01,467:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:01,469:INFO:Initializing load_model()
2023-10-13 13:45:01,469:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:01,471:INFO:Initializing load_model()
2023-10-13 13:45:01,471:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,017:INFO:Initializing load_model()
2023-10-13 13:45:03,017:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,018:INFO:Initializing load_model()
2023-10-13 13:45:03,018:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,020:INFO:Initializing load_model()
2023-10-13 13:45:03,020:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,021:INFO:Initializing load_model()
2023-10-13 13:45:03,021:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,022:INFO:Initializing load_model()
2023-10-13 13:45:03,022:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,946:INFO:Initializing load_model()
2023-10-13 13:45:03,946:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,947:INFO:Initializing load_model()
2023-10-13 13:45:03,947:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,949:INFO:Initializing load_model()
2023-10-13 13:45:03,949:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,950:INFO:Initializing load_model()
2023-10-13 13:45:03,950:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:03,951:INFO:Initializing load_model()
2023-10-13 13:45:03,951:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:06,384:INFO:Initializing load_model()
2023-10-13 13:45:06,384:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:06,387:INFO:Initializing load_model()
2023-10-13 13:45:06,387:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:06,389:INFO:Initializing load_model()
2023-10-13 13:45:06,389:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:06,390:INFO:Initializing load_model()
2023-10-13 13:45:06,390:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:06,391:INFO:Initializing load_model()
2023-10-13 13:45:06,391:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,022:INFO:Initializing load_model()
2023-10-13 13:45:08,022:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,023:INFO:Initializing load_model()
2023-10-13 13:45:08,023:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,024:INFO:Initializing load_model()
2023-10-13 13:45:08,024:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,026:INFO:Initializing load_model()
2023-10-13 13:45:08,026:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,027:INFO:Initializing load_model()
2023-10-13 13:45:08,027:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,821:INFO:Initializing load_model()
2023-10-13 13:45:08,821:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,822:INFO:Initializing load_model()
2023-10-13 13:45:08,822:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,824:INFO:Initializing load_model()
2023-10-13 13:45:08,824:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,825:INFO:Initializing load_model()
2023-10-13 13:45:08,825:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:08,827:INFO:Initializing load_model()
2023-10-13 13:45:08,827:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:10,060:INFO:Initializing load_model()
2023-10-13 13:45:10,060:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:10,061:INFO:Initializing load_model()
2023-10-13 13:45:10,061:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:10,062:INFO:Initializing load_model()
2023-10-13 13:45:10,062:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:10,064:INFO:Initializing load_model()
2023-10-13 13:45:10,064:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:45:10,065:INFO:Initializing load_model()
2023-10-13 13:45:10,065:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:19,018:INFO:Initializing load_model()
2023-10-13 13:57:19,019:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:19,034:INFO:Initializing load_model()
2023-10-13 13:57:19,035:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:19,046:INFO:Initializing load_model()
2023-10-13 13:57:19,046:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:19,049:INFO:Initializing load_model()
2023-10-13 13:57:19,049:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:19,051:INFO:Initializing load_model()
2023-10-13 13:57:19,051:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:24,035:INFO:Initializing load_model()
2023-10-13 13:57:24,035:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:24,037:INFO:Initializing load_model()
2023-10-13 13:57:24,037:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:24,044:INFO:Initializing load_model()
2023-10-13 13:57:24,044:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:24,046:INFO:Initializing load_model()
2023-10-13 13:57:24,046:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:24,048:INFO:Initializing load_model()
2023-10-13 13:57:24,048:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:26,919:INFO:Initializing load_model()
2023-10-13 13:57:26,919:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:26,920:INFO:Initializing load_model()
2023-10-13 13:57:26,920:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:26,923:INFO:Initializing load_model()
2023-10-13 13:57:26,923:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:26,925:INFO:Initializing load_model()
2023-10-13 13:57:26,925:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:57:26,927:INFO:Initializing load_model()
2023-10-13 13:57:26,927:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:49,756:INFO:Initializing load_model()
2023-10-13 13:58:49,757:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:49,768:INFO:Initializing load_model()
2023-10-13 13:58:49,768:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:49,779:INFO:Initializing load_model()
2023-10-13 13:58:49,779:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:49,781:INFO:Initializing load_model()
2023-10-13 13:58:49,781:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:49,783:INFO:Initializing load_model()
2023-10-13 13:58:49,783:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:54,260:INFO:Initializing load_model()
2023-10-13 13:58:54,260:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:54,261:INFO:Initializing load_model()
2023-10-13 13:58:54,262:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:54,263:INFO:Initializing load_model()
2023-10-13 13:58:54,263:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:54,264:INFO:Initializing load_model()
2023-10-13 13:58:54,265:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:54,266:INFO:Initializing load_model()
2023-10-13 13:58:54,266:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:57,761:INFO:Initializing load_model()
2023-10-13 13:58:57,761:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:57,762:INFO:Initializing load_model()
2023-10-13 13:58:57,762:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:57,764:INFO:Initializing load_model()
2023-10-13 13:58:57,764:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:57,765:INFO:Initializing load_model()
2023-10-13 13:58:57,765:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:57,767:INFO:Initializing load_model()
2023-10-13 13:58:57,767:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:58,826:INFO:Initializing load_model()
2023-10-13 13:58:58,826:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:58,827:INFO:Initializing load_model()
2023-10-13 13:58:58,827:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:58,828:INFO:Initializing load_model()
2023-10-13 13:58:58,828:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:58,830:INFO:Initializing load_model()
2023-10-13 13:58:58,830:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:58,831:INFO:Initializing load_model()
2023-10-13 13:58:58,831:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:59,580:INFO:Initializing load_model()
2023-10-13 13:58:59,580:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:59,581:INFO:Initializing load_model()
2023-10-13 13:58:59,581:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:59,582:INFO:Initializing load_model()
2023-10-13 13:58:59,582:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:59,584:INFO:Initializing load_model()
2023-10-13 13:58:59,584:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:58:59,585:INFO:Initializing load_model()
2023-10-13 13:58:59,585:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:00,328:INFO:Initializing load_model()
2023-10-13 13:59:00,329:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:00,335:INFO:Initializing load_model()
2023-10-13 13:59:00,335:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:00,337:INFO:Initializing load_model()
2023-10-13 13:59:00,337:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:00,339:INFO:Initializing load_model()
2023-10-13 13:59:00,339:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:00,340:INFO:Initializing load_model()
2023-10-13 13:59:00,340:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:01,137:INFO:Initializing load_model()
2023-10-13 13:59:01,137:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:01,138:INFO:Initializing load_model()
2023-10-13 13:59:01,138:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:01,139:INFO:Initializing load_model()
2023-10-13 13:59:01,139:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:01,141:INFO:Initializing load_model()
2023-10-13 13:59:01,141:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:01,142:INFO:Initializing load_model()
2023-10-13 13:59:01,142:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:58,541:INFO:Initializing load_model()
2023-10-13 13:59:58,541:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:58,545:INFO:Initializing load_model()
2023-10-13 13:59:58,546:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:58,548:INFO:Initializing load_model()
2023-10-13 13:59:58,548:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:58,551:INFO:Initializing load_model()
2023-10-13 13:59:58,551:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 13:59:58,553:INFO:Initializing load_model()
2023-10-13 13:59:58,553:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:01,266:INFO:Initializing load_model()
2023-10-13 14:00:01,266:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:01,268:INFO:Initializing load_model()
2023-10-13 14:00:01,268:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:01,273:INFO:Initializing load_model()
2023-10-13 14:00:01,273:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:01,276:INFO:Initializing load_model()
2023-10-13 14:00:01,276:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:01,278:INFO:Initializing load_model()
2023-10-13 14:00:01,278:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:04,653:INFO:Initializing load_model()
2023-10-13 14:00:04,653:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:04,654:INFO:Initializing load_model()
2023-10-13 14:00:04,654:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:04,656:INFO:Initializing load_model()
2023-10-13 14:00:04,656:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:04,657:INFO:Initializing load_model()
2023-10-13 14:00:04,657:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:04,658:INFO:Initializing load_model()
2023-10-13 14:00:04,658:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:08,456:WARNING:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

2023-10-13 14:00:11,387:INFO:Initializing load_model()
2023-10-13 14:00:11,387:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:11,390:INFO:Initializing load_model()
2023-10-13 14:00:11,390:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:11,391:INFO:Initializing load_model()
2023-10-13 14:00:11,391:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:11,393:INFO:Initializing load_model()
2023-10-13 14:00:11,393:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:11,394:INFO:Initializing load_model()
2023-10-13 14:00:11,394:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:12,898:INFO:Initializing load_model()
2023-10-13 14:00:12,898:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:12,899:INFO:Initializing load_model()
2023-10-13 14:00:12,899:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:12,900:INFO:Initializing load_model()
2023-10-13 14:00:12,900:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:12,901:INFO:Initializing load_model()
2023-10-13 14:00:12,901:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:12,903:INFO:Initializing load_model()
2023-10-13 14:00:12,903:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:15,267:INFO:Initializing load_model()
2023-10-13 14:00:15,267:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:15,268:INFO:Initializing load_model()
2023-10-13 14:00:15,268:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:15,269:INFO:Initializing load_model()
2023-10-13 14:00:15,269:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:15,270:INFO:Initializing load_model()
2023-10-13 14:00:15,270:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:15,272:INFO:Initializing load_model()
2023-10-13 14:00:15,272:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:48,568:INFO:Initializing load_model()
2023-10-13 14:00:48,568:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:48,571:INFO:Initializing load_model()
2023-10-13 14:00:48,571:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:48,577:INFO:Initializing load_model()
2023-10-13 14:00:48,577:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:48,580:INFO:Initializing load_model()
2023-10-13 14:00:48,580:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:48,583:INFO:Initializing load_model()
2023-10-13 14:00:48,585:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:53,407:INFO:Initializing load_model()
2023-10-13 14:00:53,408:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:53,410:INFO:Initializing load_model()
2023-10-13 14:00:53,411:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:53,412:INFO:Initializing load_model()
2023-10-13 14:00:53,412:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:53,414:INFO:Initializing load_model()
2023-10-13 14:00:53,414:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:53,415:INFO:Initializing load_model()
2023-10-13 14:00:53,415:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:55,598:WARNING:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

2023-10-13 14:00:58,745:INFO:Initializing load_model()
2023-10-13 14:00:58,745:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:58,747:INFO:Initializing load_model()
2023-10-13 14:00:58,747:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:58,749:INFO:Initializing load_model()
2023-10-13 14:00:58,749:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:58,750:INFO:Initializing load_model()
2023-10-13 14:00:58,750:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:00:58,752:INFO:Initializing load_model()
2023-10-13 14:00:58,752:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:00,245:INFO:Initializing load_model()
2023-10-13 14:01:00,246:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:00,249:INFO:Initializing load_model()
2023-10-13 14:01:00,249:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:00,251:INFO:Initializing load_model()
2023-10-13 14:01:00,251:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:00,257:INFO:Initializing load_model()
2023-10-13 14:01:00,257:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:00,262:INFO:Initializing load_model()
2023-10-13 14:01:00,262:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:03,197:INFO:Initializing load_model()
2023-10-13 14:01:03,197:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:03,198:INFO:Initializing load_model()
2023-10-13 14:01:03,198:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:03,200:INFO:Initializing load_model()
2023-10-13 14:01:03,200:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:03,202:INFO:Initializing load_model()
2023-10-13 14:01:03,202:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:01:03,204:INFO:Initializing load_model()
2023-10-13 14:01:03,204:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:22,430:INFO:Initializing load_model()
2023-10-13 14:02:22,430:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:22,433:INFO:Initializing load_model()
2023-10-13 14:02:22,433:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:22,436:INFO:Initializing load_model()
2023-10-13 14:02:22,436:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:22,438:INFO:Initializing load_model()
2023-10-13 14:02:22,438:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:22,440:INFO:Initializing load_model()
2023-10-13 14:02:22,440:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:24,888:INFO:Initializing load_model()
2023-10-13 14:02:24,888:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:24,890:INFO:Initializing load_model()
2023-10-13 14:02:24,890:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:24,891:INFO:Initializing load_model()
2023-10-13 14:02:24,891:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:24,892:INFO:Initializing load_model()
2023-10-13 14:02:24,892:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:24,893:INFO:Initializing load_model()
2023-10-13 14:02:24,894:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:27,535:INFO:Initializing load_model()
2023-10-13 14:02:27,535:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:27,537:INFO:Initializing load_model()
2023-10-13 14:02:27,537:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:27,538:INFO:Initializing load_model()
2023-10-13 14:02:27,538:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:27,539:INFO:Initializing load_model()
2023-10-13 14:02:27,539:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:27,541:INFO:Initializing load_model()
2023-10-13 14:02:27,541:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:44,451:INFO:Initializing load_model()
2023-10-13 14:02:44,451:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:44,455:INFO:Initializing load_model()
2023-10-13 14:02:44,455:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:44,457:INFO:Initializing load_model()
2023-10-13 14:02:44,457:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:44,460:INFO:Initializing load_model()
2023-10-13 14:02:44,460:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:02:44,462:INFO:Initializing load_model()
2023-10-13 14:02:44,462:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:23,218:INFO:Initializing load_model()
2023-10-13 14:03:23,303:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:23,307:INFO:Initializing load_model()
2023-10-13 14:03:23,307:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:23,311:INFO:Initializing load_model()
2023-10-13 14:03:23,311:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:23,314:INFO:Initializing load_model()
2023-10-13 14:03:23,314:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:23,318:INFO:Initializing load_model()
2023-10-13 14:03:23,318:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:27,673:INFO:Initializing load_model()
2023-10-13 14:03:27,673:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:27,675:INFO:Initializing load_model()
2023-10-13 14:03:27,675:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:27,677:INFO:Initializing load_model()
2023-10-13 14:03:27,677:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:27,678:INFO:Initializing load_model()
2023-10-13 14:03:27,678:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:03:27,679:INFO:Initializing load_model()
2023-10-13 14:03:27,679:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:20,120:INFO:Initializing load_model()
2023-10-13 14:04:20,121:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:20,128:INFO:Initializing load_model()
2023-10-13 14:04:20,129:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:20,132:INFO:Initializing load_model()
2023-10-13 14:04:20,132:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:20,134:INFO:Initializing load_model()
2023-10-13 14:04:20,134:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:20,137:INFO:Initializing load_model()
2023-10-13 14:04:20,137:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:22,519:INFO:Initializing load_model()
2023-10-13 14:04:22,519:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:22,520:INFO:Initializing load_model()
2023-10-13 14:04:22,520:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:22,522:INFO:Initializing load_model()
2023-10-13 14:04:22,522:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:22,524:INFO:Initializing load_model()
2023-10-13 14:04:22,524:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:22,525:INFO:Initializing load_model()
2023-10-13 14:04:22,525:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:26,725:INFO:Initializing load_model()
2023-10-13 14:04:26,725:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:26,727:INFO:Initializing load_model()
2023-10-13 14:04:26,727:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:26,729:INFO:Initializing load_model()
2023-10-13 14:04:26,730:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:26,731:INFO:Initializing load_model()
2023-10-13 14:04:26,731:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:26,732:INFO:Initializing load_model()
2023-10-13 14:04:26,732:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:46,823:INFO:Initializing load_model()
2023-10-13 14:04:46,824:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:46,827:INFO:Initializing load_model()
2023-10-13 14:04:46,827:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:46,830:INFO:Initializing load_model()
2023-10-13 14:04:46,830:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:46,832:INFO:Initializing load_model()
2023-10-13 14:04:46,832:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:04:46,834:INFO:Initializing load_model()
2023-10-13 14:04:46,834:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:42,556:INFO:Initializing load_model()
2023-10-13 14:05:42,556:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:42,559:INFO:Initializing load_model()
2023-10-13 14:05:42,559:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:42,561:INFO:Initializing load_model()
2023-10-13 14:05:42,561:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:42,563:INFO:Initializing load_model()
2023-10-13 14:05:42,563:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:42,565:INFO:Initializing load_model()
2023-10-13 14:05:42,565:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:56,930:INFO:Initializing load_model()
2023-10-13 14:05:56,931:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:56,935:INFO:Initializing load_model()
2023-10-13 14:05:56,935:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:56,937:INFO:Initializing load_model()
2023-10-13 14:05:56,937:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:56,939:INFO:Initializing load_model()
2023-10-13 14:05:56,939:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:56,941:INFO:Initializing load_model()
2023-10-13 14:05:56,941:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:58,759:INFO:Initializing load_model()
2023-10-13 14:05:58,760:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:58,761:INFO:Initializing load_model()
2023-10-13 14:05:58,761:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:58,763:INFO:Initializing load_model()
2023-10-13 14:05:58,763:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:58,764:INFO:Initializing load_model()
2023-10-13 14:05:58,764:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:05:58,765:INFO:Initializing load_model()
2023-10-13 14:05:58,765:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:09,452:INFO:Initializing load_model()
2023-10-13 14:06:09,452:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:09,455:INFO:Initializing load_model()
2023-10-13 14:06:09,455:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:09,461:INFO:Initializing load_model()
2023-10-13 14:06:09,461:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:09,464:INFO:Initializing load_model()
2023-10-13 14:06:09,464:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:09,466:INFO:Initializing load_model()
2023-10-13 14:06:09,466:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:11,886:INFO:Initializing load_model()
2023-10-13 14:06:11,887:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:11,888:INFO:Initializing load_model()
2023-10-13 14:06:11,888:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:11,889:INFO:Initializing load_model()
2023-10-13 14:06:11,889:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:11,890:INFO:Initializing load_model()
2023-10-13 14:06:11,890:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:06:11,892:INFO:Initializing load_model()
2023-10-13 14:06:11,892:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:07,030:INFO:Initializing load_model()
2023-10-13 14:09:07,030:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:07,033:INFO:Initializing load_model()
2023-10-13 14:09:07,033:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:07,036:INFO:Initializing load_model()
2023-10-13 14:09:07,036:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:07,038:INFO:Initializing load_model()
2023-10-13 14:09:07,038:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:07,040:INFO:Initializing load_model()
2023-10-13 14:09:07,040:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:09,356:INFO:Initializing load_model()
2023-10-13 14:09:09,356:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:09,357:INFO:Initializing load_model()
2023-10-13 14:09:09,357:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:09,358:INFO:Initializing load_model()
2023-10-13 14:09:09,358:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:09,360:INFO:Initializing load_model()
2023-10-13 14:09:09,360:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:09,361:INFO:Initializing load_model()
2023-10-13 14:09:09,361:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:13,684:INFO:Initializing load_model()
2023-10-13 14:09:13,684:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:13,686:INFO:Initializing load_model()
2023-10-13 14:09:13,687:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:13,694:INFO:Initializing load_model()
2023-10-13 14:09:13,694:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:13,697:INFO:Initializing load_model()
2023-10-13 14:09:13,698:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:09:13,699:INFO:Initializing load_model()
2023-10-13 14:09:13,699:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:07,746:INFO:Initializing load_model()
2023-10-13 14:17:07,746:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:07,760:INFO:Initializing load_model()
2023-10-13 14:17:07,760:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:07,775:INFO:Initializing load_model()
2023-10-13 14:17:07,775:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:07,778:INFO:Initializing load_model()
2023-10-13 14:17:07,778:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:07,780:INFO:Initializing load_model()
2023-10-13 14:17:07,780:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:21,885:INFO:Initializing load_model()
2023-10-13 14:17:21,886:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:21,892:INFO:Initializing load_model()
2023-10-13 14:17:21,892:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:21,894:INFO:Initializing load_model()
2023-10-13 14:17:21,894:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:21,897:INFO:Initializing load_model()
2023-10-13 14:17:21,897:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:21,900:INFO:Initializing load_model()
2023-10-13 14:17:21,900:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:23,776:INFO:Initializing load_model()
2023-10-13 14:17:23,776:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:23,782:INFO:Initializing load_model()
2023-10-13 14:17:23,782:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:23,789:INFO:Initializing load_model()
2023-10-13 14:17:23,789:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:23,791:INFO:Initializing load_model()
2023-10-13 14:17:23,791:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:23,793:INFO:Initializing load_model()
2023-10-13 14:17:23,793:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:23,998:INFO:Initializing load_model()
2023-10-13 14:17:23,998:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:23,999:INFO:Initializing load_model()
2023-10-13 14:17:23,999:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:24,001:INFO:Initializing load_model()
2023-10-13 14:17:24,001:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:24,002:INFO:Initializing load_model()
2023-10-13 14:17:24,002:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:24,003:INFO:Initializing load_model()
2023-10-13 14:17:24,003:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:27,532:INFO:Initializing load_model()
2023-10-13 14:17:27,532:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:27,534:INFO:Initializing load_model()
2023-10-13 14:17:27,534:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:27,535:INFO:Initializing load_model()
2023-10-13 14:17:27,535:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:27,536:INFO:Initializing load_model()
2023-10-13 14:17:27,536:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:27,538:INFO:Initializing load_model()
2023-10-13 14:17:27,538:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:38,024:INFO:Initializing load_model()
2023-10-13 14:17:38,024:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:38,027:INFO:Initializing load_model()
2023-10-13 14:17:38,027:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:38,031:INFO:Initializing load_model()
2023-10-13 14:17:38,031:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:38,036:INFO:Initializing load_model()
2023-10-13 14:17:38,036:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:17:38,038:INFO:Initializing load_model()
2023-10-13 14:17:38,038:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:31,312:INFO:Initializing load_model()
2023-10-13 14:18:31,313:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:31,315:INFO:Initializing load_model()
2023-10-13 14:18:31,315:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:31,318:INFO:Initializing load_model()
2023-10-13 14:18:31,318:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:31,319:INFO:Initializing load_model()
2023-10-13 14:18:31,319:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:31,321:INFO:Initializing load_model()
2023-10-13 14:18:31,321:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:37,585:INFO:Initializing load_model()
2023-10-13 14:18:37,585:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:37,587:INFO:Initializing load_model()
2023-10-13 14:18:37,587:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:37,589:INFO:Initializing load_model()
2023-10-13 14:18:37,589:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:37,591:INFO:Initializing load_model()
2023-10-13 14:18:37,591:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:37,593:INFO:Initializing load_model()
2023-10-13 14:18:37,593:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:40,753:INFO:Initializing load_model()
2023-10-13 14:18:40,753:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:40,754:INFO:Initializing load_model()
2023-10-13 14:18:40,754:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:40,755:INFO:Initializing load_model()
2023-10-13 14:18:40,755:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:40,757:INFO:Initializing load_model()
2023-10-13 14:18:40,757:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:18:40,758:INFO:Initializing load_model()
2023-10-13 14:18:40,758:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:05,753:INFO:Initializing load_model()
2023-10-13 14:19:05,754:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:05,760:INFO:Initializing load_model()
2023-10-13 14:19:05,760:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:05,763:INFO:Initializing load_model()
2023-10-13 14:19:05,763:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:05,765:INFO:Initializing load_model()
2023-10-13 14:19:05,765:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:05,766:INFO:Initializing load_model()
2023-10-13 14:19:05,766:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:14,089:INFO:Initializing load_model()
2023-10-13 14:19:14,089:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:14,091:INFO:Initializing load_model()
2023-10-13 14:19:14,091:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:14,093:INFO:Initializing load_model()
2023-10-13 14:19:14,093:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:14,095:INFO:Initializing load_model()
2023-10-13 14:19:14,095:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:14,097:INFO:Initializing load_model()
2023-10-13 14:19:14,097:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:15,109:INFO:Initializing load_model()
2023-10-13 14:19:15,109:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:15,110:INFO:Initializing load_model()
2023-10-13 14:19:15,110:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:15,111:INFO:Initializing load_model()
2023-10-13 14:19:15,111:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:15,112:INFO:Initializing load_model()
2023-10-13 14:19:15,112:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:15,114:INFO:Initializing load_model()
2023-10-13 14:19:15,114:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:16,174:INFO:Initializing load_model()
2023-10-13 14:19:16,174:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:16,175:INFO:Initializing load_model()
2023-10-13 14:19:16,175:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:16,177:INFO:Initializing load_model()
2023-10-13 14:19:16,177:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:16,178:INFO:Initializing load_model()
2023-10-13 14:19:16,178:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:19:16,180:INFO:Initializing load_model()
2023-10-13 14:19:16,180:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:06,885:INFO:Initializing load_model()
2023-10-13 14:20:06,886:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:06,889:INFO:Initializing load_model()
2023-10-13 14:20:06,889:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:06,892:INFO:Initializing load_model()
2023-10-13 14:20:06,892:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:06,894:INFO:Initializing load_model()
2023-10-13 14:20:06,894:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:06,896:INFO:Initializing load_model()
2023-10-13 14:20:06,896:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:07,060:INFO:Initializing load_model()
2023-10-13 14:20:07,060:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:07,062:INFO:Initializing load_model()
2023-10-13 14:20:07,062:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:07,063:INFO:Initializing load_model()
2023-10-13 14:20:07,063:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:07,064:INFO:Initializing load_model()
2023-10-13 14:20:07,064:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:07,065:INFO:Initializing load_model()
2023-10-13 14:20:07,065:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:12,671:INFO:Initializing load_model()
2023-10-13 14:20:12,672:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:12,673:INFO:Initializing load_model()
2023-10-13 14:20:12,673:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:12,674:INFO:Initializing load_model()
2023-10-13 14:20:12,674:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:12,675:INFO:Initializing load_model()
2023-10-13 14:20:12,675:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:12,676:INFO:Initializing load_model()
2023-10-13 14:20:12,676:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:15,928:INFO:Initializing load_model()
2023-10-13 14:20:15,928:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:15,929:INFO:Initializing load_model()
2023-10-13 14:20:15,929:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:15,930:INFO:Initializing load_model()
2023-10-13 14:20:15,931:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:15,932:INFO:Initializing load_model()
2023-10-13 14:20:15,932:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:15,933:INFO:Initializing load_model()
2023-10-13 14:20:15,933:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:17,103:INFO:Initializing load_model()
2023-10-13 14:20:17,103:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:17,104:INFO:Initializing load_model()
2023-10-13 14:20:17,104:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:17,106:INFO:Initializing load_model()
2023-10-13 14:20:17,106:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:17,107:INFO:Initializing load_model()
2023-10-13 14:20:17,107:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:17,108:INFO:Initializing load_model()
2023-10-13 14:20:17,108:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,096:INFO:Initializing load_model()
2023-10-13 14:20:19,096:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,098:INFO:Initializing load_model()
2023-10-13 14:20:19,099:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,100:INFO:Initializing load_model()
2023-10-13 14:20:19,100:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,102:INFO:Initializing load_model()
2023-10-13 14:20:19,102:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,104:INFO:Initializing load_model()
2023-10-13 14:20:19,104:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,230:INFO:Initializing load_model()
2023-10-13 14:20:19,230:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,231:INFO:Initializing load_model()
2023-10-13 14:20:19,231:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,232:INFO:Initializing load_model()
2023-10-13 14:20:19,232:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,234:INFO:Initializing load_model()
2023-10-13 14:20:19,234:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:19,235:INFO:Initializing load_model()
2023-10-13 14:20:19,235:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,682:INFO:Initializing load_model()
2023-10-13 14:20:36,682:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,685:INFO:Initializing load_model()
2023-10-13 14:20:36,685:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,688:INFO:Initializing load_model()
2023-10-13 14:20:36,688:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,690:INFO:Initializing load_model()
2023-10-13 14:20:36,690:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,692:INFO:Initializing load_model()
2023-10-13 14:20:36,692:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,836:INFO:Initializing load_model()
2023-10-13 14:20:36,836:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,837:INFO:Initializing load_model()
2023-10-13 14:20:36,837:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,838:INFO:Initializing load_model()
2023-10-13 14:20:36,838:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,839:INFO:Initializing load_model()
2023-10-13 14:20:36,839:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:36,841:INFO:Initializing load_model()
2023-10-13 14:20:36,841:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,757:INFO:Initializing load_model()
2023-10-13 14:20:42,762:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,763:INFO:Initializing load_model()
2023-10-13 14:20:42,763:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,765:INFO:Initializing load_model()
2023-10-13 14:20:42,765:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,771:INFO:Initializing load_model()
2023-10-13 14:20:42,771:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,772:INFO:Initializing load_model()
2023-10-13 14:20:42,772:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,773:INFO:Initializing load_model()
2023-10-13 14:20:42,773:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,774:INFO:Initializing load_model()
2023-10-13 14:20:42,774:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,774:INFO:Initializing load_model()
2023-10-13 14:20:42,774:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,775:INFO:Initializing load_model()
2023-10-13 14:20:42,775:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:42,776:INFO:Initializing load_model()
2023-10-13 14:20:42,777:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:43,352:INFO:Initializing load_model()
2023-10-13 14:20:43,352:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:43,353:INFO:Initializing load_model()
2023-10-13 14:20:43,353:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:43,355:INFO:Initializing load_model()
2023-10-13 14:20:43,355:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:43,356:INFO:Initializing load_model()
2023-10-13 14:20:43,356:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:43,357:INFO:Initializing load_model()
2023-10-13 14:20:43,357:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:48,245:INFO:Initializing load_model()
2023-10-13 14:20:48,245:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:48,247:INFO:Initializing load_model()
2023-10-13 14:20:48,247:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:48,252:INFO:Initializing load_model()
2023-10-13 14:20:48,252:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:48,254:INFO:Initializing load_model()
2023-10-13 14:20:48,254:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:48,256:INFO:Initializing load_model()
2023-10-13 14:20:48,256:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:57,915:INFO:Initializing load_model()
2023-10-13 14:20:57,915:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:57,918:INFO:Initializing load_model()
2023-10-13 14:20:57,918:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:57,921:INFO:Initializing load_model()
2023-10-13 14:20:57,921:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:57,923:INFO:Initializing load_model()
2023-10-13 14:20:57,923:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:20:57,925:INFO:Initializing load_model()
2023-10-13 14:20:57,925:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:25:51,224:INFO:Initializing load_model()
2023-10-13 14:25:51,224:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:25:51,231:INFO:Initializing load_model()
2023-10-13 14:25:51,231:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:25:51,235:INFO:Initializing load_model()
2023-10-13 14:25:51,235:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:25:51,238:INFO:Initializing load_model()
2023-10-13 14:25:51,238:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:25:51,240:INFO:Initializing load_model()
2023-10-13 14:25:51,240:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,587:INFO:Initializing load_model()
2023-10-13 14:26:16,587:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,596:INFO:Initializing load_model()
2023-10-13 14:26:16,596:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,602:INFO:Initializing load_model()
2023-10-13 14:26:16,602:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,604:INFO:Initializing load_model()
2023-10-13 14:26:16,604:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,606:INFO:Initializing load_model()
2023-10-13 14:26:16,606:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,743:INFO:Initializing load_model()
2023-10-13 14:26:16,743:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,744:INFO:Initializing load_model()
2023-10-13 14:26:16,744:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,745:INFO:Initializing load_model()
2023-10-13 14:26:16,745:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,747:INFO:Initializing load_model()
2023-10-13 14:26:16,747:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:16,748:INFO:Initializing load_model()
2023-10-13 14:26:16,748:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:23,020:INFO:Initializing load_model()
2023-10-13 14:26:23,021:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:23,022:INFO:Initializing load_model()
2023-10-13 14:26:23,022:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:23,023:INFO:Initializing load_model()
2023-10-13 14:26:23,023:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:23,028:INFO:Initializing load_model()
2023-10-13 14:26:23,028:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:23,029:INFO:Initializing load_model()
2023-10-13 14:26:23,029:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:25,742:INFO:Initializing load_model()
2023-10-13 14:26:25,742:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:25,743:INFO:Initializing load_model()
2023-10-13 14:26:25,743:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:25,744:INFO:Initializing load_model()
2023-10-13 14:26:25,744:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:25,746:INFO:Initializing load_model()
2023-10-13 14:26:25,746:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:25,747:INFO:Initializing load_model()
2023-10-13 14:26:25,747:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:39,371:INFO:Initializing load_model()
2023-10-13 14:26:39,371:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:39,374:INFO:Initializing load_model()
2023-10-13 14:26:39,374:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:39,377:INFO:Initializing load_model()
2023-10-13 14:26:39,377:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:39,379:INFO:Initializing load_model()
2023-10-13 14:26:39,379:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:26:39,380:INFO:Initializing load_model()
2023-10-13 14:26:39,380:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:29,352:INFO:Initializing load_model()
2023-10-13 14:27:29,352:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:29,355:INFO:Initializing load_model()
2023-10-13 14:27:29,355:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:29,360:INFO:Initializing load_model()
2023-10-13 14:27:29,360:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:29,362:INFO:Initializing load_model()
2023-10-13 14:27:29,362:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:29,371:INFO:Initializing load_model()
2023-10-13 14:27:29,371:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,046:INFO:Initializing load_model()
2023-10-13 14:27:31,046:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,049:INFO:Initializing load_model()
2023-10-13 14:27:31,049:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,050:INFO:Initializing load_model()
2023-10-13 14:27:31,050:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,052:INFO:Initializing load_model()
2023-10-13 14:27:31,052:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,053:INFO:Initializing load_model()
2023-10-13 14:27:31,053:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,191:INFO:Initializing load_model()
2023-10-13 14:27:31,191:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,192:INFO:Initializing load_model()
2023-10-13 14:27:31,192:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,194:INFO:Initializing load_model()
2023-10-13 14:27:31,194:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,196:INFO:Initializing load_model()
2023-10-13 14:27:31,196:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:31,197:INFO:Initializing load_model()
2023-10-13 14:27:31,197:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:46,466:INFO:Initializing load_model()
2023-10-13 14:27:46,467:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:46,470:INFO:Initializing load_model()
2023-10-13 14:27:46,470:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:46,472:INFO:Initializing load_model()
2023-10-13 14:27:46,472:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:46,474:INFO:Initializing load_model()
2023-10-13 14:27:46,474:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:46,476:INFO:Initializing load_model()
2023-10-13 14:27:46,476:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:47,936:INFO:Initializing load_model()
2023-10-13 14:27:47,937:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:47,940:INFO:Initializing load_model()
2023-10-13 14:27:47,940:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:47,942:INFO:Initializing load_model()
2023-10-13 14:27:47,942:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:47,944:INFO:Initializing load_model()
2023-10-13 14:27:47,944:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:47,946:INFO:Initializing load_model()
2023-10-13 14:27:47,946:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:48,049:INFO:Initializing load_model()
2023-10-13 14:27:48,049:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:48,050:INFO:Initializing load_model()
2023-10-13 14:27:48,050:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:48,051:INFO:Initializing load_model()
2023-10-13 14:27:48,051:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:48,053:INFO:Initializing load_model()
2023-10-13 14:27:48,053:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:27:48,054:INFO:Initializing load_model()
2023-10-13 14:27:48,054:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:22,841:INFO:Initializing load_model()
2023-10-13 14:33:22,843:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:22,856:INFO:Initializing load_model()
2023-10-13 14:33:22,856:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:22,859:INFO:Initializing load_model()
2023-10-13 14:33:22,859:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:22,861:INFO:Initializing load_model()
2023-10-13 14:33:22,861:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:22,863:INFO:Initializing load_model()
2023-10-13 14:33:22,863:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,181:INFO:Initializing load_model()
2023-10-13 14:33:26,181:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,183:INFO:Initializing load_model()
2023-10-13 14:33:26,183:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,185:INFO:Initializing load_model()
2023-10-13 14:33:26,185:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,187:INFO:Initializing load_model()
2023-10-13 14:33:26,187:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,188:INFO:Initializing load_model()
2023-10-13 14:33:26,188:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,661:INFO:Initializing load_model()
2023-10-13 14:33:26,661:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,662:INFO:Initializing load_model()
2023-10-13 14:33:26,662:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,664:INFO:Initializing load_model()
2023-10-13 14:33:26,664:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,665:INFO:Initializing load_model()
2023-10-13 14:33:26,665:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:26,666:INFO:Initializing load_model()
2023-10-13 14:33:26,667:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:35,346:INFO:Initializing load_model()
2023-10-13 14:33:35,346:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:35,349:INFO:Initializing load_model()
2023-10-13 14:33:35,349:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:35,353:INFO:Initializing load_model()
2023-10-13 14:33:35,353:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:35,357:INFO:Initializing load_model()
2023-10-13 14:33:35,357:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:35,360:INFO:Initializing load_model()
2023-10-13 14:33:35,360:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:38,033:INFO:Initializing load_model()
2023-10-13 14:33:38,034:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:38,035:INFO:Initializing load_model()
2023-10-13 14:33:38,035:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:38,037:INFO:Initializing load_model()
2023-10-13 14:33:38,037:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:38,038:INFO:Initializing load_model()
2023-10-13 14:33:38,038:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:38,040:INFO:Initializing load_model()
2023-10-13 14:33:38,040:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:51,976:INFO:Initializing load_model()
2023-10-13 14:33:51,976:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:51,980:INFO:Initializing load_model()
2023-10-13 14:33:51,980:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:51,982:INFO:Initializing load_model()
2023-10-13 14:33:51,982:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:51,984:INFO:Initializing load_model()
2023-10-13 14:33:51,984:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:51,985:INFO:Initializing load_model()
2023-10-13 14:33:51,985:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:33:52,065:INFO:Initializing predict_model()
2023-10-13 14:33:52,065:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c27d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29930d600>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 14:33:52,065:INFO:Checking exceptions
2023-10-13 14:33:52,065:INFO:Preloading libraries
2023-10-13 14:33:52,065:INFO:Set up data.
2023-10-13 14:33:52,072:INFO:Set up index.
2023-10-13 14:33:52,262:INFO:Initializing predict_model()
2023-10-13 14:33:52,262:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a68c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 14:33:52,262:INFO:Checking exceptions
2023-10-13 14:33:52,262:INFO:Preloading libraries
2023-10-13 14:33:52,263:INFO:Set up data.
2023-10-13 14:33:52,267:INFO:Set up index.
2023-10-13 14:33:52,344:INFO:Initializing predict_model()
2023-10-13 14:33:52,344:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a68c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 14:33:52,344:INFO:Checking exceptions
2023-10-13 14:33:52,344:INFO:Preloading libraries
2023-10-13 14:33:52,344:INFO:Set up data.
2023-10-13 14:33:52,348:INFO:Set up index.
2023-10-13 14:33:52,423:INFO:Initializing predict_model()
2023-10-13 14:33:52,424:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a68c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 14:33:52,424:INFO:Checking exceptions
2023-10-13 14:33:52,424:INFO:Preloading libraries
2023-10-13 14:33:52,424:INFO:Set up data.
2023-10-13 14:33:52,428:INFO:Set up index.
2023-10-13 14:33:52,497:INFO:Initializing predict_model()
2023-10-13 14:33:52,497:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a68c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x294838c70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-13 14:33:52,497:INFO:Checking exceptions
2023-10-13 14:33:52,497:INFO:Preloading libraries
2023-10-13 14:33:52,497:INFO:Set up data.
2023-10-13 14:33:52,501:INFO:Set up index.
2023-10-13 14:36:51,494:INFO:Initializing load_model()
2023-10-13 14:36:51,495:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:51,511:INFO:Initializing load_model()
2023-10-13 14:36:51,512:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:51,524:INFO:Initializing load_model()
2023-10-13 14:36:51,524:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:51,528:INFO:Initializing load_model()
2023-10-13 14:36:51,528:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:51,530:INFO:Initializing load_model()
2023-10-13 14:36:51,530:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:51,642:INFO:Initializing predict_model()
2023-10-13 14:36:51,642:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29833a2c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298319060>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2983bf910>)
2023-10-13 14:36:51,642:INFO:Checking exceptions
2023-10-13 14:36:51,642:INFO:Preloading libraries
2023-10-13 14:36:51,643:INFO:Set up data.
2023-10-13 14:36:51,653:INFO:Set up index.
2023-10-13 14:36:51,942:INFO:Initializing predict_model()
2023-10-13 14:36:51,942:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383cf40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 14:36:51,942:INFO:Checking exceptions
2023-10-13 14:36:51,942:INFO:Preloading libraries
2023-10-13 14:36:51,942:INFO:Set up data.
2023-10-13 14:36:51,946:INFO:Set up index.
2023-10-13 14:36:52,020:INFO:Initializing predict_model()
2023-10-13 14:36:52,020:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383cf40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 14:36:52,020:INFO:Checking exceptions
2023-10-13 14:36:52,020:INFO:Preloading libraries
2023-10-13 14:36:52,020:INFO:Set up data.
2023-10-13 14:36:52,024:INFO:Set up index.
2023-10-13 14:36:52,094:INFO:Initializing predict_model()
2023-10-13 14:36:52,094:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383cf40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 14:36:52,094:INFO:Checking exceptions
2023-10-13 14:36:52,094:INFO:Preloading libraries
2023-10-13 14:36:52,094:INFO:Set up data.
2023-10-13 14:36:52,098:INFO:Set up index.
2023-10-13 14:36:52,168:INFO:Initializing predict_model()
2023-10-13 14:36:52,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383cf40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29930e0b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-13 14:36:52,168:INFO:Checking exceptions
2023-10-13 14:36:52,168:INFO:Preloading libraries
2023-10-13 14:36:52,169:INFO:Set up data.
2023-10-13 14:36:52,173:INFO:Set up index.
2023-10-13 14:36:56,242:INFO:Initializing load_model()
2023-10-13 14:36:56,242:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:56,243:INFO:Initializing load_model()
2023-10-13 14:36:56,243:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:56,244:INFO:Initializing load_model()
2023-10-13 14:36:56,244:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:56,245:INFO:Initializing load_model()
2023-10-13 14:36:56,246:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:56,247:INFO:Initializing load_model()
2023-10-13 14:36:56,247:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:36:56,300:INFO:Initializing predict_model()
2023-10-13 14:36:56,300:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298330dc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x299317670>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab880>)
2023-10-13 14:36:56,300:INFO:Checking exceptions
2023-10-13 14:36:56,300:INFO:Preloading libraries
2023-10-13 14:36:56,300:INFO:Set up data.
2023-10-13 14:36:56,304:INFO:Set up index.
2023-10-13 14:36:56,381:INFO:Initializing predict_model()
2023-10-13 14:36:56,381:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383cca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff6d0>)
2023-10-13 14:36:56,381:INFO:Checking exceptions
2023-10-13 14:36:56,381:INFO:Preloading libraries
2023-10-13 14:36:56,381:INFO:Set up data.
2023-10-13 14:36:56,385:INFO:Set up index.
2023-10-13 14:36:56,464:INFO:Initializing predict_model()
2023-10-13 14:36:56,464:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383cca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff6d0>)
2023-10-13 14:36:56,465:INFO:Checking exceptions
2023-10-13 14:36:56,465:INFO:Preloading libraries
2023-10-13 14:36:56,465:INFO:Set up data.
2023-10-13 14:36:56,469:INFO:Set up index.
2023-10-13 14:36:56,546:INFO:Initializing predict_model()
2023-10-13 14:36:56,546:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29383cca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff6d0>)
2023-10-13 14:36:56,546:INFO:Checking exceptions
2023-10-13 14:36:56,546:INFO:Preloading libraries
2023-10-13 14:36:56,546:INFO:Set up data.
2023-10-13 14:36:56,550:INFO:Set up index.
2023-10-13 14:36:56,627:INFO:Initializing predict_model()
2023-10-13 14:36:56,627:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x299316a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff6d0>)
2023-10-13 14:36:56,627:INFO:Checking exceptions
2023-10-13 14:36:56,627:INFO:Preloading libraries
2023-10-13 14:36:56,628:INFO:Set up data.
2023-10-13 14:36:56,632:INFO:Set up index.
2023-10-13 14:37:30,763:INFO:Initializing load_model()
2023-10-13 14:37:30,764:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:37:30,767:INFO:Initializing load_model()
2023-10-13 14:37:30,767:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:37:30,769:INFO:Initializing load_model()
2023-10-13 14:37:30,769:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:37:30,771:INFO:Initializing load_model()
2023-10-13 14:37:30,771:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:37:30,773:INFO:Initializing load_model()
2023-10-13 14:37:30,773:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:37:30,837:INFO:Initializing predict_model()
2023-10-13 14:37:30,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c1a20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x293c869b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296faaf80>)
2023-10-13 14:37:30,837:INFO:Checking exceptions
2023-10-13 14:37:30,838:INFO:Preloading libraries
2023-10-13 14:37:30,838:INFO:Set up data.
2023-10-13 14:37:30,843:INFO:Set up index.
2023-10-13 14:37:31,003:INFO:Initializing predict_model()
2023-10-13 14:37:31,003:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c25b70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 14:37:31,003:INFO:Checking exceptions
2023-10-13 14:37:31,003:INFO:Preloading libraries
2023-10-13 14:37:31,004:INFO:Set up data.
2023-10-13 14:37:31,008:INFO:Set up index.
2023-10-13 14:37:31,083:INFO:Initializing predict_model()
2023-10-13 14:37:31,084:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c25b70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 14:37:31,084:INFO:Checking exceptions
2023-10-13 14:37:31,084:INFO:Preloading libraries
2023-10-13 14:37:31,084:INFO:Set up data.
2023-10-13 14:37:31,088:INFO:Set up index.
2023-10-13 14:37:31,168:INFO:Initializing predict_model()
2023-10-13 14:37:31,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c25b70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 14:37:31,168:INFO:Checking exceptions
2023-10-13 14:37:31,168:INFO:Preloading libraries
2023-10-13 14:37:31,168:INFO:Set up data.
2023-10-13 14:37:31,172:INFO:Set up index.
2023-10-13 14:37:31,252:INFO:Initializing predict_model()
2023-10-13 14:37:31,252:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c25b70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x299256950>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-13 14:37:31,252:INFO:Checking exceptions
2023-10-13 14:37:31,253:INFO:Preloading libraries
2023-10-13 14:37:31,253:INFO:Set up data.
2023-10-13 14:37:31,257:INFO:Set up index.
2023-10-13 14:38:13,922:INFO:Initializing load_model()
2023-10-13 14:38:13,922:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:38:13,925:INFO:Initializing load_model()
2023-10-13 14:38:13,925:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:38:13,927:INFO:Initializing load_model()
2023-10-13 14:38:13,927:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:38:13,929:INFO:Initializing load_model()
2023-10-13 14:38:13,929:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:38:13,931:INFO:Initializing load_model()
2023-10-13 14:38:13,931:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:38:13,987:INFO:Initializing predict_model()
2023-10-13 14:38:13,987:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298319360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29930f4c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab520>)
2023-10-13 14:38:13,987:INFO:Checking exceptions
2023-10-13 14:38:13,987:INFO:Preloading libraries
2023-10-13 14:38:13,987:INFO:Set up data.
2023-10-13 14:38:13,994:INFO:Set up index.
2023-10-13 14:38:14,148:INFO:Initializing predict_model()
2023-10-13 14:38:14,148:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 14:38:14,148:INFO:Checking exceptions
2023-10-13 14:38:14,148:INFO:Preloading libraries
2023-10-13 14:38:14,148:INFO:Set up data.
2023-10-13 14:38:14,152:INFO:Set up index.
2023-10-13 14:38:14,230:INFO:Initializing predict_model()
2023-10-13 14:38:14,230:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 14:38:14,230:INFO:Checking exceptions
2023-10-13 14:38:14,230:INFO:Preloading libraries
2023-10-13 14:38:14,231:INFO:Set up data.
2023-10-13 14:38:14,235:INFO:Set up index.
2023-10-13 14:38:14,310:INFO:Initializing predict_model()
2023-10-13 14:38:14,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 14:38:14,310:INFO:Checking exceptions
2023-10-13 14:38:14,310:INFO:Preloading libraries
2023-10-13 14:38:14,310:INFO:Set up data.
2023-10-13 14:38:14,314:INFO:Set up index.
2023-10-13 14:38:14,388:INFO:Initializing predict_model()
2023-10-13 14:38:14,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b370>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 14:38:14,388:INFO:Checking exceptions
2023-10-13 14:38:14,389:INFO:Preloading libraries
2023-10-13 14:38:14,389:INFO:Set up data.
2023-10-13 14:38:14,394:INFO:Set up index.
2023-10-13 14:39:03,469:INFO:Initializing load_model()
2023-10-13 14:39:03,469:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:03,474:INFO:Initializing load_model()
2023-10-13 14:39:03,474:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:03,480:INFO:Initializing load_model()
2023-10-13 14:39:03,480:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:03,484:INFO:Initializing load_model()
2023-10-13 14:39:03,484:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:03,488:INFO:Initializing load_model()
2023-10-13 14:39:03,488:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:03,602:INFO:Initializing predict_model()
2023-10-13 14:39:03,602:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c85e40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298319de0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 14:39:03,602:INFO:Checking exceptions
2023-10-13 14:39:03,602:INFO:Preloading libraries
2023-10-13 14:39:03,603:INFO:Set up data.
2023-10-13 14:39:03,608:INFO:Set up index.
2023-10-13 14:39:03,744:INFO:Initializing predict_model()
2023-10-13 14:39:03,744:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992d09a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 14:39:03,745:INFO:Checking exceptions
2023-10-13 14:39:03,745:INFO:Preloading libraries
2023-10-13 14:39:03,745:INFO:Set up data.
2023-10-13 14:39:03,749:INFO:Set up index.
2023-10-13 14:39:03,836:INFO:Initializing predict_model()
2023-10-13 14:39:03,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 14:39:03,837:INFO:Checking exceptions
2023-10-13 14:39:03,837:INFO:Preloading libraries
2023-10-13 14:39:03,837:INFO:Set up data.
2023-10-13 14:39:03,842:INFO:Set up index.
2023-10-13 14:39:03,921:INFO:Initializing predict_model()
2023-10-13 14:39:03,921:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 14:39:03,921:INFO:Checking exceptions
2023-10-13 14:39:03,921:INFO:Preloading libraries
2023-10-13 14:39:03,922:INFO:Set up data.
2023-10-13 14:39:03,926:INFO:Set up index.
2023-10-13 14:39:03,999:INFO:Initializing predict_model()
2023-10-13 14:39:04,000:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29831a2f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 14:39:04,000:INFO:Checking exceptions
2023-10-13 14:39:04,000:INFO:Preloading libraries
2023-10-13 14:39:04,000:INFO:Set up data.
2023-10-13 14:39:04,004:INFO:Set up index.
2023-10-13 14:39:21,508:INFO:Initializing load_model()
2023-10-13 14:39:21,508:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:21,512:INFO:Initializing load_model()
2023-10-13 14:39:21,513:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:21,516:INFO:Initializing load_model()
2023-10-13 14:39:21,516:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:21,519:INFO:Initializing load_model()
2023-10-13 14:39:21,519:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:21,522:INFO:Initializing load_model()
2023-10-13 14:39:21,522:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:21,621:INFO:Initializing predict_model()
2023-10-13 14:39:21,621:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c1030>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x299256b90>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab490>)
2023-10-13 14:39:21,621:INFO:Checking exceptions
2023-10-13 14:39:21,622:INFO:Preloading libraries
2023-10-13 14:39:21,622:INFO:Set up data.
2023-10-13 14:39:21,628:INFO:Set up index.
2023-10-13 14:39:21,748:INFO:Initializing predict_model()
2023-10-13 14:39:21,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:39:21,748:INFO:Checking exceptions
2023-10-13 14:39:21,748:INFO:Preloading libraries
2023-10-13 14:39:21,748:INFO:Set up data.
2023-10-13 14:39:21,752:INFO:Set up index.
2023-10-13 14:39:21,828:INFO:Initializing predict_model()
2023-10-13 14:39:21,828:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:39:21,828:INFO:Checking exceptions
2023-10-13 14:39:21,828:INFO:Preloading libraries
2023-10-13 14:39:21,828:INFO:Set up data.
2023-10-13 14:39:21,832:INFO:Set up index.
2023-10-13 14:39:21,905:INFO:Initializing predict_model()
2023-10-13 14:39:21,906:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:39:21,906:INFO:Checking exceptions
2023-10-13 14:39:21,906:INFO:Preloading libraries
2023-10-13 14:39:21,906:INFO:Set up data.
2023-10-13 14:39:21,910:INFO:Set up index.
2023-10-13 14:39:21,999:INFO:Initializing predict_model()
2023-10-13 14:39:21,999:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a39060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2992d3880>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:39:21,999:INFO:Checking exceptions
2023-10-13 14:39:21,999:INFO:Preloading libraries
2023-10-13 14:39:21,999:INFO:Set up data.
2023-10-13 14:39:22,005:INFO:Set up index.
2023-10-13 14:39:44,582:INFO:Initializing load_model()
2023-10-13 14:39:44,582:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:44,585:INFO:Initializing load_model()
2023-10-13 14:39:44,585:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:44,588:INFO:Initializing load_model()
2023-10-13 14:39:44,588:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:44,590:INFO:Initializing load_model()
2023-10-13 14:39:44,590:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:44,592:INFO:Initializing load_model()
2023-10-13 14:39:44,593:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:44,648:INFO:Initializing predict_model()
2023-10-13 14:39:44,648:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298331660>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29930f580>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:39:44,648:INFO:Checking exceptions
2023-10-13 14:39:44,648:INFO:Preloading libraries
2023-10-13 14:39:44,649:INFO:Set up data.
2023-10-13 14:39:44,654:INFO:Set up index.
2023-10-13 14:39:44,790:INFO:Initializing predict_model()
2023-10-13 14:39:44,790:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e5120>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 14:39:44,791:INFO:Checking exceptions
2023-10-13 14:39:44,791:INFO:Preloading libraries
2023-10-13 14:39:44,791:INFO:Set up data.
2023-10-13 14:39:44,795:INFO:Set up index.
2023-10-13 14:39:44,870:INFO:Initializing predict_model()
2023-10-13 14:39:44,870:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e5120>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 14:39:44,870:INFO:Checking exceptions
2023-10-13 14:39:44,870:INFO:Preloading libraries
2023-10-13 14:39:44,871:INFO:Set up data.
2023-10-13 14:39:44,875:INFO:Set up index.
2023-10-13 14:39:44,950:INFO:Initializing predict_model()
2023-10-13 14:39:44,950:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e5120>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 14:39:44,950:INFO:Checking exceptions
2023-10-13 14:39:44,950:INFO:Preloading libraries
2023-10-13 14:39:44,950:INFO:Set up data.
2023-10-13 14:39:44,954:INFO:Set up index.
2023-10-13 14:39:45,029:INFO:Initializing predict_model()
2023-10-13 14:39:45,029:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e5120>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298318c40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-13 14:39:45,029:INFO:Checking exceptions
2023-10-13 14:39:45,029:INFO:Preloading libraries
2023-10-13 14:39:45,030:INFO:Set up data.
2023-10-13 14:39:45,034:INFO:Set up index.
2023-10-13 14:39:53,756:INFO:Initializing load_model()
2023-10-13 14:39:53,774:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:53,777:INFO:Initializing load_model()
2023-10-13 14:39:53,777:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:53,779:INFO:Initializing load_model()
2023-10-13 14:39:53,779:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:53,781:INFO:Initializing load_model()
2023-10-13 14:39:53,781:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:39:53,783:INFO:Initializing load_model()
2023-10-13 14:39:53,783:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,270:INFO:Initializing load_model()
2023-10-13 14:40:07,271:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,277:INFO:Initializing load_model()
2023-10-13 14:40:07,278:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,289:INFO:Initializing load_model()
2023-10-13 14:40:07,289:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,292:INFO:Initializing load_model()
2023-10-13 14:40:07,292:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,295:INFO:Initializing load_model()
2023-10-13 14:40:07,295:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,464:INFO:Initializing load_model()
2023-10-13 14:40:07,464:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,465:INFO:Initializing load_model()
2023-10-13 14:40:07,465:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,467:INFO:Initializing load_model()
2023-10-13 14:40:07,467:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,468:INFO:Initializing load_model()
2023-10-13 14:40:07,468:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:07,470:INFO:Initializing load_model()
2023-10-13 14:40:07,470:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:10,111:INFO:Initializing load_model()
2023-10-13 14:40:10,111:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:10,112:INFO:Initializing load_model()
2023-10-13 14:40:10,112:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:10,114:INFO:Initializing load_model()
2023-10-13 14:40:10,114:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:10,116:INFO:Initializing load_model()
2023-10-13 14:40:10,116:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:10,118:INFO:Initializing load_model()
2023-10-13 14:40:10,118:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:10,170:INFO:Initializing predict_model()
2023-10-13 14:40:10,170:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930e3b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298331450>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939feef0>)
2023-10-13 14:40:10,170:INFO:Checking exceptions
2023-10-13 14:40:10,170:INFO:Preloading libraries
2023-10-13 14:40:10,170:INFO:Set up data.
2023-10-13 14:40:10,175:INFO:Set up index.
2023-10-13 14:40:10,256:INFO:Initializing predict_model()
2023-10-13 14:40:10,256:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992d25f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 14:40:10,256:INFO:Checking exceptions
2023-10-13 14:40:10,257:INFO:Preloading libraries
2023-10-13 14:40:10,257:INFO:Set up data.
2023-10-13 14:40:10,261:INFO:Set up index.
2023-10-13 14:40:10,337:INFO:Initializing predict_model()
2023-10-13 14:40:10,337:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992d25f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 14:40:10,337:INFO:Checking exceptions
2023-10-13 14:40:10,337:INFO:Preloading libraries
2023-10-13 14:40:10,337:INFO:Set up data.
2023-10-13 14:40:10,341:INFO:Set up index.
2023-10-13 14:40:10,415:INFO:Initializing predict_model()
2023-10-13 14:40:10,415:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992d25f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 14:40:10,416:INFO:Checking exceptions
2023-10-13 14:40:10,416:INFO:Preloading libraries
2023-10-13 14:40:10,416:INFO:Set up data.
2023-10-13 14:40:10,420:INFO:Set up index.
2023-10-13 14:40:10,495:INFO:Initializing predict_model()
2023-10-13 14:40:10,495:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992d25f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298330520>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 14:40:10,495:INFO:Checking exceptions
2023-10-13 14:40:10,495:INFO:Preloading libraries
2023-10-13 14:40:10,495:INFO:Set up data.
2023-10-13 14:40:10,500:INFO:Set up index.
2023-10-13 14:40:27,916:INFO:Initializing load_model()
2023-10-13 14:40:27,917:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:27,919:INFO:Initializing load_model()
2023-10-13 14:40:27,919:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:27,922:INFO:Initializing load_model()
2023-10-13 14:40:27,922:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:27,925:INFO:Initializing load_model()
2023-10-13 14:40:27,925:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:27,927:INFO:Initializing load_model()
2023-10-13 14:40:27,927:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,547:INFO:Initializing load_model()
2023-10-13 14:40:31,547:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,548:INFO:Initializing load_model()
2023-10-13 14:40:31,548:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,550:INFO:Initializing load_model()
2023-10-13 14:40:31,550:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,552:INFO:Initializing load_model()
2023-10-13 14:40:31,552:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,553:INFO:Initializing load_model()
2023-10-13 14:40:31,553:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,648:INFO:Initializing load_model()
2023-10-13 14:40:31,648:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,649:INFO:Initializing load_model()
2023-10-13 14:40:31,649:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,650:INFO:Initializing load_model()
2023-10-13 14:40:31,650:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,651:INFO:Initializing load_model()
2023-10-13 14:40:31,651:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:31,653:INFO:Initializing load_model()
2023-10-13 14:40:31,653:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:33,968:INFO:Initializing load_model()
2023-10-13 14:40:33,968:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:33,969:INFO:Initializing load_model()
2023-10-13 14:40:33,969:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:33,971:INFO:Initializing load_model()
2023-10-13 14:40:33,971:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:33,972:INFO:Initializing load_model()
2023-10-13 14:40:33,972:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:33,973:INFO:Initializing load_model()
2023-10-13 14:40:33,974:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:34,027:INFO:Initializing predict_model()
2023-10-13 14:40:34,027:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298319cc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29483b220>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc700>)
2023-10-13 14:40:34,027:INFO:Checking exceptions
2023-10-13 14:40:34,027:INFO:Preloading libraries
2023-10-13 14:40:34,028:INFO:Set up data.
2023-10-13 14:40:34,032:INFO:Set up index.
2023-10-13 14:40:34,117:INFO:Initializing predict_model()
2023-10-13 14:40:34,117:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299317a00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc700>)
2023-10-13 14:40:34,117:INFO:Checking exceptions
2023-10-13 14:40:34,117:INFO:Preloading libraries
2023-10-13 14:40:34,117:INFO:Set up data.
2023-10-13 14:40:34,123:INFO:Set up index.
2023-10-13 14:40:34,202:INFO:Initializing predict_model()
2023-10-13 14:40:34,202:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a6da0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:40:34,202:INFO:Checking exceptions
2023-10-13 14:40:34,202:INFO:Preloading libraries
2023-10-13 14:40:34,202:INFO:Set up data.
2023-10-13 14:40:34,206:INFO:Set up index.
2023-10-13 14:40:34,282:INFO:Initializing predict_model()
2023-10-13 14:40:34,283:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a6da0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:40:34,283:INFO:Checking exceptions
2023-10-13 14:40:34,283:INFO:Preloading libraries
2023-10-13 14:40:34,283:INFO:Set up data.
2023-10-13 14:40:34,287:INFO:Set up index.
2023-10-13 14:40:34,363:INFO:Initializing predict_model()
2023-10-13 14:40:34,363:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298319630>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298330df0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:40:34,363:INFO:Checking exceptions
2023-10-13 14:40:34,363:INFO:Preloading libraries
2023-10-13 14:40:34,363:INFO:Set up data.
2023-10-13 14:40:34,367:INFO:Set up index.
2023-10-13 14:40:53,261:INFO:Initializing load_model()
2023-10-13 14:40:53,262:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:53,265:INFO:Initializing load_model()
2023-10-13 14:40:53,265:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:53,267:INFO:Initializing load_model()
2023-10-13 14:40:53,267:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:53,270:INFO:Initializing load_model()
2023-10-13 14:40:53,270:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:53,272:INFO:Initializing load_model()
2023-10-13 14:40:53,272:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,934:INFO:Initializing load_model()
2023-10-13 14:40:54,934:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,935:INFO:Initializing load_model()
2023-10-13 14:40:54,935:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,942:INFO:Initializing load_model()
2023-10-13 14:40:54,942:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,943:INFO:Initializing load_model()
2023-10-13 14:40:54,943:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,946:INFO:Initializing load_model()
2023-10-13 14:40:54,946:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,946:INFO:Initializing load_model()
2023-10-13 14:40:54,947:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,948:INFO:Initializing load_model()
2023-10-13 14:40:54,948:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,948:INFO:Initializing load_model()
2023-10-13 14:40:54,949:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,950:INFO:Initializing load_model()
2023-10-13 14:40:54,950:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:54,956:INFO:Initializing load_model()
2023-10-13 14:40:54,956:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:57,293:INFO:Initializing load_model()
2023-10-13 14:40:57,293:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:57,295:INFO:Initializing load_model()
2023-10-13 14:40:57,295:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:57,296:INFO:Initializing load_model()
2023-10-13 14:40:57,296:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:57,297:INFO:Initializing load_model()
2023-10-13 14:40:57,298:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:57,299:INFO:Initializing load_model()
2023-10-13 14:40:57,299:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:40:57,353:INFO:Initializing predict_model()
2023-10-13 14:40:57,353:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c23e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29833a5f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe830>)
2023-10-13 14:40:57,353:INFO:Checking exceptions
2023-10-13 14:40:57,353:INFO:Preloading libraries
2023-10-13 14:40:57,353:INFO:Set up data.
2023-10-13 14:40:57,358:INFO:Set up index.
2023-10-13 14:40:57,486:INFO:Initializing predict_model()
2023-10-13 14:40:57,487:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a3bbb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 14:40:57,487:INFO:Checking exceptions
2023-10-13 14:40:57,487:INFO:Preloading libraries
2023-10-13 14:40:57,487:INFO:Set up data.
2023-10-13 14:40:57,491:INFO:Set up index.
2023-10-13 14:40:57,571:INFO:Initializing predict_model()
2023-10-13 14:40:57,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a3bbb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 14:40:57,571:INFO:Checking exceptions
2023-10-13 14:40:57,571:INFO:Preloading libraries
2023-10-13 14:40:57,572:INFO:Set up data.
2023-10-13 14:40:57,576:INFO:Set up index.
2023-10-13 14:40:57,652:INFO:Initializing predict_model()
2023-10-13 14:40:57,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a3bbb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 14:40:57,652:INFO:Checking exceptions
2023-10-13 14:40:57,652:INFO:Preloading libraries
2023-10-13 14:40:57,652:INFO:Set up data.
2023-10-13 14:40:57,656:INFO:Set up index.
2023-10-13 14:40:57,733:INFO:Initializing predict_model()
2023-10-13 14:40:57,734:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293a3bbb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983307c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 14:40:57,734:INFO:Checking exceptions
2023-10-13 14:40:57,734:INFO:Preloading libraries
2023-10-13 14:40:57,734:INFO:Set up data.
2023-10-13 14:40:57,738:INFO:Set up index.
2023-10-13 14:41:18,729:INFO:Initializing load_model()
2023-10-13 14:41:18,730:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:18,733:INFO:Initializing load_model()
2023-10-13 14:41:18,733:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:18,735:INFO:Initializing load_model()
2023-10-13 14:41:18,735:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:18,737:INFO:Initializing load_model()
2023-10-13 14:41:18,737:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:18,739:INFO:Initializing load_model()
2023-10-13 14:41:18,739:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:21,157:INFO:Initializing load_model()
2023-10-13 14:41:21,157:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:21,158:INFO:Initializing load_model()
2023-10-13 14:41:21,158:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:21,160:INFO:Initializing load_model()
2023-10-13 14:41:21,160:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:21,161:INFO:Initializing load_model()
2023-10-13 14:41:21,161:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:21,162:INFO:Initializing load_model()
2023-10-13 14:41:21,162:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:41:21,210:INFO:Initializing predict_model()
2023-10-13 14:41:21,210:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930fc40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x293c84f70>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:41:21,210:INFO:Checking exceptions
2023-10-13 14:41:21,210:INFO:Preloading libraries
2023-10-13 14:41:21,210:INFO:Set up data.
2023-10-13 14:41:21,217:INFO:Set up index.
2023-10-13 14:41:21,293:INFO:Initializing predict_model()
2023-10-13 14:41:21,293:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f27d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:41:21,293:INFO:Checking exceptions
2023-10-13 14:41:21,293:INFO:Preloading libraries
2023-10-13 14:41:21,293:INFO:Set up data.
2023-10-13 14:41:21,297:INFO:Set up index.
2023-10-13 14:41:21,373:INFO:Initializing predict_model()
2023-10-13 14:41:21,373:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f27d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:41:21,373:INFO:Checking exceptions
2023-10-13 14:41:21,373:INFO:Preloading libraries
2023-10-13 14:41:21,373:INFO:Set up data.
2023-10-13 14:41:21,378:INFO:Set up index.
2023-10-13 14:41:21,453:INFO:Initializing predict_model()
2023-10-13 14:41:21,454:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f27d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:41:21,454:INFO:Checking exceptions
2023-10-13 14:41:21,454:INFO:Preloading libraries
2023-10-13 14:41:21,454:INFO:Set up data.
2023-10-13 14:41:21,458:INFO:Set up index.
2023-10-13 14:41:21,532:INFO:Initializing predict_model()
2023-10-13 14:41:21,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f27d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x299254400>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:41:21,532:INFO:Checking exceptions
2023-10-13 14:41:21,532:INFO:Preloading libraries
2023-10-13 14:41:21,532:INFO:Set up data.
2023-10-13 14:41:21,536:INFO:Set up index.
2023-10-13 14:42:03,429:INFO:Initializing load_model()
2023-10-13 14:42:03,430:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:03,433:INFO:Initializing load_model()
2023-10-13 14:42:03,433:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:03,435:INFO:Initializing load_model()
2023-10-13 14:42:03,435:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:03,437:INFO:Initializing load_model()
2023-10-13 14:42:03,437:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:03,439:INFO:Initializing load_model()
2023-10-13 14:42:03,439:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,292:INFO:Initializing load_model()
2023-10-13 14:42:05,293:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,295:INFO:Initializing load_model()
2023-10-13 14:42:05,296:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,298:INFO:Initializing load_model()
2023-10-13 14:42:05,298:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,300:INFO:Initializing load_model()
2023-10-13 14:42:05,300:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,311:INFO:Initializing load_model()
2023-10-13 14:42:05,311:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,503:INFO:Initializing load_model()
2023-10-13 14:42:05,503:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,504:INFO:Initializing load_model()
2023-10-13 14:42:05,504:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,506:INFO:Initializing load_model()
2023-10-13 14:42:05,506:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,507:INFO:Initializing load_model()
2023-10-13 14:42:05,507:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:05,510:INFO:Initializing load_model()
2023-10-13 14:42:05,510:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:07,165:INFO:Initializing load_model()
2023-10-13 14:42:07,166:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:07,172:INFO:Initializing load_model()
2023-10-13 14:42:07,172:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:07,176:INFO:Initializing load_model()
2023-10-13 14:42:07,176:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:07,179:INFO:Initializing load_model()
2023-10-13 14:42:07,179:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:07,181:INFO:Initializing load_model()
2023-10-13 14:42:07,181:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:07,238:INFO:Initializing predict_model()
2023-10-13 14:42:07,238:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299316140>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298333df0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fcee0>)
2023-10-13 14:42:07,238:INFO:Checking exceptions
2023-10-13 14:42:07,238:INFO:Preloading libraries
2023-10-13 14:42:07,240:INFO:Set up data.
2023-10-13 14:42:07,250:INFO:Set up index.
2023-10-13 14:42:07,379:INFO:Initializing predict_model()
2023-10-13 14:42:07,379:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299254490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 14:42:07,379:INFO:Checking exceptions
2023-10-13 14:42:07,379:INFO:Preloading libraries
2023-10-13 14:42:07,380:INFO:Set up data.
2023-10-13 14:42:07,384:INFO:Set up index.
2023-10-13 14:42:07,464:INFO:Initializing predict_model()
2023-10-13 14:42:07,464:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 14:42:07,464:INFO:Checking exceptions
2023-10-13 14:42:07,464:INFO:Preloading libraries
2023-10-13 14:42:07,464:INFO:Set up data.
2023-10-13 14:42:07,468:INFO:Set up index.
2023-10-13 14:42:07,581:INFO:Initializing predict_model()
2023-10-13 14:42:07,581:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 14:42:07,581:INFO:Checking exceptions
2023-10-13 14:42:07,581:INFO:Preloading libraries
2023-10-13 14:42:07,581:INFO:Set up data.
2023-10-13 14:42:07,586:INFO:Set up index.
2023-10-13 14:42:07,686:INFO:Initializing predict_model()
2023-10-13 14:42:07,686:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e6770>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29833bd60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695fc0>)
2023-10-13 14:42:07,686:INFO:Checking exceptions
2023-10-13 14:42:07,686:INFO:Preloading libraries
2023-10-13 14:42:07,686:INFO:Set up data.
2023-10-13 14:42:07,691:INFO:Set up index.
2023-10-13 14:42:23,530:INFO:Initializing load_model()
2023-10-13 14:42:23,530:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:23,536:INFO:Initializing load_model()
2023-10-13 14:42:23,536:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:23,539:INFO:Initializing load_model()
2023-10-13 14:42:23,539:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:23,541:INFO:Initializing load_model()
2023-10-13 14:42:23,541:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:23,544:INFO:Initializing load_model()
2023-10-13 14:42:23,544:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,618:INFO:Initializing load_model()
2023-10-13 14:42:27,618:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,620:INFO:Initializing load_model()
2023-10-13 14:42:27,620:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,629:INFO:Initializing load_model()
2023-10-13 14:42:27,629:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,632:INFO:Initializing load_model()
2023-10-13 14:42:27,632:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,634:INFO:Initializing load_model()
2023-10-13 14:42:27,634:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,754:INFO:Initializing load_model()
2023-10-13 14:42:27,754:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,755:INFO:Initializing load_model()
2023-10-13 14:42:27,755:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,756:INFO:Initializing load_model()
2023-10-13 14:42:27,756:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,757:INFO:Initializing load_model()
2023-10-13 14:42:27,757:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:27,759:INFO:Initializing load_model()
2023-10-13 14:42:27,759:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:28,970:INFO:Initializing load_model()
2023-10-13 14:42:28,970:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:28,971:INFO:Initializing load_model()
2023-10-13 14:42:28,971:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:28,973:INFO:Initializing load_model()
2023-10-13 14:42:28,973:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:28,974:INFO:Initializing load_model()
2023-10-13 14:42:28,974:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:28,975:INFO:Initializing load_model()
2023-10-13 14:42:28,975:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:29,035:INFO:Initializing predict_model()
2023-10-13 14:42:29,036:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992d0130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983386d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 14:42:29,036:INFO:Checking exceptions
2023-10-13 14:42:29,036:INFO:Preloading libraries
2023-10-13 14:42:29,036:INFO:Set up data.
2023-10-13 14:42:29,041:INFO:Set up index.
2023-10-13 14:42:29,120:INFO:Initializing predict_model()
2023-10-13 14:42:29,120:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e5750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 14:42:29,120:INFO:Checking exceptions
2023-10-13 14:42:29,120:INFO:Preloading libraries
2023-10-13 14:42:29,120:INFO:Set up data.
2023-10-13 14:42:29,125:INFO:Set up index.
2023-10-13 14:42:29,198:INFO:Initializing predict_model()
2023-10-13 14:42:29,198:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e5750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 14:42:29,198:INFO:Checking exceptions
2023-10-13 14:42:29,198:INFO:Preloading libraries
2023-10-13 14:42:29,198:INFO:Set up data.
2023-10-13 14:42:29,202:INFO:Set up index.
2023-10-13 14:42:29,277:INFO:Initializing predict_model()
2023-10-13 14:42:29,277:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a4130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 14:42:29,277:INFO:Checking exceptions
2023-10-13 14:42:29,277:INFO:Preloading libraries
2023-10-13 14:42:29,278:INFO:Set up data.
2023-10-13 14:42:29,282:INFO:Set up index.
2023-10-13 14:42:29,363:INFO:Initializing predict_model()
2023-10-13 14:42:29,364:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971a4130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2947c1150>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170695e10>)
2023-10-13 14:42:29,364:INFO:Checking exceptions
2023-10-13 14:42:29,364:INFO:Preloading libraries
2023-10-13 14:42:29,364:INFO:Set up data.
2023-10-13 14:42:29,368:INFO:Set up index.
2023-10-13 14:42:33,403:INFO:Initializing load_model()
2023-10-13 14:42:33,403:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:33,405:INFO:Initializing load_model()
2023-10-13 14:42:33,405:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:33,406:INFO:Initializing load_model()
2023-10-13 14:42:33,406:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:33,407:INFO:Initializing load_model()
2023-10-13 14:42:33,407:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:33,409:INFO:Initializing load_model()
2023-10-13 14:42:33,409:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:43,683:INFO:Initializing load_model()
2023-10-13 14:42:43,683:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:43,686:INFO:Initializing load_model()
2023-10-13 14:42:43,686:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:43,689:INFO:Initializing load_model()
2023-10-13 14:42:43,689:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:43,690:INFO:Initializing load_model()
2023-10-13 14:42:43,690:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:43,692:INFO:Initializing load_model()
2023-10-13 14:42:43,692:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:50,489:INFO:Initializing load_model()
2023-10-13 14:42:50,489:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:50,498:INFO:Initializing load_model()
2023-10-13 14:42:50,498:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:50,505:INFO:Initializing load_model()
2023-10-13 14:42:50,505:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:50,509:INFO:Initializing load_model()
2023-10-13 14:42:50,509:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:42:50,511:INFO:Initializing load_model()
2023-10-13 14:42:50,511:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:07,850:INFO:Initializing load_model()
2023-10-13 14:43:07,850:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:07,854:INFO:Initializing load_model()
2023-10-13 14:43:07,854:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:07,856:INFO:Initializing load_model()
2023-10-13 14:43:07,856:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:07,858:INFO:Initializing load_model()
2023-10-13 14:43:07,858:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:07,860:INFO:Initializing load_model()
2023-10-13 14:43:07,860:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:09,921:INFO:Initializing load_model()
2023-10-13 14:43:09,922:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:09,924:INFO:Initializing load_model()
2023-10-13 14:43:09,924:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:09,926:INFO:Initializing load_model()
2023-10-13 14:43:09,926:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:09,927:INFO:Initializing load_model()
2023-10-13 14:43:09,927:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:09,929:INFO:Initializing load_model()
2023-10-13 14:43:09,929:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:21,033:INFO:Initializing load_model()
2023-10-13 14:43:21,033:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:21,036:INFO:Initializing load_model()
2023-10-13 14:43:21,036:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:21,039:INFO:Initializing load_model()
2023-10-13 14:43:21,039:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:21,041:INFO:Initializing load_model()
2023-10-13 14:43:21,041:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:43:21,042:INFO:Initializing load_model()
2023-10-13 14:43:21,042:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:40,309:INFO:Initializing load_model()
2023-10-13 14:44:40,310:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:40,316:INFO:Initializing load_model()
2023-10-13 14:44:40,316:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:40,319:INFO:Initializing load_model()
2023-10-13 14:44:40,319:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:40,322:INFO:Initializing load_model()
2023-10-13 14:44:40,322:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:40,323:INFO:Initializing load_model()
2023-10-13 14:44:40,323:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:41,953:INFO:Initializing load_model()
2023-10-13 14:44:41,953:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:41,954:INFO:Initializing load_model()
2023-10-13 14:44:41,955:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:41,956:INFO:Initializing load_model()
2023-10-13 14:44:41,956:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:41,957:INFO:Initializing load_model()
2023-10-13 14:44:41,958:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:41,960:INFO:Initializing load_model()
2023-10-13 14:44:41,960:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:45,361:INFO:Initializing load_model()
2023-10-13 14:44:45,361:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:45,363:INFO:Initializing load_model()
2023-10-13 14:44:45,363:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:45,365:INFO:Initializing load_model()
2023-10-13 14:44:45,365:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:45,367:INFO:Initializing load_model()
2023-10-13 14:44:45,367:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:45,368:INFO:Initializing load_model()
2023-10-13 14:44:45,368:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:48,761:INFO:Initializing load_model()
2023-10-13 14:44:48,762:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:48,764:INFO:Initializing load_model()
2023-10-13 14:44:48,764:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:48,776:INFO:Initializing load_model()
2023-10-13 14:44:48,776:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:48,778:INFO:Initializing load_model()
2023-10-13 14:44:48,778:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:48,780:INFO:Initializing load_model()
2023-10-13 14:44:48,780:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:50,718:INFO:Initializing load_model()
2023-10-13 14:44:50,718:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:50,720:INFO:Initializing load_model()
2023-10-13 14:44:50,720:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:50,721:INFO:Initializing load_model()
2023-10-13 14:44:50,721:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:50,722:INFO:Initializing load_model()
2023-10-13 14:44:50,722:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:44:50,724:INFO:Initializing load_model()
2023-10-13 14:44:50,724:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:45:34,599:INFO:Initializing load_model()
2023-10-13 14:45:34,599:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:45:34,604:INFO:Initializing load_model()
2023-10-13 14:45:34,604:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:45:34,607:INFO:Initializing load_model()
2023-10-13 14:45:34,607:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:45:34,609:INFO:Initializing load_model()
2023-10-13 14:45:34,609:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:45:34,612:INFO:Initializing load_model()
2023-10-13 14:45:34,612:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:03,273:INFO:Initializing load_model()
2023-10-13 14:46:03,274:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:03,278:INFO:Initializing load_model()
2023-10-13 14:46:03,278:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:03,281:INFO:Initializing load_model()
2023-10-13 14:46:03,281:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:03,283:INFO:Initializing load_model()
2023-10-13 14:46:03,283:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:03,285:INFO:Initializing load_model()
2023-10-13 14:46:03,285:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:06,040:INFO:Initializing load_model()
2023-10-13 14:46:06,040:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:06,042:INFO:Initializing load_model()
2023-10-13 14:46:06,042:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:06,045:INFO:Initializing load_model()
2023-10-13 14:46:06,045:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:06,048:INFO:Initializing load_model()
2023-10-13 14:46:06,048:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:06,050:INFO:Initializing load_model()
2023-10-13 14:46:06,050:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:09,464:INFO:Initializing load_model()
2023-10-13 14:46:09,465:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:09,466:INFO:Initializing load_model()
2023-10-13 14:46:09,466:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:09,468:INFO:Initializing load_model()
2023-10-13 14:46:09,468:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:09,469:INFO:Initializing load_model()
2023-10-13 14:46:09,469:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:09,470:INFO:Initializing load_model()
2023-10-13 14:46:09,470:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:10,342:INFO:Initializing load_model()
2023-10-13 14:46:10,342:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:10,343:INFO:Initializing load_model()
2023-10-13 14:46:10,343:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:10,344:INFO:Initializing load_model()
2023-10-13 14:46:10,344:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:10,345:INFO:Initializing load_model()
2023-10-13 14:46:10,345:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:10,347:INFO:Initializing load_model()
2023-10-13 14:46:10,347:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:17,926:INFO:Initializing load_model()
2023-10-13 14:46:17,927:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:17,929:INFO:Initializing load_model()
2023-10-13 14:46:17,929:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:17,931:INFO:Initializing load_model()
2023-10-13 14:46:17,931:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:17,932:INFO:Initializing load_model()
2023-10-13 14:46:17,932:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:17,934:INFO:Initializing load_model()
2023-10-13 14:46:17,934:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:19,896:INFO:Initializing load_model()
2023-10-13 14:46:19,896:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:19,897:INFO:Initializing load_model()
2023-10-13 14:46:19,897:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:19,898:INFO:Initializing load_model()
2023-10-13 14:46:19,898:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:19,900:INFO:Initializing load_model()
2023-10-13 14:46:19,900:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:19,902:INFO:Initializing load_model()
2023-10-13 14:46:19,902:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:22,454:INFO:Initializing load_model()
2023-10-13 14:46:22,454:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:22,455:INFO:Initializing load_model()
2023-10-13 14:46:22,455:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:22,456:INFO:Initializing load_model()
2023-10-13 14:46:22,456:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:22,458:INFO:Initializing load_model()
2023-10-13 14:46:22,458:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:46:22,459:INFO:Initializing load_model()
2023-10-13 14:46:22,459:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:04,392:INFO:Initializing load_model()
2023-10-13 14:48:04,392:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:04,396:INFO:Initializing load_model()
2023-10-13 14:48:04,396:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:04,398:INFO:Initializing load_model()
2023-10-13 14:48:04,398:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:04,401:INFO:Initializing load_model()
2023-10-13 14:48:04,401:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:04,402:INFO:Initializing load_model()
2023-10-13 14:48:04,402:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:10,117:INFO:Initializing load_model()
2023-10-13 14:48:10,117:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:10,119:INFO:Initializing load_model()
2023-10-13 14:48:10,119:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:10,121:INFO:Initializing load_model()
2023-10-13 14:48:10,121:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:10,123:INFO:Initializing load_model()
2023-10-13 14:48:10,123:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:10,124:INFO:Initializing load_model()
2023-10-13 14:48:10,124:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:10,161:INFO:Initializing predict_model()
2023-10-13 14:48:10,161:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992540d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29831bcd0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 14:48:10,161:INFO:Checking exceptions
2023-10-13 14:48:10,161:INFO:Preloading libraries
2023-10-13 14:48:10,161:INFO:Set up data.
2023-10-13 14:48:10,166:INFO:Set up index.
2023-10-13 14:48:10,241:INFO:Initializing predict_model()
2023-10-13 14:48:10,242:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b7340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-13 14:48:10,242:INFO:Checking exceptions
2023-10-13 14:48:10,242:INFO:Preloading libraries
2023-10-13 14:48:10,242:INFO:Set up data.
2023-10-13 14:48:10,246:INFO:Set up index.
2023-10-13 14:48:10,321:INFO:Initializing predict_model()
2023-10-13 14:48:10,321:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b7340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-13 14:48:10,321:INFO:Checking exceptions
2023-10-13 14:48:10,321:INFO:Preloading libraries
2023-10-13 14:48:10,321:INFO:Set up data.
2023-10-13 14:48:10,326:INFO:Set up index.
2023-10-13 14:48:10,400:INFO:Initializing predict_model()
2023-10-13 14:48:10,400:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b7340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-13 14:48:10,400:INFO:Checking exceptions
2023-10-13 14:48:10,400:INFO:Preloading libraries
2023-10-13 14:48:10,400:INFO:Set up data.
2023-10-13 14:48:10,404:INFO:Set up index.
2023-10-13 14:48:10,482:INFO:Initializing predict_model()
2023-10-13 14:48:10,482:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b7340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2992d0eb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-13 14:48:10,482:INFO:Checking exceptions
2023-10-13 14:48:10,482:INFO:Preloading libraries
2023-10-13 14:48:10,483:INFO:Set up data.
2023-10-13 14:48:10,487:INFO:Set up index.
2023-10-13 14:48:22,441:INFO:Initializing load_model()
2023-10-13 14:48:22,441:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:22,444:INFO:Initializing load_model()
2023-10-13 14:48:22,444:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:22,449:INFO:Initializing load_model()
2023-10-13 14:48:22,449:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:22,452:INFO:Initializing load_model()
2023-10-13 14:48:22,452:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:48:22,455:INFO:Initializing load_model()
2023-10-13 14:48:22,455:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:58,070:INFO:Initializing load_model()
2023-10-13 14:50:58,071:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:58,078:INFO:Initializing load_model()
2023-10-13 14:50:58,078:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:58,081:INFO:Initializing load_model()
2023-10-13 14:50:58,081:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:58,083:INFO:Initializing load_model()
2023-10-13 14:50:58,083:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:58,085:INFO:Initializing load_model()
2023-10-13 14:50:58,085:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:59,502:INFO:Initializing load_model()
2023-10-13 14:50:59,502:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:59,503:INFO:Initializing load_model()
2023-10-13 14:50:59,503:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:59,505:INFO:Initializing load_model()
2023-10-13 14:50:59,505:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:59,506:INFO:Initializing load_model()
2023-10-13 14:50:59,506:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:59,508:INFO:Initializing load_model()
2023-10-13 14:50:59,508:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:50:59,541:INFO:Initializing predict_model()
2023-10-13 14:50:59,541:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983306d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29831b340>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:50:59,541:INFO:Checking exceptions
2023-10-13 14:50:59,541:INFO:Preloading libraries
2023-10-13 14:50:59,542:INFO:Set up data.
2023-10-13 14:50:59,546:INFO:Set up index.
2023-10-13 14:50:59,623:INFO:Initializing predict_model()
2023-10-13 14:50:59,623:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f34c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:50:59,623:INFO:Checking exceptions
2023-10-13 14:50:59,623:INFO:Preloading libraries
2023-10-13 14:50:59,623:INFO:Set up data.
2023-10-13 14:50:59,627:INFO:Set up index.
2023-10-13 14:50:59,701:INFO:Initializing predict_model()
2023-10-13 14:50:59,701:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f34c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:50:59,701:INFO:Checking exceptions
2023-10-13 14:50:59,701:INFO:Preloading libraries
2023-10-13 14:50:59,702:INFO:Set up data.
2023-10-13 14:50:59,706:INFO:Set up index.
2023-10-13 14:50:59,778:INFO:Initializing predict_model()
2023-10-13 14:50:59,778:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f34c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:50:59,778:INFO:Checking exceptions
2023-10-13 14:50:59,778:INFO:Preloading libraries
2023-10-13 14:50:59,778:INFO:Set up data.
2023-10-13 14:50:59,782:INFO:Set up index.
2023-10-13 14:50:59,860:INFO:Initializing predict_model()
2023-10-13 14:50:59,861:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f34c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29833a9e0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:50:59,861:INFO:Checking exceptions
2023-10-13 14:50:59,861:INFO:Preloading libraries
2023-10-13 14:50:59,861:INFO:Set up data.
2023-10-13 14:50:59,865:INFO:Set up index.
2023-10-13 14:51:01,591:INFO:Initializing load_model()
2023-10-13 14:51:01,591:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:01,592:INFO:Initializing load_model()
2023-10-13 14:51:01,592:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:01,594:INFO:Initializing load_model()
2023-10-13 14:51:01,594:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:01,595:INFO:Initializing load_model()
2023-10-13 14:51:01,595:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:01,596:INFO:Initializing load_model()
2023-10-13 14:51:01,596:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:02,724:INFO:Initializing load_model()
2023-10-13 14:51:02,724:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:02,725:INFO:Initializing load_model()
2023-10-13 14:51:02,725:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:02,726:INFO:Initializing load_model()
2023-10-13 14:51:02,726:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:02,728:INFO:Initializing load_model()
2023-10-13 14:51:02,728:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:02,729:INFO:Initializing load_model()
2023-10-13 14:51:02,729:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:03,870:INFO:Initializing load_model()
2023-10-13 14:51:03,870:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:03,871:INFO:Initializing load_model()
2023-10-13 14:51:03,871:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:03,873:INFO:Initializing load_model()
2023-10-13 14:51:03,873:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:03,874:INFO:Initializing load_model()
2023-10-13 14:51:03,874:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:03,875:INFO:Initializing load_model()
2023-10-13 14:51:03,875:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:03,906:INFO:Initializing predict_model()
2023-10-13 14:51:03,906:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c17e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29831b190>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ffd00>)
2023-10-13 14:51:03,906:INFO:Checking exceptions
2023-10-13 14:51:03,906:INFO:Preloading libraries
2023-10-13 14:51:03,906:INFO:Set up data.
2023-10-13 14:51:03,910:INFO:Set up index.
2023-10-13 14:51:03,987:INFO:Initializing predict_model()
2023-10-13 14:51:03,987:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b28f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:51:03,988:INFO:Checking exceptions
2023-10-13 14:51:03,988:INFO:Preloading libraries
2023-10-13 14:51:03,988:INFO:Set up data.
2023-10-13 14:51:03,992:INFO:Set up index.
2023-10-13 14:51:04,066:INFO:Initializing predict_model()
2023-10-13 14:51:04,066:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b28f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:51:04,066:INFO:Checking exceptions
2023-10-13 14:51:04,066:INFO:Preloading libraries
2023-10-13 14:51:04,067:INFO:Set up data.
2023-10-13 14:51:04,071:INFO:Set up index.
2023-10-13 14:51:04,143:INFO:Initializing predict_model()
2023-10-13 14:51:04,143:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b28f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:51:04,143:INFO:Checking exceptions
2023-10-13 14:51:04,143:INFO:Preloading libraries
2023-10-13 14:51:04,143:INFO:Set up data.
2023-10-13 14:51:04,147:INFO:Set up index.
2023-10-13 14:51:04,262:INFO:Initializing predict_model()
2023-10-13 14:51:04,262:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b28f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983382b0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-13 14:51:04,262:INFO:Checking exceptions
2023-10-13 14:51:04,262:INFO:Preloading libraries
2023-10-13 14:51:04,262:INFO:Set up data.
2023-10-13 14:51:04,276:INFO:Set up index.
2023-10-13 14:51:22,203:INFO:Initializing load_model()
2023-10-13 14:51:22,204:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:22,208:INFO:Initializing load_model()
2023-10-13 14:51:22,208:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:22,211:INFO:Initializing load_model()
2023-10-13 14:51:22,211:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:22,213:INFO:Initializing load_model()
2023-10-13 14:51:22,213:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:22,215:INFO:Initializing load_model()
2023-10-13 14:51:22,215:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:22,356:INFO:Initializing load_model()
2023-10-13 14:51:22,356:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:22,357:INFO:Initializing load_model()
2023-10-13 14:51:22,357:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:22,360:INFO:Initializing load_model()
2023-10-13 14:51:22,360:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:22,361:INFO:Initializing load_model()
2023-10-13 14:51:22,361:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:22,362:INFO:Initializing load_model()
2023-10-13 14:51:22,362:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:27,518:INFO:Initializing load_model()
2023-10-13 14:51:27,519:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:27,520:INFO:Initializing load_model()
2023-10-13 14:51:27,520:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:27,521:INFO:Initializing load_model()
2023-10-13 14:51:27,521:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:27,522:INFO:Initializing load_model()
2023-10-13 14:51:27,522:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:27,523:INFO:Initializing load_model()
2023-10-13 14:51:27,523:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:51:27,571:INFO:Initializing predict_model()
2023-10-13 14:51:27,571:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299314670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298332080>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe440>)
2023-10-13 14:51:27,571:INFO:Checking exceptions
2023-10-13 14:51:27,571:INFO:Preloading libraries
2023-10-13 14:51:27,572:INFO:Set up data.
2023-10-13 14:51:27,576:INFO:Set up index.
2023-10-13 14:51:27,651:INFO:Initializing predict_model()
2023-10-13 14:51:27,651:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b7790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b010>)
2023-10-13 14:51:27,651:INFO:Checking exceptions
2023-10-13 14:51:27,652:INFO:Preloading libraries
2023-10-13 14:51:27,652:INFO:Set up data.
2023-10-13 14:51:27,656:INFO:Set up index.
2023-10-13 14:51:27,733:INFO:Initializing predict_model()
2023-10-13 14:51:27,733:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f37f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b010>)
2023-10-13 14:51:27,733:INFO:Checking exceptions
2023-10-13 14:51:27,733:INFO:Preloading libraries
2023-10-13 14:51:27,733:INFO:Set up data.
2023-10-13 14:51:27,738:INFO:Set up index.
2023-10-13 14:51:27,814:INFO:Initializing predict_model()
2023-10-13 14:51:27,814:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f37f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b010>)
2023-10-13 14:51:27,815:INFO:Checking exceptions
2023-10-13 14:51:27,815:INFO:Preloading libraries
2023-10-13 14:51:27,815:INFO:Set up data.
2023-10-13 14:51:27,819:INFO:Set up index.
2023-10-13 14:51:27,894:INFO:Initializing predict_model()
2023-10-13 14:51:27,894:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f37f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29831a620>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b14b010>)
2023-10-13 14:51:27,894:INFO:Checking exceptions
2023-10-13 14:51:27,894:INFO:Preloading libraries
2023-10-13 14:51:27,894:INFO:Set up data.
2023-10-13 14:51:27,899:INFO:Set up index.
2023-10-13 14:52:15,764:INFO:Initializing load_model()
2023-10-13 14:52:15,765:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:15,768:INFO:Initializing load_model()
2023-10-13 14:52:15,768:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:15,775:INFO:Initializing load_model()
2023-10-13 14:52:15,776:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:15,778:INFO:Initializing load_model()
2023-10-13 14:52:15,778:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:15,780:INFO:Initializing load_model()
2023-10-13 14:52:15,780:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:15,945:INFO:Initializing load_model()
2023-10-13 14:52:15,945:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:15,946:INFO:Initializing load_model()
2023-10-13 14:52:15,946:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:15,948:INFO:Initializing load_model()
2023-10-13 14:52:15,948:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:15,949:INFO:Initializing load_model()
2023-10-13 14:52:15,949:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:15,950:INFO:Initializing load_model()
2023-10-13 14:52:15,950:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:18,655:INFO:Initializing load_model()
2023-10-13 14:52:18,655:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:18,657:INFO:Initializing load_model()
2023-10-13 14:52:18,657:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:18,659:INFO:Initializing load_model()
2023-10-13 14:52:18,659:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:18,660:INFO:Initializing load_model()
2023-10-13 14:52:18,660:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:18,661:INFO:Initializing load_model()
2023-10-13 14:52:18,661:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:21,216:INFO:Initializing load_model()
2023-10-13 14:52:21,216:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:21,218:INFO:Initializing load_model()
2023-10-13 14:52:21,218:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:21,220:INFO:Initializing load_model()
2023-10-13 14:52:21,220:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:21,222:INFO:Initializing load_model()
2023-10-13 14:52:21,222:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:21,224:INFO:Initializing load_model()
2023-10-13 14:52:21,224:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:52:21,293:INFO:Initializing predict_model()
2023-10-13 14:52:21,293:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930faf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29833bf40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fcaf0>)
2023-10-13 14:52:21,293:INFO:Checking exceptions
2023-10-13 14:52:21,293:INFO:Preloading libraries
2023-10-13 14:52:21,293:INFO:Set up data.
2023-10-13 14:52:21,298:INFO:Set up index.
2023-10-13 14:52:21,384:INFO:Initializing predict_model()
2023-10-13 14:52:21,384:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299316e00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 14:52:21,384:INFO:Checking exceptions
2023-10-13 14:52:21,384:INFO:Preloading libraries
2023-10-13 14:52:21,384:INFO:Set up data.
2023-10-13 14:52:21,388:INFO:Set up index.
2023-10-13 14:52:21,465:INFO:Initializing predict_model()
2023-10-13 14:52:21,465:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298332cb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 14:52:21,465:INFO:Checking exceptions
2023-10-13 14:52:21,465:INFO:Preloading libraries
2023-10-13 14:52:21,465:INFO:Set up data.
2023-10-13 14:52:21,470:INFO:Set up index.
2023-10-13 14:52:21,544:INFO:Initializing predict_model()
2023-10-13 14:52:21,544:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299254be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 14:52:21,544:INFO:Checking exceptions
2023-10-13 14:52:21,544:INFO:Preloading libraries
2023-10-13 14:52:21,545:INFO:Set up data.
2023-10-13 14:52:21,549:INFO:Set up index.
2023-10-13 14:52:21,628:INFO:Initializing predict_model()
2023-10-13 14:52:21,628:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299254be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29833ba30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-13 14:52:21,629:INFO:Checking exceptions
2023-10-13 14:52:21,629:INFO:Preloading libraries
2023-10-13 14:52:21,629:INFO:Set up data.
2023-10-13 14:52:21,633:INFO:Set up index.
2023-10-13 14:53:01,372:INFO:Initializing load_model()
2023-10-13 14:53:01,373:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:01,388:INFO:Initializing load_model()
2023-10-13 14:53:01,388:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:01,399:INFO:Initializing load_model()
2023-10-13 14:53:01,399:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:01,402:INFO:Initializing load_model()
2023-10-13 14:53:01,402:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:01,404:INFO:Initializing load_model()
2023-10-13 14:53:01,404:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:01,535:INFO:Initializing predict_model()
2023-10-13 14:53:01,535:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29839a5c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x293c86a10>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ffeb0>)
2023-10-13 14:53:01,535:INFO:Checking exceptions
2023-10-13 14:53:01,535:INFO:Preloading libraries
2023-10-13 14:53:01,538:INFO:Set up data.
2023-10-13 14:53:01,558:INFO:Set up index.
2023-10-13 14:53:01,834:INFO:Initializing predict_model()
2023-10-13 14:53:01,834:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e77f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 14:53:01,834:INFO:Checking exceptions
2023-10-13 14:53:01,834:INFO:Preloading libraries
2023-10-13 14:53:01,834:INFO:Set up data.
2023-10-13 14:53:01,838:INFO:Set up index.
2023-10-13 14:53:01,912:INFO:Initializing predict_model()
2023-10-13 14:53:01,912:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e77f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 14:53:01,912:INFO:Checking exceptions
2023-10-13 14:53:01,912:INFO:Preloading libraries
2023-10-13 14:53:01,912:INFO:Set up data.
2023-10-13 14:53:01,916:INFO:Set up index.
2023-10-13 14:53:01,990:INFO:Initializing predict_model()
2023-10-13 14:53:01,990:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e77f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 14:53:01,990:INFO:Checking exceptions
2023-10-13 14:53:01,990:INFO:Preloading libraries
2023-10-13 14:53:01,990:INFO:Set up data.
2023-10-13 14:53:01,994:INFO:Set up index.
2023-10-13 14:53:02,113:INFO:Initializing predict_model()
2023-10-13 14:53:02,114:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e77f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2992d1f30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 14:53:02,114:INFO:Checking exceptions
2023-10-13 14:53:02,114:INFO:Preloading libraries
2023-10-13 14:53:02,114:INFO:Set up data.
2023-10-13 14:53:02,122:INFO:Set up index.
2023-10-13 14:53:11,636:INFO:Initializing load_model()
2023-10-13 14:53:11,637:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:11,646:INFO:Initializing load_model()
2023-10-13 14:53:11,646:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:11,654:INFO:Initializing load_model()
2023-10-13 14:53:11,654:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:11,656:INFO:Initializing load_model()
2023-10-13 14:53:11,656:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:11,658:INFO:Initializing load_model()
2023-10-13 14:53:11,658:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:11,766:INFO:Initializing predict_model()
2023-10-13 14:53:11,766:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294839cf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29831b4c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-13 14:53:11,766:INFO:Checking exceptions
2023-10-13 14:53:11,766:INFO:Preloading libraries
2023-10-13 14:53:11,767:INFO:Set up data.
2023-10-13 14:53:11,773:INFO:Set up index.
2023-10-13 14:53:11,909:INFO:Initializing predict_model()
2023-10-13 14:53:11,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-13 14:53:11,910:INFO:Checking exceptions
2023-10-13 14:53:11,910:INFO:Preloading libraries
2023-10-13 14:53:11,910:INFO:Set up data.
2023-10-13 14:53:11,914:INFO:Set up index.
2023-10-13 14:53:11,988:INFO:Initializing predict_model()
2023-10-13 14:53:11,989:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-13 14:53:11,989:INFO:Checking exceptions
2023-10-13 14:53:11,989:INFO:Preloading libraries
2023-10-13 14:53:11,989:INFO:Set up data.
2023-10-13 14:53:11,992:INFO:Set up index.
2023-10-13 14:53:12,065:INFO:Initializing predict_model()
2023-10-13 14:53:12,065:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-13 14:53:12,065:INFO:Checking exceptions
2023-10-13 14:53:12,065:INFO:Preloading libraries
2023-10-13 14:53:12,065:INFO:Set up data.
2023-10-13 14:53:12,069:INFO:Set up index.
2023-10-13 14:53:12,141:INFO:Initializing predict_model()
2023-10-13 14:53:12,141:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f3d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357640>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-13 14:53:12,141:INFO:Checking exceptions
2023-10-13 14:53:12,141:INFO:Preloading libraries
2023-10-13 14:53:12,141:INFO:Set up data.
2023-10-13 14:53:12,145:INFO:Set up index.
2023-10-13 14:53:19,467:INFO:Initializing load_model()
2023-10-13 14:53:19,467:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:19,469:INFO:Initializing load_model()
2023-10-13 14:53:19,470:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:19,472:INFO:Initializing load_model()
2023-10-13 14:53:19,472:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:19,474:INFO:Initializing load_model()
2023-10-13 14:53:19,474:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:19,476:INFO:Initializing load_model()
2023-10-13 14:53:19,476:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:21,506:INFO:Initializing load_model()
2023-10-13 14:53:21,506:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:21,507:INFO:Initializing load_model()
2023-10-13 14:53:21,507:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:21,511:INFO:Initializing load_model()
2023-10-13 14:53:21,511:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:21,512:INFO:Initializing load_model()
2023-10-13 14:53:21,512:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:21,513:INFO:Initializing load_model()
2023-10-13 14:53:21,513:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:29,141:INFO:Initializing load_model()
2023-10-13 14:53:29,142:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:29,146:INFO:Initializing load_model()
2023-10-13 14:53:29,146:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:29,148:INFO:Initializing load_model()
2023-10-13 14:53:29,148:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:29,149:INFO:Initializing load_model()
2023-10-13 14:53:29,149:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:29,151:INFO:Initializing load_model()
2023-10-13 14:53:29,151:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:29,223:INFO:Initializing predict_model()
2023-10-13 14:53:29,223:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c2830>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x299315570>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:53:29,223:INFO:Checking exceptions
2023-10-13 14:53:29,224:INFO:Preloading libraries
2023-10-13 14:53:29,224:INFO:Set up data.
2023-10-13 14:53:29,228:INFO:Set up index.
2023-10-13 14:53:29,348:INFO:Initializing predict_model()
2023-10-13 14:53:29,348:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f25c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:53:29,348:INFO:Checking exceptions
2023-10-13 14:53:29,348:INFO:Preloading libraries
2023-10-13 14:53:29,349:INFO:Set up data.
2023-10-13 14:53:29,353:INFO:Set up index.
2023-10-13 14:53:29,432:INFO:Initializing predict_model()
2023-10-13 14:53:29,432:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f25c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:53:29,432:INFO:Checking exceptions
2023-10-13 14:53:29,432:INFO:Preloading libraries
2023-10-13 14:53:29,433:INFO:Set up data.
2023-10-13 14:53:29,438:INFO:Set up index.
2023-10-13 14:53:29,521:INFO:Initializing predict_model()
2023-10-13 14:53:29,521:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f25c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:53:29,521:INFO:Checking exceptions
2023-10-13 14:53:29,521:INFO:Preloading libraries
2023-10-13 14:53:29,522:INFO:Set up data.
2023-10-13 14:53:29,526:INFO:Set up index.
2023-10-13 14:53:29,601:INFO:Initializing predict_model()
2023-10-13 14:53:29,601:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2971f25c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29831b790>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f82f760>)
2023-10-13 14:53:29,601:INFO:Checking exceptions
2023-10-13 14:53:29,601:INFO:Preloading libraries
2023-10-13 14:53:29,601:INFO:Set up data.
2023-10-13 14:53:29,606:INFO:Set up index.
2023-10-13 14:53:58,803:INFO:Initializing load_model()
2023-10-13 14:53:58,803:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:58,815:INFO:Initializing load_model()
2023-10-13 14:53:58,815:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:58,822:INFO:Initializing load_model()
2023-10-13 14:53:58,822:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:58,825:INFO:Initializing load_model()
2023-10-13 14:53:58,825:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:53:58,826:INFO:Initializing load_model()
2023-10-13 14:53:58,826:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:54:01,519:INFO:Initializing load_model()
2023-10-13 14:54:01,519:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:54:01,520:INFO:Initializing load_model()
2023-10-13 14:54:01,520:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:54:01,522:INFO:Initializing load_model()
2023-10-13 14:54:01,522:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:54:01,523:INFO:Initializing load_model()
2023-10-13 14:54:01,523:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:54:01,524:INFO:Initializing load_model()
2023-10-13 14:54:01,524:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:54:01,617:INFO:Initializing predict_model()
2023-10-13 14:54:01,617:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357d30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2992d2920>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 14:54:01,617:INFO:Checking exceptions
2023-10-13 14:54:01,617:INFO:Preloading libraries
2023-10-13 14:54:01,617:INFO:Set up data.
2023-10-13 14:54:01,623:INFO:Set up index.
2023-10-13 14:54:01,720:INFO:Initializing predict_model()
2023-10-13 14:54:01,720:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e77f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 14:54:01,720:INFO:Checking exceptions
2023-10-13 14:54:01,720:INFO:Preloading libraries
2023-10-13 14:54:01,720:INFO:Set up data.
2023-10-13 14:54:01,724:INFO:Set up index.
2023-10-13 14:54:01,795:INFO:Initializing predict_model()
2023-10-13 14:54:01,795:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e77f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 14:54:01,795:INFO:Checking exceptions
2023-10-13 14:54:01,795:INFO:Preloading libraries
2023-10-13 14:54:01,795:INFO:Set up data.
2023-10-13 14:54:01,799:INFO:Set up index.
2023-10-13 14:54:01,870:INFO:Initializing predict_model()
2023-10-13 14:54:01,870:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e77f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 14:54:01,870:INFO:Checking exceptions
2023-10-13 14:54:01,870:INFO:Preloading libraries
2023-10-13 14:54:01,870:INFO:Set up data.
2023-10-13 14:54:01,874:INFO:Set up index.
2023-10-13 14:54:01,944:INFO:Initializing predict_model()
2023-10-13 14:54:01,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938e77f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298339c60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ac8c10>)
2023-10-13 14:54:01,944:INFO:Checking exceptions
2023-10-13 14:54:01,944:INFO:Preloading libraries
2023-10-13 14:54:01,944:INFO:Set up data.
2023-10-13 14:54:01,948:INFO:Set up index.
2023-10-13 14:55:01,936:INFO:Initializing load_model()
2023-10-13 14:55:01,937:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:55:01,940:INFO:Initializing load_model()
2023-10-13 14:55:01,940:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:55:01,942:INFO:Initializing load_model()
2023-10-13 14:55:01,942:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:55:01,944:INFO:Initializing load_model()
2023-10-13 14:55:01,944:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:55:01,946:INFO:Initializing load_model()
2023-10-13 14:55:01,946:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:55:44,400:INFO:Initializing load_model()
2023-10-13 14:55:44,400:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:55:44,404:INFO:Initializing load_model()
2023-10-13 14:55:44,404:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:55:44,406:INFO:Initializing load_model()
2023-10-13 14:55:44,406:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:55:44,408:INFO:Initializing load_model()
2023-10-13 14:55:44,408:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:55:44,409:INFO:Initializing load_model()
2023-10-13 14:55:44,409:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,512:INFO:Initializing load_model()
2023-10-13 14:56:17,512:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,515:INFO:Initializing load_model()
2023-10-13 14:56:17,515:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,521:INFO:Initializing load_model()
2023-10-13 14:56:17,522:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,524:INFO:Initializing load_model()
2023-10-13 14:56:17,524:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,527:INFO:Initializing load_model()
2023-10-13 14:56:17,527:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,689:INFO:Initializing load_model()
2023-10-13 14:56:17,689:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,690:INFO:Initializing load_model()
2023-10-13 14:56:17,690:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,691:INFO:Initializing load_model()
2023-10-13 14:56:17,692:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,693:INFO:Initializing load_model()
2023-10-13 14:56:17,693:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:17,694:INFO:Initializing load_model()
2023-10-13 14:56:17,694:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:57,082:INFO:Initializing load_model()
2023-10-13 14:56:57,082:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:57,085:INFO:Initializing load_model()
2023-10-13 14:56:57,085:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:57,088:INFO:Initializing load_model()
2023-10-13 14:56:57,088:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:57,090:INFO:Initializing load_model()
2023-10-13 14:56:57,090:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 14:56:57,092:INFO:Initializing load_model()
2023-10-13 14:56:57,092:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:15,245:INFO:Initializing load_model()
2023-10-13 15:00:15,247:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:15,251:INFO:Initializing load_model()
2023-10-13 15:00:15,251:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:15,255:INFO:Initializing load_model()
2023-10-13 15:00:15,255:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:15,257:INFO:Initializing load_model()
2023-10-13 15:00:15,257:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:15,259:INFO:Initializing load_model()
2023-10-13 15:00:15,259:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,157:INFO:Initializing load_model()
2023-10-13 15:00:24,160:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,161:INFO:Initializing load_model()
2023-10-13 15:00:24,161:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,166:INFO:Initializing load_model()
2023-10-13 15:00:24,166:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,166:INFO:Initializing load_model()
2023-10-13 15:00:24,166:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,168:INFO:Initializing load_model()
2023-10-13 15:00:24,168:INFO:Initializing load_model()
2023-10-13 15:00:24,168:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,168:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,173:INFO:Initializing load_model()
2023-10-13 15:00:24,173:INFO:Initializing load_model()
2023-10-13 15:00:24,173:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,173:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,175:INFO:Initializing load_model()
2023-10-13 15:00:24,176:INFO:Initializing load_model()
2023-10-13 15:00:24,176:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:00:24,176:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:02,496:INFO:Initializing load_model()
2023-10-13 15:01:02,497:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:02,506:INFO:Initializing load_model()
2023-10-13 15:01:02,506:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:02,510:INFO:Initializing load_model()
2023-10-13 15:01:02,510:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:02,512:INFO:Initializing load_model()
2023-10-13 15:01:02,512:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:02,514:INFO:Initializing load_model()
2023-10-13 15:01:02,514:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:08,674:INFO:Initializing load_model()
2023-10-13 15:01:08,674:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:08,676:INFO:Initializing load_model()
2023-10-13 15:01:08,676:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:08,678:INFO:Initializing load_model()
2023-10-13 15:01:08,678:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:08,680:INFO:Initializing load_model()
2023-10-13 15:01:08,680:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:01:08,681:INFO:Initializing load_model()
2023-10-13 15:01:08,681:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:27,982:INFO:Initializing load_model()
2023-10-13 15:05:27,983:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:27,992:INFO:Initializing load_model()
2023-10-13 15:05:27,992:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:27,998:INFO:Initializing load_model()
2023-10-13 15:05:27,998:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:28,000:INFO:Initializing load_model()
2023-10-13 15:05:28,000:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:28,003:INFO:Initializing load_model()
2023-10-13 15:05:28,003:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:32,867:INFO:Initializing load_model()
2023-10-13 15:05:32,868:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:32,870:INFO:Initializing load_model()
2023-10-13 15:05:32,870:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:32,873:INFO:Initializing load_model()
2023-10-13 15:05:32,873:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:32,875:INFO:Initializing load_model()
2023-10-13 15:05:32,875:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:32,878:INFO:Initializing load_model()
2023-10-13 15:05:32,878:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:34,366:INFO:Initializing load_model()
2023-10-13 15:05:34,366:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:34,369:INFO:Initializing load_model()
2023-10-13 15:05:34,369:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:34,371:INFO:Initializing load_model()
2023-10-13 15:05:34,371:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:34,372:INFO:Initializing load_model()
2023-10-13 15:05:34,372:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:34,373:INFO:Initializing load_model()
2023-10-13 15:05:34,373:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:37,075:INFO:Initializing load_model()
2023-10-13 15:05:37,075:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:37,077:INFO:Initializing load_model()
2023-10-13 15:05:37,077:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:37,081:INFO:Initializing load_model()
2023-10-13 15:05:37,081:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:37,082:INFO:Initializing load_model()
2023-10-13 15:05:37,082:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:05:37,084:INFO:Initializing load_model()
2023-10-13 15:05:37,084:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:29,808:INFO:Initializing load_model()
2023-10-13 15:06:29,808:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:29,816:INFO:Initializing load_model()
2023-10-13 15:06:29,816:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:29,820:INFO:Initializing load_model()
2023-10-13 15:06:29,820:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:29,822:INFO:Initializing load_model()
2023-10-13 15:06:29,822:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:29,824:INFO:Initializing load_model()
2023-10-13 15:06:29,824:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:44,669:INFO:Initializing load_model()
2023-10-13 15:06:44,669:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:44,676:INFO:Initializing load_model()
2023-10-13 15:06:44,676:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:44,679:INFO:Initializing load_model()
2023-10-13 15:06:44,679:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:44,681:INFO:Initializing load_model()
2023-10-13 15:06:44,681:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:44,683:INFO:Initializing load_model()
2023-10-13 15:06:44,683:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,463:INFO:Initializing load_model()
2023-10-13 15:06:46,464:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,467:INFO:Initializing load_model()
2023-10-13 15:06:46,468:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,472:INFO:Initializing load_model()
2023-10-13 15:06:46,472:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,482:INFO:Initializing load_model()
2023-10-13 15:06:46,482:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,484:INFO:Initializing load_model()
2023-10-13 15:06:46,484:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,620:INFO:Initializing load_model()
2023-10-13 15:06:46,620:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,622:INFO:Initializing load_model()
2023-10-13 15:06:46,622:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,623:INFO:Initializing load_model()
2023-10-13 15:06:46,623:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,624:INFO:Initializing load_model()
2023-10-13 15:06:46,624:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:46,625:INFO:Initializing load_model()
2023-10-13 15:06:46,625:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:51,992:INFO:Initializing load_model()
2023-10-13 15:06:51,992:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:51,994:INFO:Initializing load_model()
2023-10-13 15:06:51,994:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:51,996:INFO:Initializing load_model()
2023-10-13 15:06:51,996:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:51,997:INFO:Initializing load_model()
2023-10-13 15:06:51,997:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:51,998:INFO:Initializing load_model()
2023-10-13 15:06:51,999:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:52,112:INFO:Initializing predict_model()
2023-10-13 15:06:52,113:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298333df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x293c853f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabf40>)
2023-10-13 15:06:52,113:INFO:Checking exceptions
2023-10-13 15:06:52,113:INFO:Preloading libraries
2023-10-13 15:06:52,113:INFO:Set up data.
2023-10-13 15:06:52,126:INFO:Set up index.
2023-10-13 15:06:52,302:INFO:Initializing predict_model()
2023-10-13 15:06:52,302:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930ca60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 15:06:52,302:INFO:Checking exceptions
2023-10-13 15:06:52,302:INFO:Preloading libraries
2023-10-13 15:06:52,303:INFO:Set up data.
2023-10-13 15:06:52,307:INFO:Set up index.
2023-10-13 15:06:52,383:INFO:Initializing predict_model()
2023-10-13 15:06:52,383:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992d0b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 15:06:52,383:INFO:Checking exceptions
2023-10-13 15:06:52,383:INFO:Preloading libraries
2023-10-13 15:06:52,383:INFO:Set up data.
2023-10-13 15:06:52,387:INFO:Set up index.
2023-10-13 15:06:52,462:INFO:Initializing predict_model()
2023-10-13 15:06:52,462:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c873a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 15:06:52,462:INFO:Checking exceptions
2023-10-13 15:06:52,462:INFO:Preloading libraries
2023-10-13 15:06:52,462:INFO:Set up data.
2023-10-13 15:06:52,466:INFO:Set up index.
2023-10-13 15:06:52,537:INFO:Initializing predict_model()
2023-10-13 15:06:52,537:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983193f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29930f7c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c32c20>)
2023-10-13 15:06:52,537:INFO:Checking exceptions
2023-10-13 15:06:52,537:INFO:Preloading libraries
2023-10-13 15:06:52,537:INFO:Set up data.
2023-10-13 15:06:52,541:INFO:Set up index.
2023-10-13 15:06:55,847:INFO:Initializing load_model()
2023-10-13 15:06:55,847:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:55,849:INFO:Initializing load_model()
2023-10-13 15:06:55,849:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:55,850:INFO:Initializing load_model()
2023-10-13 15:06:55,850:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:55,853:INFO:Initializing load_model()
2023-10-13 15:06:55,854:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:55,854:INFO:Initializing load_model()
2023-10-13 15:06:55,854:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:55,855:INFO:Initializing load_model()
2023-10-13 15:06:55,856:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:55,856:INFO:Initializing load_model()
2023-10-13 15:06:55,856:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:55,858:INFO:Initializing load_model()
2023-10-13 15:06:55,858:INFO:Initializing load_model()
2023-10-13 15:06:55,858:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:55,858:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:55,863:INFO:Initializing load_model()
2023-10-13 15:06:55,865:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,022:INFO:Initializing load_model()
2023-10-13 15:06:58,022:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,025:INFO:Initializing load_model()
2023-10-13 15:06:58,025:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,027:INFO:Initializing load_model()
2023-10-13 15:06:58,027:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,028:INFO:Initializing load_model()
2023-10-13 15:06:58,028:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,039:INFO:Initializing load_model()
2023-10-13 15:06:58,039:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,120:INFO:Initializing load_model()
2023-10-13 15:06:58,120:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,121:INFO:Initializing load_model()
2023-10-13 15:06:58,121:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,123:INFO:Initializing load_model()
2023-10-13 15:06:58,123:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,124:INFO:Initializing load_model()
2023-10-13 15:06:58,124:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:06:58,125:INFO:Initializing load_model()
2023-10-13 15:06:58,125:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:06,268:INFO:Initializing load_model()
2023-10-13 15:08:06,268:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:06,271:INFO:Initializing load_model()
2023-10-13 15:08:06,271:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:06,277:INFO:Initializing load_model()
2023-10-13 15:08:06,277:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:06,279:INFO:Initializing load_model()
2023-10-13 15:08:06,279:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:06,281:INFO:Initializing load_model()
2023-10-13 15:08:06,281:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:08,345:INFO:Initializing load_model()
2023-10-13 15:08:08,345:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:08,346:INFO:Initializing load_model()
2023-10-13 15:08:08,346:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:08,348:INFO:Initializing load_model()
2023-10-13 15:08:08,348:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:08,349:INFO:Initializing load_model()
2023-10-13 15:08:08,349:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:08,351:INFO:Initializing load_model()
2023-10-13 15:08:08,351:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,007:INFO:Initializing load_model()
2023-10-13 15:08:10,007:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,008:INFO:Initializing load_model()
2023-10-13 15:08:10,008:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,010:INFO:Initializing load_model()
2023-10-13 15:08:10,010:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,011:INFO:Initializing load_model()
2023-10-13 15:08:10,011:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,013:INFO:Initializing load_model()
2023-10-13 15:08:10,013:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,107:INFO:Initializing load_model()
2023-10-13 15:08:10,107:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,108:INFO:Initializing load_model()
2023-10-13 15:08:10,108:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,110:INFO:Initializing load_model()
2023-10-13 15:08:10,110:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,111:INFO:Initializing load_model()
2023-10-13 15:08:10,111:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:08:10,112:INFO:Initializing load_model()
2023-10-13 15:08:10,112:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:32,592:INFO:Initializing load_model()
2023-10-13 15:11:32,594:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:32,615:INFO:Initializing load_model()
2023-10-13 15:11:32,615:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:32,629:INFO:Initializing load_model()
2023-10-13 15:11:32,629:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:32,631:INFO:Initializing load_model()
2023-10-13 15:11:32,631:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:32,635:INFO:Initializing load_model()
2023-10-13 15:11:32,635:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:35,935:INFO:Initializing load_model()
2023-10-13 15:11:35,935:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:35,938:INFO:Initializing load_model()
2023-10-13 15:11:35,938:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:35,940:INFO:Initializing load_model()
2023-10-13 15:11:35,940:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:35,948:INFO:Initializing load_model()
2023-10-13 15:11:35,948:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:35,950:INFO:Initializing load_model()
2023-10-13 15:11:35,950:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:36,084:INFO:Initializing load_model()
2023-10-13 15:11:36,084:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:36,085:INFO:Initializing load_model()
2023-10-13 15:11:36,085:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:36,086:INFO:Initializing load_model()
2023-10-13 15:11:36,086:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:36,088:INFO:Initializing load_model()
2023-10-13 15:11:36,088:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:36,089:INFO:Initializing load_model()
2023-10-13 15:11:36,089:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,693:INFO:Initializing load_model()
2023-10-13 15:11:37,694:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,695:INFO:Initializing load_model()
2023-10-13 15:11:37,695:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,696:INFO:Initializing load_model()
2023-10-13 15:11:37,696:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,710:INFO:Initializing load_model()
2023-10-13 15:11:37,710:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,711:INFO:Initializing load_model()
2023-10-13 15:11:37,711:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,716:INFO:Initializing load_model()
2023-10-13 15:11:37,716:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,717:INFO:Initializing load_model()
2023-10-13 15:11:37,717:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,717:INFO:Initializing load_model()
2023-10-13 15:11:37,718:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,723:INFO:Initializing load_model()
2023-10-13 15:11:37,725:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:37,731:INFO:Initializing load_model()
2023-10-13 15:11:37,731:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:40,481:INFO:Initializing load_model()
2023-10-13 15:11:40,481:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:40,485:INFO:Initializing load_model()
2023-10-13 15:11:40,485:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:40,487:INFO:Initializing load_model()
2023-10-13 15:11:40,487:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:40,489:INFO:Initializing load_model()
2023-10-13 15:11:40,489:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:11:40,495:INFO:Initializing load_model()
2023-10-13 15:11:40,495:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:40,296:INFO:Initializing load_model()
2023-10-13 15:12:40,300:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:40,310:INFO:Initializing load_model()
2023-10-13 15:12:40,310:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:40,324:INFO:Initializing load_model()
2023-10-13 15:12:40,324:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:40,330:INFO:Initializing load_model()
2023-10-13 15:12:40,330:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:40,338:INFO:Initializing load_model()
2023-10-13 15:12:40,338:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,180:INFO:Initializing load_model()
2023-10-13 15:12:44,181:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,183:INFO:Initializing load_model()
2023-10-13 15:12:44,183:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,186:INFO:Initializing load_model()
2023-10-13 15:12:44,186:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,188:INFO:Initializing load_model()
2023-10-13 15:12:44,188:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,191:INFO:Initializing load_model()
2023-10-13 15:12:44,191:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,317:INFO:Initializing load_model()
2023-10-13 15:12:44,317:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,318:INFO:Initializing load_model()
2023-10-13 15:12:44,318:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,320:INFO:Initializing load_model()
2023-10-13 15:12:44,320:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,321:INFO:Initializing load_model()
2023-10-13 15:12:44,321:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:12:44,322:INFO:Initializing load_model()
2023-10-13 15:12:44,322:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,698:INFO:Initializing load_model()
2023-10-13 15:13:05,699:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,705:INFO:Initializing load_model()
2023-10-13 15:13:05,705:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,706:INFO:Initializing load_model()
2023-10-13 15:13:05,706:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,711:INFO:Initializing load_model()
2023-10-13 15:13:05,711:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,716:INFO:Initializing load_model()
2023-10-13 15:13:05,716:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,716:INFO:Initializing load_model()
2023-10-13 15:13:05,716:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,720:INFO:Initializing load_model()
2023-10-13 15:13:05,720:INFO:Initializing load_model()
2023-10-13 15:13:05,720:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,720:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,724:INFO:Initializing load_model()
2023-10-13 15:13:05,724:INFO:Initializing load_model()
2023-10-13 15:13:05,724:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:05,724:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:40,865:INFO:Initializing load_model()
2023-10-13 15:13:40,865:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:40,868:INFO:Initializing load_model()
2023-10-13 15:13:40,868:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:40,871:INFO:Initializing load_model()
2023-10-13 15:13:40,871:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:40,873:INFO:Initializing load_model()
2023-10-13 15:13:40,873:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:40,875:INFO:Initializing load_model()
2023-10-13 15:13:40,875:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:44,729:INFO:Initializing load_model()
2023-10-13 15:13:44,730:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:44,736:INFO:Initializing load_model()
2023-10-13 15:13:44,737:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:44,740:INFO:Initializing load_model()
2023-10-13 15:13:44,740:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:44,746:INFO:Initializing load_model()
2023-10-13 15:13:44,746:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:44,750:INFO:Initializing load_model()
2023-10-13 15:13:44,750:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:45,006:INFO:Initializing load_model()
2023-10-13 15:13:45,006:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:45,007:INFO:Initializing load_model()
2023-10-13 15:13:45,007:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:45,009:INFO:Initializing load_model()
2023-10-13 15:13:45,009:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:45,011:INFO:Initializing load_model()
2023-10-13 15:13:45,011:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:45,013:INFO:Initializing load_model()
2023-10-13 15:13:45,013:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:46,036:INFO:Initializing load_model()
2023-10-13 15:13:46,036:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:46,039:INFO:Initializing load_model()
2023-10-13 15:13:46,039:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:46,042:INFO:Initializing load_model()
2023-10-13 15:13:46,042:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:46,043:INFO:Initializing load_model()
2023-10-13 15:13:46,044:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:46,045:INFO:Initializing load_model()
2023-10-13 15:13:46,045:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,286:INFO:Initializing load_model()
2023-10-13 15:13:47,290:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,292:INFO:Initializing load_model()
2023-10-13 15:13:47,292:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,294:INFO:Initializing load_model()
2023-10-13 15:13:47,294:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,295:INFO:Initializing load_model()
2023-10-13 15:13:47,295:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,297:INFO:Initializing load_model()
2023-10-13 15:13:47,297:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,388:INFO:Initializing load_model()
2023-10-13 15:13:47,388:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,389:INFO:Initializing load_model()
2023-10-13 15:13:47,389:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,390:INFO:Initializing load_model()
2023-10-13 15:13:47,390:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,391:INFO:Initializing load_model()
2023-10-13 15:13:47,391:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:13:47,392:INFO:Initializing load_model()
2023-10-13 15:13:47,392:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:14:32,097:INFO:Initializing load_model()
2023-10-13 15:14:32,097:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:14:32,100:INFO:Initializing load_model()
2023-10-13 15:14:32,100:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:14:32,102:INFO:Initializing load_model()
2023-10-13 15:14:32,102:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:14:32,104:INFO:Initializing load_model()
2023-10-13 15:14:32,104:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:14:32,106:INFO:Initializing load_model()
2023-10-13 15:14:32,106:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:55:31,457:INFO:Initializing load_model()
2023-10-13 15:55:31,459:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:55:31,479:INFO:Initializing load_model()
2023-10-13 15:55:31,479:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:55:31,488:INFO:Initializing load_model()
2023-10-13 15:55:31,488:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:55:31,490:INFO:Initializing load_model()
2023-10-13 15:55:31,490:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:55:31,493:INFO:Initializing load_model()
2023-10-13 15:55:31,493:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:57:54,157:INFO:Initializing load_model()
2023-10-13 15:57:54,158:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:57:54,176:INFO:Initializing load_model()
2023-10-13 15:57:54,176:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:57:54,187:INFO:Initializing load_model()
2023-10-13 15:57:54,187:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:57:54,189:INFO:Initializing load_model()
2023-10-13 15:57:54,189:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 15:57:54,192:INFO:Initializing load_model()
2023-10-13 15:57:54,192:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:00:51,470:INFO:Initializing load_model()
2023-10-13 16:00:51,471:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:00:51,490:INFO:Initializing load_model()
2023-10-13 16:00:51,490:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:00:51,500:INFO:Initializing load_model()
2023-10-13 16:00:51,500:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:00:51,504:INFO:Initializing load_model()
2023-10-13 16:00:51,504:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:00:51,506:INFO:Initializing load_model()
2023-10-13 16:00:51,506:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:05:41,458:INFO:Initializing load_model()
2023-10-13 16:05:41,458:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:05:41,475:INFO:Initializing load_model()
2023-10-13 16:05:41,475:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:05:41,484:INFO:Initializing load_model()
2023-10-13 16:05:41,485:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:05:41,487:INFO:Initializing load_model()
2023-10-13 16:05:41,487:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-13 16:05:41,489:INFO:Initializing load_model()
2023-10-13 16:05:41,489:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:18:48,418:INFO:Initializing load_model()
2023-10-15 02:18:48,419:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:18:48,448:INFO:Initializing load_model()
2023-10-15 02:18:48,448:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:18:48,463:INFO:Initializing load_model()
2023-10-15 02:18:48,464:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:18:48,466:INFO:Initializing load_model()
2023-10-15 02:18:48,466:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:18:48,469:INFO:Initializing load_model()
2023-10-15 02:18:48,469:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:11,718:INFO:Initializing load_model()
2023-10-15 02:19:11,719:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:11,725:INFO:Initializing load_model()
2023-10-15 02:19:11,725:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:11,729:INFO:Initializing load_model()
2023-10-15 02:19:11,729:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:11,731:INFO:Initializing load_model()
2023-10-15 02:19:11,731:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:11,733:INFO:Initializing load_model()
2023-10-15 02:19:11,733:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:12,824:INFO:Initializing load_model()
2023-10-15 02:19:12,824:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:12,828:INFO:Initializing load_model()
2023-10-15 02:19:12,828:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:12,830:INFO:Initializing load_model()
2023-10-15 02:19:12,830:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:12,832:INFO:Initializing load_model()
2023-10-15 02:19:12,832:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:12,833:INFO:Initializing load_model()
2023-10-15 02:19:12,833:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:15,109:INFO:Initializing load_model()
2023-10-15 02:19:15,109:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:15,110:INFO:Initializing load_model()
2023-10-15 02:19:15,110:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:15,113:INFO:Initializing load_model()
2023-10-15 02:19:15,113:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:15,117:INFO:Initializing load_model()
2023-10-15 02:19:15,117:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:15,118:INFO:Initializing load_model()
2023-10-15 02:19:15,118:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,490:INFO:Initializing load_model()
2023-10-15 02:19:16,491:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,492:INFO:Initializing load_model()
2023-10-15 02:19:16,492:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,503:INFO:Initializing load_model()
2023-10-15 02:19:16,503:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,506:INFO:Initializing load_model()
2023-10-15 02:19:16,506:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,508:INFO:Initializing load_model()
2023-10-15 02:19:16,508:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,622:INFO:Initializing load_model()
2023-10-15 02:19:16,623:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,624:INFO:Initializing load_model()
2023-10-15 02:19:16,624:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,626:INFO:Initializing load_model()
2023-10-15 02:19:16,626:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,628:INFO:Initializing load_model()
2023-10-15 02:19:16,628:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:16,629:INFO:Initializing load_model()
2023-10-15 02:19:16,629:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:28,308:INFO:Initializing load_model()
2023-10-15 02:19:28,309:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:28,313:INFO:Initializing load_model()
2023-10-15 02:19:28,313:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:28,319:INFO:Initializing load_model()
2023-10-15 02:19:28,319:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:28,322:INFO:Initializing load_model()
2023-10-15 02:19:28,322:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:28,324:INFO:Initializing load_model()
2023-10-15 02:19:28,324:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:28,373:INFO:Initializing predict_model()
2023-10-15 02:19:28,373:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29831b820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2992d2bf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:19:28,373:INFO:Checking exceptions
2023-10-15 02:19:28,373:INFO:Preloading libraries
2023-10-15 02:19:28,373:INFO:Set up data.
2023-10-15 02:19:28,382:INFO:Set up index.
2023-10-15 02:19:28,537:INFO:Initializing predict_model()
2023-10-15 02:19:28,538:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299257100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256971c0>)
2023-10-15 02:19:28,538:INFO:Checking exceptions
2023-10-15 02:19:28,538:INFO:Preloading libraries
2023-10-15 02:19:28,538:INFO:Set up data.
2023-10-15 02:19:28,542:INFO:Set up index.
2023-10-15 02:19:28,627:INFO:Initializing predict_model()
2023-10-15 02:19:28,627:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b3c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256971c0>)
2023-10-15 02:19:28,627:INFO:Checking exceptions
2023-10-15 02:19:28,627:INFO:Preloading libraries
2023-10-15 02:19:28,627:INFO:Set up data.
2023-10-15 02:19:28,631:INFO:Set up index.
2023-10-15 02:19:28,706:INFO:Initializing predict_model()
2023-10-15 02:19:28,706:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b3c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256971c0>)
2023-10-15 02:19:28,706:INFO:Checking exceptions
2023-10-15 02:19:28,706:INFO:Preloading libraries
2023-10-15 02:19:28,706:INFO:Set up data.
2023-10-15 02:19:28,710:INFO:Set up index.
2023-10-15 02:19:28,790:INFO:Initializing predict_model()
2023-10-15 02:19:28,791:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b3c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298338880>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256971c0>)
2023-10-15 02:19:28,791:INFO:Checking exceptions
2023-10-15 02:19:28,791:INFO:Preloading libraries
2023-10-15 02:19:28,791:INFO:Set up data.
2023-10-15 02:19:28,795:INFO:Set up index.
2023-10-15 02:19:37,509:INFO:Initializing load_model()
2023-10-15 02:19:37,509:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:37,512:INFO:Initializing load_model()
2023-10-15 02:19:37,513:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:37,515:INFO:Initializing load_model()
2023-10-15 02:19:37,515:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:37,517:INFO:Initializing load_model()
2023-10-15 02:19:37,517:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:37,518:INFO:Initializing load_model()
2023-10-15 02:19:37,518:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:19:37,527:INFO:Initializing predict_model()
2023-10-15 02:19:37,527:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930e320>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:37,527:INFO:Checking exceptions
2023-10-15 02:19:37,527:INFO:Preloading libraries
2023-10-15 02:19:37,528:INFO:Set up data.
2023-10-15 02:19:37,536:INFO:Set up index.
2023-10-15 02:19:37,682:INFO:Initializing predict_model()
2023-10-15 02:19:37,682:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b0b5e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:37,682:INFO:Checking exceptions
2023-10-15 02:19:37,682:INFO:Preloading libraries
2023-10-15 02:19:37,683:INFO:Set up data.
2023-10-15 02:19:37,688:INFO:Set up index.
2023-10-15 02:19:37,761:INFO:Initializing predict_model()
2023-10-15 02:19:37,762:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b0b5e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:37,762:INFO:Checking exceptions
2023-10-15 02:19:37,762:INFO:Preloading libraries
2023-10-15 02:19:37,762:INFO:Set up data.
2023-10-15 02:19:37,768:INFO:Set up index.
2023-10-15 02:19:37,842:INFO:Initializing predict_model()
2023-10-15 02:19:37,842:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b0b5e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:37,842:INFO:Checking exceptions
2023-10-15 02:19:37,842:INFO:Preloading libraries
2023-10-15 02:19:37,842:INFO:Set up data.
2023-10-15 02:19:37,850:INFO:Set up index.
2023-10-15 02:19:37,931:INFO:Initializing predict_model()
2023-10-15 02:19:37,931:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b0b5e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:37,931:INFO:Checking exceptions
2023-10-15 02:19:37,931:INFO:Preloading libraries
2023-10-15 02:19:37,931:INFO:Set up data.
2023-10-15 02:19:37,937:INFO:Set up index.
2023-10-15 02:19:46,435:INFO:Initializing predict_model()
2023-10-15 02:19:46,437:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298355cc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 02:19:46,437:INFO:Checking exceptions
2023-10-15 02:19:46,437:INFO:Preloading libraries
2023-10-15 02:19:46,439:INFO:Set up data.
2023-10-15 02:19:46,464:INFO:Set up index.
2023-10-15 02:19:46,622:INFO:Initializing predict_model()
2023-10-15 02:19:46,622:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x124d33be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 02:19:46,622:INFO:Checking exceptions
2023-10-15 02:19:46,622:INFO:Preloading libraries
2023-10-15 02:19:46,622:INFO:Set up data.
2023-10-15 02:19:46,628:INFO:Set up index.
2023-10-15 02:19:46,699:INFO:Initializing predict_model()
2023-10-15 02:19:46,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x124d33be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 02:19:46,699:INFO:Checking exceptions
2023-10-15 02:19:46,699:INFO:Preloading libraries
2023-10-15 02:19:46,700:INFO:Set up data.
2023-10-15 02:19:46,705:INFO:Set up index.
2023-10-15 02:19:46,782:INFO:Initializing predict_model()
2023-10-15 02:19:46,782:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x124d33be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 02:19:46,782:INFO:Checking exceptions
2023-10-15 02:19:46,782:INFO:Preloading libraries
2023-10-15 02:19:46,782:INFO:Set up data.
2023-10-15 02:19:46,788:INFO:Set up index.
2023-10-15 02:19:46,864:INFO:Initializing predict_model()
2023-10-15 02:19:46,864:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x124d33be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 02:19:46,864:INFO:Checking exceptions
2023-10-15 02:19:46,864:INFO:Preloading libraries
2023-10-15 02:19:46,864:INFO:Set up data.
2023-10-15 02:19:46,870:INFO:Set up index.
2023-10-15 02:19:55,378:INFO:Initializing predict_model()
2023-10-15 02:19:55,380:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294839690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:55,380:INFO:Checking exceptions
2023-10-15 02:19:55,380:INFO:Preloading libraries
2023-10-15 02:19:55,381:INFO:Set up data.
2023-10-15 02:19:55,406:INFO:Set up index.
2023-10-15 02:19:55,570:INFO:Initializing predict_model()
2023-10-15 02:19:55,570:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:55,570:INFO:Checking exceptions
2023-10-15 02:19:55,570:INFO:Preloading libraries
2023-10-15 02:19:55,570:INFO:Set up data.
2023-10-15 02:19:55,576:INFO:Set up index.
2023-10-15 02:19:55,647:INFO:Initializing predict_model()
2023-10-15 02:19:55,647:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:55,647:INFO:Checking exceptions
2023-10-15 02:19:55,647:INFO:Preloading libraries
2023-10-15 02:19:55,647:INFO:Set up data.
2023-10-15 02:19:55,653:INFO:Set up index.
2023-10-15 02:19:55,723:INFO:Initializing predict_model()
2023-10-15 02:19:55,723:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:55,723:INFO:Checking exceptions
2023-10-15 02:19:55,723:INFO:Preloading libraries
2023-10-15 02:19:55,724:INFO:Set up data.
2023-10-15 02:19:55,729:INFO:Set up index.
2023-10-15 02:19:55,800:INFO:Initializing predict_model()
2023-10-15 02:19:55,800:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 02:19:55,800:INFO:Checking exceptions
2023-10-15 02:19:55,800:INFO:Preloading libraries
2023-10-15 02:19:55,801:INFO:Set up data.
2023-10-15 02:19:55,807:INFO:Set up index.
2023-10-15 02:20:04,296:INFO:Initializing predict_model()
2023-10-15 02:20:04,297:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983551b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabc70>)
2023-10-15 02:20:04,297:INFO:Checking exceptions
2023-10-15 02:20:04,297:INFO:Preloading libraries
2023-10-15 02:20:04,299:INFO:Set up data.
2023-10-15 02:20:04,324:INFO:Set up index.
2023-10-15 02:20:04,487:INFO:Initializing predict_model()
2023-10-15 02:20:04,488:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabc70>)
2023-10-15 02:20:04,488:INFO:Checking exceptions
2023-10-15 02:20:04,488:INFO:Preloading libraries
2023-10-15 02:20:04,488:INFO:Set up data.
2023-10-15 02:20:04,494:INFO:Set up index.
2023-10-15 02:20:04,565:INFO:Initializing predict_model()
2023-10-15 02:20:04,565:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-15 02:20:04,565:INFO:Checking exceptions
2023-10-15 02:20:04,565:INFO:Preloading libraries
2023-10-15 02:20:04,565:INFO:Set up data.
2023-10-15 02:20:04,571:INFO:Set up index.
2023-10-15 02:20:04,642:INFO:Initializing predict_model()
2023-10-15 02:20:04,642:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-15 02:20:04,642:INFO:Checking exceptions
2023-10-15 02:20:04,642:INFO:Preloading libraries
2023-10-15 02:20:04,642:INFO:Set up data.
2023-10-15 02:20:04,648:INFO:Set up index.
2023-10-15 02:20:04,719:INFO:Initializing predict_model()
2023-10-15 02:20:04,719:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-15 02:20:04,719:INFO:Checking exceptions
2023-10-15 02:20:04,719:INFO:Preloading libraries
2023-10-15 02:20:04,719:INFO:Set up data.
2023-10-15 02:20:04,725:INFO:Set up index.
2023-10-15 02:20:13,208:INFO:Initializing predict_model()
2023-10-15 02:20:13,210:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298339ae0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:20:13,210:INFO:Checking exceptions
2023-10-15 02:20:13,210:INFO:Preloading libraries
2023-10-15 02:20:13,212:INFO:Set up data.
2023-10-15 02:20:13,249:INFO:Set up index.
2023-10-15 02:20:13,419:INFO:Initializing predict_model()
2023-10-15 02:20:13,419:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:20:13,419:INFO:Checking exceptions
2023-10-15 02:20:13,419:INFO:Preloading libraries
2023-10-15 02:20:13,419:INFO:Set up data.
2023-10-15 02:20:13,425:INFO:Set up index.
2023-10-15 02:20:13,498:INFO:Initializing predict_model()
2023-10-15 02:20:13,498:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-15 02:20:13,498:INFO:Checking exceptions
2023-10-15 02:20:13,498:INFO:Preloading libraries
2023-10-15 02:20:13,498:INFO:Set up data.
2023-10-15 02:20:13,504:INFO:Set up index.
2023-10-15 02:20:13,577:INFO:Initializing predict_model()
2023-10-15 02:20:13,577:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-15 02:20:13,577:INFO:Checking exceptions
2023-10-15 02:20:13,577:INFO:Preloading libraries
2023-10-15 02:20:13,577:INFO:Set up data.
2023-10-15 02:20:13,583:INFO:Set up index.
2023-10-15 02:20:13,657:INFO:Initializing predict_model()
2023-10-15 02:20:13,657:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125befa90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-15 02:20:13,657:INFO:Checking exceptions
2023-10-15 02:20:13,657:INFO:Preloading libraries
2023-10-15 02:20:13,657:INFO:Set up data.
2023-10-15 02:20:13,663:INFO:Set up index.
2023-10-15 02:20:22,158:INFO:Initializing predict_model()
2023-10-15 02:20:22,160:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29483bee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-15 02:20:22,160:INFO:Checking exceptions
2023-10-15 02:20:22,160:INFO:Preloading libraries
2023-10-15 02:20:22,162:INFO:Set up data.
2023-10-15 02:20:22,190:INFO:Set up index.
2023-10-15 02:20:22,349:INFO:Initializing predict_model()
2023-10-15 02:20:22,349:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29483a3b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-15 02:20:22,349:INFO:Checking exceptions
2023-10-15 02:20:22,349:INFO:Preloading libraries
2023-10-15 02:20:22,349:INFO:Set up data.
2023-10-15 02:20:22,355:INFO:Set up index.
2023-10-15 02:20:22,427:INFO:Initializing predict_model()
2023-10-15 02:20:22,427:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299317280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-15 02:20:22,427:INFO:Checking exceptions
2023-10-15 02:20:22,427:INFO:Preloading libraries
2023-10-15 02:20:22,427:INFO:Set up data.
2023-10-15 02:20:22,433:INFO:Set up index.
2023-10-15 02:20:22,508:INFO:Initializing predict_model()
2023-10-15 02:20:22,509:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298339090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-15 02:20:22,509:INFO:Checking exceptions
2023-10-15 02:20:22,509:INFO:Preloading libraries
2023-10-15 02:20:22,509:INFO:Set up data.
2023-10-15 02:20:22,515:INFO:Set up index.
2023-10-15 02:20:22,585:INFO:Initializing predict_model()
2023-10-15 02:20:22,585:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c2b00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170706e60>)
2023-10-15 02:20:22,585:INFO:Checking exceptions
2023-10-15 02:20:22,585:INFO:Preloading libraries
2023-10-15 02:20:22,586:INFO:Set up data.
2023-10-15 02:20:22,592:INFO:Set up index.
2023-10-15 02:20:31,101:INFO:Initializing predict_model()
2023-10-15 02:20:31,103:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29833b880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab1c0>)
2023-10-15 02:20:31,103:INFO:Checking exceptions
2023-10-15 02:20:31,103:INFO:Preloading libraries
2023-10-15 02:20:31,105:INFO:Set up data.
2023-10-15 02:20:31,153:INFO:Set up index.
2023-10-15 02:20:31,313:INFO:Initializing predict_model()
2023-10-15 02:20:31,313:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c84310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-15 02:20:31,313:INFO:Checking exceptions
2023-10-15 02:20:31,313:INFO:Preloading libraries
2023-10-15 02:20:31,314:INFO:Set up data.
2023-10-15 02:20:31,320:INFO:Set up index.
2023-10-15 02:20:31,396:INFO:Initializing predict_model()
2023-10-15 02:20:31,396:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c3670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-15 02:20:31,396:INFO:Checking exceptions
2023-10-15 02:20:31,396:INFO:Preloading libraries
2023-10-15 02:20:31,396:INFO:Set up data.
2023-10-15 02:20:31,402:INFO:Set up index.
2023-10-15 02:20:31,474:INFO:Initializing predict_model()
2023-10-15 02:20:31,474:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c0340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-15 02:20:31,474:INFO:Checking exceptions
2023-10-15 02:20:31,474:INFO:Preloading libraries
2023-10-15 02:20:31,474:INFO:Set up data.
2023-10-15 02:20:31,480:INFO:Set up index.
2023-10-15 02:20:31,552:INFO:Initializing predict_model()
2023-10-15 02:20:31,552:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c02e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f827b50>)
2023-10-15 02:20:31,552:INFO:Checking exceptions
2023-10-15 02:20:31,552:INFO:Preloading libraries
2023-10-15 02:20:31,552:INFO:Set up data.
2023-10-15 02:20:31,558:INFO:Set up index.
2023-10-15 02:20:40,111:INFO:Initializing predict_model()
2023-10-15 02:20:40,113:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29833b7f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:20:40,113:INFO:Checking exceptions
2023-10-15 02:20:40,113:INFO:Preloading libraries
2023-10-15 02:20:40,115:INFO:Set up data.
2023-10-15 02:20:40,141:INFO:Set up index.
2023-10-15 02:20:40,295:INFO:Initializing predict_model()
2023-10-15 02:20:40,295:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2948399f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:20:40,295:INFO:Checking exceptions
2023-10-15 02:20:40,295:INFO:Preloading libraries
2023-10-15 02:20:40,295:INFO:Set up data.
2023-10-15 02:20:40,302:INFO:Set up index.
2023-10-15 02:20:40,384:INFO:Initializing predict_model()
2023-10-15 02:20:40,384:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c857b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:20:40,385:INFO:Checking exceptions
2023-10-15 02:20:40,385:INFO:Preloading libraries
2023-10-15 02:20:40,385:INFO:Set up data.
2023-10-15 02:20:40,391:INFO:Set up index.
2023-10-15 02:20:40,467:INFO:Initializing predict_model()
2023-10-15 02:20:40,467:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983330a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:20:40,467:INFO:Checking exceptions
2023-10-15 02:20:40,467:INFO:Preloading libraries
2023-10-15 02:20:40,467:INFO:Set up data.
2023-10-15 02:20:40,473:INFO:Set up index.
2023-10-15 02:20:40,546:INFO:Initializing predict_model()
2023-10-15 02:20:40,546:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930ce20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:20:40,546:INFO:Checking exceptions
2023-10-15 02:20:40,546:INFO:Preloading libraries
2023-10-15 02:20:40,546:INFO:Set up data.
2023-10-15 02:20:40,552:INFO:Set up index.
2023-10-15 02:20:49,045:INFO:Initializing predict_model()
2023-10-15 02:20:49,046:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983321a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-15 02:20:49,046:INFO:Checking exceptions
2023-10-15 02:20:49,046:INFO:Preloading libraries
2023-10-15 02:20:49,048:INFO:Set up data.
2023-10-15 02:20:49,079:INFO:Set up index.
2023-10-15 02:20:49,238:INFO:Initializing predict_model()
2023-10-15 02:20:49,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29833b760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-15 02:20:49,239:INFO:Checking exceptions
2023-10-15 02:20:49,239:INFO:Preloading libraries
2023-10-15 02:20:49,239:INFO:Set up data.
2023-10-15 02:20:49,245:INFO:Set up index.
2023-10-15 02:20:49,318:INFO:Initializing predict_model()
2023-10-15 02:20:49,318:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299317d60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-15 02:20:49,318:INFO:Checking exceptions
2023-10-15 02:20:49,319:INFO:Preloading libraries
2023-10-15 02:20:49,319:INFO:Set up data.
2023-10-15 02:20:49,325:INFO:Set up index.
2023-10-15 02:20:49,397:INFO:Initializing predict_model()
2023-10-15 02:20:49,397:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c84550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-15 02:20:49,397:INFO:Checking exceptions
2023-10-15 02:20:49,397:INFO:Preloading libraries
2023-10-15 02:20:49,397:INFO:Set up data.
2023-10-15 02:20:49,403:INFO:Set up index.
2023-10-15 02:20:49,475:INFO:Initializing predict_model()
2023-10-15 02:20:49,475:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabbe0>)
2023-10-15 02:20:49,475:INFO:Checking exceptions
2023-10-15 02:20:49,475:INFO:Preloading libraries
2023-10-15 02:20:49,476:INFO:Set up data.
2023-10-15 02:20:49,482:INFO:Set up index.
2023-10-15 02:20:58,016:INFO:Initializing predict_model()
2023-10-15 02:20:58,018:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c87e80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298357bb0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab2e0>)
2023-10-15 02:20:58,018:INFO:Checking exceptions
2023-10-15 02:20:58,018:INFO:Preloading libraries
2023-10-15 02:20:58,020:INFO:Set up data.
2023-10-15 02:20:58,053:INFO:Set up index.
2023-10-15 02:20:58,188:INFO:Initializing predict_model()
2023-10-15 02:20:58,188:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b09f90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab2e0>)
2023-10-15 02:20:58,188:INFO:Checking exceptions
2023-10-15 02:20:58,188:INFO:Preloading libraries
2023-10-15 02:20:58,188:INFO:Set up data.
2023-10-15 02:20:58,194:INFO:Set up index.
2023-10-15 02:20:58,268:INFO:Initializing predict_model()
2023-10-15 02:20:58,268:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b09f90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab2e0>)
2023-10-15 02:20:58,268:INFO:Checking exceptions
2023-10-15 02:20:58,268:INFO:Preloading libraries
2023-10-15 02:20:58,268:INFO:Set up data.
2023-10-15 02:20:58,274:INFO:Set up index.
2023-10-15 02:20:58,348:INFO:Initializing predict_model()
2023-10-15 02:20:58,348:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b09f90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-15 02:20:58,348:INFO:Checking exceptions
2023-10-15 02:20:58,348:INFO:Preloading libraries
2023-10-15 02:20:58,348:INFO:Set up data.
2023-10-15 02:20:58,354:INFO:Set up index.
2023-10-15 02:20:58,425:INFO:Initializing predict_model()
2023-10-15 02:20:58,425:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284b09f90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298356ce0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x281121990>)
2023-10-15 02:20:58,425:INFO:Checking exceptions
2023-10-15 02:20:58,425:INFO:Preloading libraries
2023-10-15 02:20:58,425:INFO:Set up data.
2023-10-15 02:20:58,431:INFO:Set up index.
2023-10-15 02:21:06,287:INFO:Initializing load_model()
2023-10-15 02:21:06,287:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:06,295:INFO:Initializing load_model()
2023-10-15 02:21:06,295:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:06,298:INFO:Initializing load_model()
2023-10-15 02:21:06,298:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:06,301:INFO:Initializing load_model()
2023-10-15 02:21:06,301:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:06,303:INFO:Initializing load_model()
2023-10-15 02:21:06,303:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:06,315:INFO:Initializing predict_model()
2023-10-15 02:21:06,315:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298399bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298d5f700>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:21:06,315:INFO:Checking exceptions
2023-10-15 02:21:06,315:INFO:Preloading libraries
2023-10-15 02:21:06,316:INFO:Set up data.
2023-10-15 02:21:06,322:INFO:Set up index.
2023-10-15 02:21:06,413:INFO:Initializing predict_model()
2023-10-15 02:21:06,413:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294839b40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:21:06,413:INFO:Checking exceptions
2023-10-15 02:21:06,413:INFO:Preloading libraries
2023-10-15 02:21:06,413:INFO:Set up data.
2023-10-15 02:21:06,419:INFO:Set up index.
2023-10-15 02:21:06,493:INFO:Initializing predict_model()
2023-10-15 02:21:06,493:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294839b40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:21:06,493:INFO:Checking exceptions
2023-10-15 02:21:06,493:INFO:Preloading libraries
2023-10-15 02:21:06,493:INFO:Set up data.
2023-10-15 02:21:06,499:INFO:Set up index.
2023-10-15 02:21:06,574:INFO:Initializing predict_model()
2023-10-15 02:21:06,574:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294839b40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:21:06,574:INFO:Checking exceptions
2023-10-15 02:21:06,574:INFO:Preloading libraries
2023-10-15 02:21:06,574:INFO:Set up data.
2023-10-15 02:21:06,581:INFO:Set up index.
2023-10-15 02:21:06,655:INFO:Initializing predict_model()
2023-10-15 02:21:06,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x294839b40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298d5ee60>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab7f0>)
2023-10-15 02:21:06,655:INFO:Checking exceptions
2023-10-15 02:21:06,655:INFO:Preloading libraries
2023-10-15 02:21:06,655:INFO:Set up data.
2023-10-15 02:21:06,661:INFO:Set up index.
2023-10-15 02:21:15,278:INFO:Initializing load_model()
2023-10-15 02:21:15,279:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:15,282:INFO:Initializing load_model()
2023-10-15 02:21:15,282:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:15,284:INFO:Initializing load_model()
2023-10-15 02:21:15,284:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:15,286:INFO:Initializing load_model()
2023-10-15 02:21:15,286:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:15,288:INFO:Initializing load_model()
2023-10-15 02:21:15,288:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 02:21:15,297:INFO:Initializing predict_model()
2023-10-15 02:21:15,297:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983f7dc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fd7e0>)
2023-10-15 02:21:15,297:INFO:Checking exceptions
2023-10-15 02:21:15,297:INFO:Preloading libraries
2023-10-15 02:21:15,297:INFO:Set up data.
2023-10-15 02:21:15,304:INFO:Set up index.
2023-10-15 02:21:15,441:INFO:Initializing predict_model()
2023-10-15 02:21:15,441:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983986a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-15 02:21:15,441:INFO:Checking exceptions
2023-10-15 02:21:15,441:INFO:Preloading libraries
2023-10-15 02:21:15,441:INFO:Set up data.
2023-10-15 02:21:15,448:INFO:Set up index.
2023-10-15 02:21:15,532:INFO:Initializing predict_model()
2023-10-15 02:21:15,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c0ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-15 02:21:15,532:INFO:Checking exceptions
2023-10-15 02:21:15,532:INFO:Preloading libraries
2023-10-15 02:21:15,532:INFO:Set up data.
2023-10-15 02:21:15,538:INFO:Set up index.
2023-10-15 02:21:15,615:INFO:Initializing predict_model()
2023-10-15 02:21:15,615:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c0ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-15 02:21:15,615:INFO:Checking exceptions
2023-10-15 02:21:15,615:INFO:Preloading libraries
2023-10-15 02:21:15,615:INFO:Set up data.
2023-10-15 02:21:15,622:INFO:Set up index.
2023-10-15 02:21:15,698:INFO:Initializing predict_model()
2023-10-15 02:21:15,698:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c0ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-15 02:21:15,698:INFO:Checking exceptions
2023-10-15 02:21:15,698:INFO:Preloading libraries
2023-10-15 02:21:15,698:INFO:Set up data.
2023-10-15 02:21:15,704:INFO:Set up index.
2023-10-15 02:21:29,175:INFO:Initializing predict_model()
2023-10-15 02:21:29,177:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983f7d60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe710>)
2023-10-15 02:21:29,177:INFO:Checking exceptions
2023-10-15 02:21:29,178:INFO:Preloading libraries
2023-10-15 02:21:29,179:INFO:Set up data.
2023-10-15 02:21:29,202:INFO:Set up index.
2023-10-15 02:21:29,363:INFO:Initializing predict_model()
2023-10-15 02:21:29,363:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x124c80220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe710>)
2023-10-15 02:21:29,363:INFO:Checking exceptions
2023-10-15 02:21:29,363:INFO:Preloading libraries
2023-10-15 02:21:29,363:INFO:Set up data.
2023-10-15 02:21:29,369:INFO:Set up index.
2023-10-15 02:21:29,446:INFO:Initializing predict_model()
2023-10-15 02:21:29,446:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x124c80220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe710>)
2023-10-15 02:21:29,446:INFO:Checking exceptions
2023-10-15 02:21:29,446:INFO:Preloading libraries
2023-10-15 02:21:29,446:INFO:Set up data.
2023-10-15 02:21:29,452:INFO:Set up index.
2023-10-15 02:21:29,526:INFO:Initializing predict_model()
2023-10-15 02:21:29,526:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x124c80220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296f88310>)
2023-10-15 02:21:29,526:INFO:Checking exceptions
2023-10-15 02:21:29,526:INFO:Preloading libraries
2023-10-15 02:21:29,526:INFO:Set up data.
2023-10-15 02:21:29,532:INFO:Set up index.
2023-10-15 02:21:29,605:INFO:Initializing predict_model()
2023-10-15 02:21:29,605:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x124c80220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296f88310>)
2023-10-15 02:21:29,605:INFO:Checking exceptions
2023-10-15 02:21:29,605:INFO:Preloading libraries
2023-10-15 02:21:29,605:INFO:Set up data.
2023-10-15 02:21:29,611:INFO:Set up index.
2023-10-15 02:21:43,130:INFO:Initializing predict_model()
2023-10-15 02:21:43,132:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992549d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdc60>)
2023-10-15 02:21:43,133:INFO:Checking exceptions
2023-10-15 02:21:43,134:INFO:Preloading libraries
2023-10-15 02:21:43,136:INFO:Set up data.
2023-10-15 02:21:43,160:INFO:Set up index.
2023-10-15 02:21:43,302:INFO:Initializing predict_model()
2023-10-15 02:21:43,302:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930f8b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdc60>)
2023-10-15 02:21:43,302:INFO:Checking exceptions
2023-10-15 02:21:43,303:INFO:Preloading libraries
2023-10-15 02:21:43,303:INFO:Set up data.
2023-10-15 02:21:43,309:INFO:Set up index.
2023-10-15 02:21:43,386:INFO:Initializing predict_model()
2023-10-15 02:21:43,386:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299256c80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdc60>)
2023-10-15 02:21:43,386:INFO:Checking exceptions
2023-10-15 02:21:43,386:INFO:Preloading libraries
2023-10-15 02:21:43,386:INFO:Set up data.
2023-10-15 02:21:43,396:INFO:Set up index.
2023-10-15 02:21:43,469:INFO:Initializing predict_model()
2023-10-15 02:21:43,469:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299256c80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdc60>)
2023-10-15 02:21:43,469:INFO:Checking exceptions
2023-10-15 02:21:43,469:INFO:Preloading libraries
2023-10-15 02:21:43,469:INFO:Set up data.
2023-10-15 02:21:43,475:INFO:Set up index.
2023-10-15 02:21:43,549:INFO:Initializing predict_model()
2023-10-15 02:21:43,549:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c17e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdc60>)
2023-10-15 02:21:43,549:INFO:Checking exceptions
2023-10-15 02:21:43,549:INFO:Preloading libraries
2023-10-15 02:21:43,549:INFO:Set up data.
2023-10-15 02:21:43,555:INFO:Set up index.
2023-10-15 02:21:57,082:INFO:Initializing predict_model()
2023-10-15 02:21:57,084:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d75ab0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe050>)
2023-10-15 02:21:57,084:INFO:Checking exceptions
2023-10-15 02:21:57,084:INFO:Preloading libraries
2023-10-15 02:21:57,086:INFO:Set up data.
2023-10-15 02:21:57,121:INFO:Set up index.
2023-10-15 02:21:57,292:INFO:Initializing predict_model()
2023-10-15 02:21:57,292:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c2b00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe050>)
2023-10-15 02:21:57,292:INFO:Checking exceptions
2023-10-15 02:21:57,292:INFO:Preloading libraries
2023-10-15 02:21:57,292:INFO:Set up data.
2023-10-15 02:21:57,298:INFO:Set up index.
2023-10-15 02:21:57,372:INFO:Initializing predict_model()
2023-10-15 02:21:57,372:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c2b00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe050>)
2023-10-15 02:21:57,372:INFO:Checking exceptions
2023-10-15 02:21:57,372:INFO:Preloading libraries
2023-10-15 02:21:57,372:INFO:Set up data.
2023-10-15 02:21:57,378:INFO:Set up index.
2023-10-15 02:21:57,452:INFO:Initializing predict_model()
2023-10-15 02:21:57,452:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c2b00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe050>)
2023-10-15 02:21:57,452:INFO:Checking exceptions
2023-10-15 02:21:57,452:INFO:Preloading libraries
2023-10-15 02:21:57,452:INFO:Set up data.
2023-10-15 02:21:57,458:INFO:Set up index.
2023-10-15 02:21:57,531:INFO:Initializing predict_model()
2023-10-15 02:21:57,531:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c2b00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe050>)
2023-10-15 02:21:57,531:INFO:Checking exceptions
2023-10-15 02:21:57,531:INFO:Preloading libraries
2023-10-15 02:21:57,531:INFO:Set up data.
2023-10-15 02:21:57,537:INFO:Set up index.
2023-10-15 02:22:11,047:INFO:Initializing predict_model()
2023-10-15 02:22:11,048:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983988b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ffe20>)
2023-10-15 02:22:11,049:INFO:Checking exceptions
2023-10-15 02:22:11,049:INFO:Preloading libraries
2023-10-15 02:22:11,052:INFO:Set up data.
2023-10-15 02:22:11,075:INFO:Set up index.
2023-10-15 02:22:11,199:INFO:Initializing predict_model()
2023-10-15 02:22:11,199:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29483b0d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ffe20>)
2023-10-15 02:22:11,200:INFO:Checking exceptions
2023-10-15 02:22:11,200:INFO:Preloading libraries
2023-10-15 02:22:11,200:INFO:Set up data.
2023-10-15 02:22:11,206:INFO:Set up index.
2023-10-15 02:22:11,280:INFO:Initializing predict_model()
2023-10-15 02:22:11,280:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930f8b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ffe20>)
2023-10-15 02:22:11,280:INFO:Checking exceptions
2023-10-15 02:22:11,280:INFO:Preloading libraries
2023-10-15 02:22:11,280:INFO:Set up data.
2023-10-15 02:22:11,286:INFO:Set up index.
2023-10-15 02:22:11,359:INFO:Initializing predict_model()
2023-10-15 02:22:11,359:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930f8b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ffe20>)
2023-10-15 02:22:11,359:INFO:Checking exceptions
2023-10-15 02:22:11,359:INFO:Preloading libraries
2023-10-15 02:22:11,359:INFO:Set up data.
2023-10-15 02:22:11,365:INFO:Set up index.
2023-10-15 02:22:11,437:INFO:Initializing predict_model()
2023-10-15 02:22:11,437:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930f8b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ffe20>)
2023-10-15 02:22:11,437:INFO:Checking exceptions
2023-10-15 02:22:11,437:INFO:Preloading libraries
2023-10-15 02:22:11,437:INFO:Set up data.
2023-10-15 02:22:11,443:INFO:Set up index.
2023-10-15 02:22:24,979:INFO:Initializing predict_model()
2023-10-15 02:22:24,981:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992d26e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939feb90>)
2023-10-15 02:22:24,981:INFO:Checking exceptions
2023-10-15 02:22:24,982:INFO:Preloading libraries
2023-10-15 02:22:24,983:INFO:Set up data.
2023-10-15 02:22:25,010:INFO:Set up index.
2023-10-15 02:22:25,175:INFO:Initializing predict_model()
2023-10-15 02:22:25,175:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983570d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939feb90>)
2023-10-15 02:22:25,175:INFO:Checking exceptions
2023-10-15 02:22:25,176:INFO:Preloading libraries
2023-10-15 02:22:25,176:INFO:Set up data.
2023-10-15 02:22:25,182:INFO:Set up index.
2023-10-15 02:22:25,257:INFO:Initializing predict_model()
2023-10-15 02:22:25,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983570d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-15 02:22:25,257:INFO:Checking exceptions
2023-10-15 02:22:25,257:INFO:Preloading libraries
2023-10-15 02:22:25,257:INFO:Set up data.
2023-10-15 02:22:25,264:INFO:Set up index.
2023-10-15 02:22:25,345:INFO:Initializing predict_model()
2023-10-15 02:22:25,345:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983570d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-15 02:22:25,345:INFO:Checking exceptions
2023-10-15 02:22:25,345:INFO:Preloading libraries
2023-10-15 02:22:25,345:INFO:Set up data.
2023-10-15 02:22:25,352:INFO:Set up index.
2023-10-15 02:22:25,440:INFO:Initializing predict_model()
2023-10-15 02:22:25,440:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983570d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-15 02:22:25,440:INFO:Checking exceptions
2023-10-15 02:22:25,440:INFO:Preloading libraries
2023-10-15 02:22:25,440:INFO:Set up data.
2023-10-15 02:22:25,447:INFO:Set up index.
2023-10-15 02:22:38,979:INFO:Initializing predict_model()
2023-10-15 02:22:38,981:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983dc1c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe560>)
2023-10-15 02:22:38,982:INFO:Checking exceptions
2023-10-15 02:22:38,982:INFO:Preloading libraries
2023-10-15 02:22:38,984:INFO:Set up data.
2023-10-15 02:22:39,010:INFO:Set up index.
2023-10-15 02:22:39,164:INFO:Initializing predict_model()
2023-10-15 02:22:39,164:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930f4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe560>)
2023-10-15 02:22:39,164:INFO:Checking exceptions
2023-10-15 02:22:39,164:INFO:Preloading libraries
2023-10-15 02:22:39,164:INFO:Set up data.
2023-10-15 02:22:39,171:INFO:Set up index.
2023-10-15 02:22:39,252:INFO:Initializing predict_model()
2023-10-15 02:22:39,252:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930f4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe560>)
2023-10-15 02:22:39,252:INFO:Checking exceptions
2023-10-15 02:22:39,252:INFO:Preloading libraries
2023-10-15 02:22:39,252:INFO:Set up data.
2023-10-15 02:22:39,258:INFO:Set up index.
2023-10-15 02:22:39,331:INFO:Initializing predict_model()
2023-10-15 02:22:39,332:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930f4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-15 02:22:39,332:INFO:Checking exceptions
2023-10-15 02:22:39,332:INFO:Preloading libraries
2023-10-15 02:22:39,332:INFO:Set up data.
2023-10-15 02:22:39,338:INFO:Set up index.
2023-10-15 02:22:39,410:INFO:Initializing predict_model()
2023-10-15 02:22:39,411:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930f4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c33520>)
2023-10-15 02:22:39,411:INFO:Checking exceptions
2023-10-15 02:22:39,411:INFO:Preloading libraries
2023-10-15 02:22:39,411:INFO:Set up data.
2023-10-15 02:22:39,417:INFO:Set up index.
2023-10-15 02:22:52,942:INFO:Initializing predict_model()
2023-10-15 02:22:52,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d5f310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-15 02:22:52,945:INFO:Checking exceptions
2023-10-15 02:22:52,945:INFO:Preloading libraries
2023-10-15 02:22:52,946:INFO:Set up data.
2023-10-15 02:22:52,970:INFO:Set up index.
2023-10-15 02:22:53,121:INFO:Initializing predict_model()
2023-10-15 02:22:53,121:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983339d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-15 02:22:53,121:INFO:Checking exceptions
2023-10-15 02:22:53,121:INFO:Preloading libraries
2023-10-15 02:22:53,122:INFO:Set up data.
2023-10-15 02:22:53,128:INFO:Set up index.
2023-10-15 02:22:53,209:INFO:Initializing predict_model()
2023-10-15 02:22:53,209:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983339d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-15 02:22:53,209:INFO:Checking exceptions
2023-10-15 02:22:53,209:INFO:Preloading libraries
2023-10-15 02:22:53,209:INFO:Set up data.
2023-10-15 02:22:53,216:INFO:Set up index.
2023-10-15 02:22:53,290:INFO:Initializing predict_model()
2023-10-15 02:22:53,290:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983339d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-15 02:22:53,290:INFO:Checking exceptions
2023-10-15 02:22:53,290:INFO:Preloading libraries
2023-10-15 02:22:53,290:INFO:Set up data.
2023-10-15 02:22:53,296:INFO:Set up index.
2023-10-15 02:22:53,368:INFO:Initializing predict_model()
2023-10-15 02:22:53,369:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983339d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-15 02:22:53,369:INFO:Checking exceptions
2023-10-15 02:22:53,369:INFO:Preloading libraries
2023-10-15 02:22:53,369:INFO:Set up data.
2023-10-15 02:22:53,375:INFO:Set up index.
2023-10-15 02:23:06,850:INFO:Initializing predict_model()
2023-10-15 02:23:06,854:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983f7af0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-15 02:23:06,854:INFO:Checking exceptions
2023-10-15 02:23:06,855:INFO:Preloading libraries
2023-10-15 02:23:06,863:INFO:Set up data.
2023-10-15 02:23:06,886:INFO:Set up index.
2023-10-15 02:23:07,017:INFO:Initializing predict_model()
2023-10-15 02:23:07,017:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29839b820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-15 02:23:07,017:INFO:Checking exceptions
2023-10-15 02:23:07,017:INFO:Preloading libraries
2023-10-15 02:23:07,017:INFO:Set up data.
2023-10-15 02:23:07,024:INFO:Set up index.
2023-10-15 02:23:07,105:INFO:Initializing predict_model()
2023-10-15 02:23:07,105:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2992d1ff0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-15 02:23:07,105:INFO:Checking exceptions
2023-10-15 02:23:07,105:INFO:Preloading libraries
2023-10-15 02:23:07,105:INFO:Set up data.
2023-10-15 02:23:07,111:INFO:Set up index.
2023-10-15 02:23:07,186:INFO:Initializing predict_model()
2023-10-15 02:23:07,186:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29831b250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-15 02:23:07,186:INFO:Checking exceptions
2023-10-15 02:23:07,186:INFO:Preloading libraries
2023-10-15 02:23:07,186:INFO:Set up data.
2023-10-15 02:23:07,192:INFO:Set up index.
2023-10-15 02:23:07,266:INFO:Initializing predict_model()
2023-10-15 02:23:07,266:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29831b250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc5e0>)
2023-10-15 02:23:07,266:INFO:Checking exceptions
2023-10-15 02:23:07,266:INFO:Preloading libraries
2023-10-15 02:23:07,266:INFO:Set up data.
2023-10-15 02:23:07,272:INFO:Set up index.
2023-10-15 02:23:20,768:INFO:Initializing predict_model()
2023-10-15 02:23:20,769:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983998d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f44c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-15 02:23:20,769:INFO:Checking exceptions
2023-10-15 02:23:20,769:INFO:Preloading libraries
2023-10-15 02:23:20,770:INFO:Set up data.
2023-10-15 02:23:20,797:INFO:Set up index.
2023-10-15 02:23:20,965:INFO:Initializing predict_model()
2023-10-15 02:23:20,965:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29831b970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-15 02:23:20,965:INFO:Checking exceptions
2023-10-15 02:23:20,965:INFO:Preloading libraries
2023-10-15 02:23:20,965:INFO:Set up data.
2023-10-15 02:23:20,971:INFO:Set up index.
2023-10-15 02:23:21,048:INFO:Initializing predict_model()
2023-10-15 02:23:21,048:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29831b970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-15 02:23:21,048:INFO:Checking exceptions
2023-10-15 02:23:21,048:INFO:Preloading libraries
2023-10-15 02:23:21,048:INFO:Set up data.
2023-10-15 02:23:21,054:INFO:Set up index.
2023-10-15 02:23:21,127:INFO:Initializing predict_model()
2023-10-15 02:23:21,127:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29831b970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-15 02:23:21,127:INFO:Checking exceptions
2023-10-15 02:23:21,127:INFO:Preloading libraries
2023-10-15 02:23:21,127:INFO:Set up data.
2023-10-15 02:23:21,133:INFO:Set up index.
2023-10-15 02:23:21,208:INFO:Initializing predict_model()
2023-10-15 02:23:21,208:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29831b970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f5090>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff130>)
2023-10-15 02:23:21,208:INFO:Checking exceptions
2023-10-15 02:23:21,208:INFO:Preloading libraries
2023-10-15 02:23:21,208:INFO:Set up data.
2023-10-15 02:23:21,215:INFO:Set up index.
2023-10-15 23:42:13,742:INFO:Initializing load_model()
2023-10-15 23:42:13,742:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:42:13,756:INFO:Initializing load_model()
2023-10-15 23:42:13,757:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:42:13,768:INFO:Initializing load_model()
2023-10-15 23:42:13,768:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:42:13,770:INFO:Initializing load_model()
2023-10-15 23:42:13,770:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:42:13,772:INFO:Initializing load_model()
2023-10-15 23:42:13,772:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:42:13,799:INFO:Initializing predict_model()
2023-10-15 23:42:13,799:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983995a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298d76500>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab880>)
2023-10-15 23:42:13,799:INFO:Checking exceptions
2023-10-15 23:42:13,799:INFO:Preloading libraries
2023-10-15 23:42:13,801:INFO:Set up data.
2023-10-15 23:42:13,825:INFO:Set up index.
2023-10-15 23:42:14,003:INFO:Initializing predict_model()
2023-10-15 23:42:14,003:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b1c30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab880>)
2023-10-15 23:42:14,003:INFO:Checking exceptions
2023-10-15 23:42:14,003:INFO:Preloading libraries
2023-10-15 23:42:14,003:INFO:Set up data.
2023-10-15 23:42:14,011:INFO:Set up index.
2023-10-15 23:42:14,089:INFO:Initializing predict_model()
2023-10-15 23:42:14,089:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b1c30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab880>)
2023-10-15 23:42:14,089:INFO:Checking exceptions
2023-10-15 23:42:14,089:INFO:Preloading libraries
2023-10-15 23:42:14,090:INFO:Set up data.
2023-10-15 23:42:14,096:INFO:Set up index.
2023-10-15 23:42:14,169:INFO:Initializing predict_model()
2023-10-15 23:42:14,169:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b1c30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-15 23:42:14,169:INFO:Checking exceptions
2023-10-15 23:42:14,169:INFO:Preloading libraries
2023-10-15 23:42:14,169:INFO:Set up data.
2023-10-15 23:42:14,175:INFO:Set up index.
2023-10-15 23:42:14,254:INFO:Initializing predict_model()
2023-10-15 23:42:14,254:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2938b1c30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983df3a0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148ca0>)
2023-10-15 23:42:14,254:INFO:Checking exceptions
2023-10-15 23:42:14,254:INFO:Preloading libraries
2023-10-15 23:42:14,255:INFO:Set up data.
2023-10-15 23:42:14,261:INFO:Set up index.
2023-10-15 23:55:29,889:INFO:Initializing load_model()
2023-10-15 23:55:29,889:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:55:29,907:INFO:Initializing load_model()
2023-10-15 23:55:29,907:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:55:29,909:INFO:Initializing load_model()
2023-10-15 23:55:29,909:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:55:29,912:INFO:Initializing load_model()
2023-10-15 23:55:29,912:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:55:29,914:INFO:Initializing load_model()
2023-10-15 23:55:29,914:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-15 23:55:29,925:INFO:Initializing predict_model()
2023-10-15 23:55:29,925:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298dabfa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabc70>)
2023-10-15 23:55:29,925:INFO:Checking exceptions
2023-10-15 23:55:29,925:INFO:Preloading libraries
2023-10-15 23:55:29,925:INFO:Set up data.
2023-10-15 23:55:29,934:INFO:Set up index.
2023-10-15 23:55:30,095:INFO:Initializing predict_model()
2023-10-15 23:55:30,095:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298338760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabc70>)
2023-10-15 23:55:30,095:INFO:Checking exceptions
2023-10-15 23:55:30,095:INFO:Preloading libraries
2023-10-15 23:55:30,095:INFO:Set up data.
2023-10-15 23:55:30,103:INFO:Set up index.
2023-10-15 23:55:30,187:INFO:Initializing predict_model()
2023-10-15 23:55:30,187:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298338760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabc70>)
2023-10-15 23:55:30,187:INFO:Checking exceptions
2023-10-15 23:55:30,187:INFO:Preloading libraries
2023-10-15 23:55:30,187:INFO:Set up data.
2023-10-15 23:55:30,194:INFO:Set up index.
2023-10-15 23:55:30,278:INFO:Initializing predict_model()
2023-10-15 23:55:30,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298338760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabc70>)
2023-10-15 23:55:30,278:INFO:Checking exceptions
2023-10-15 23:55:30,279:INFO:Preloading libraries
2023-10-15 23:55:30,279:INFO:Set up data.
2023-10-15 23:55:30,285:INFO:Set up index.
2023-10-15 23:55:30,391:INFO:Initializing predict_model()
2023-10-15 23:55:30,391:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298338760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabc70>)
2023-10-15 23:55:30,391:INFO:Checking exceptions
2023-10-15 23:55:30,391:INFO:Preloading libraries
2023-10-15 23:55:30,391:INFO:Set up data.
2023-10-15 23:55:30,398:INFO:Set up index.
2023-10-15 23:55:43,940:INFO:Initializing predict_model()
2023-10-15 23:55:43,942:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298f33ee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabd00>)
2023-10-15 23:55:43,942:INFO:Checking exceptions
2023-10-15 23:55:43,942:INFO:Preloading libraries
2023-10-15 23:55:43,945:INFO:Set up data.
2023-10-15 23:55:43,986:INFO:Set up index.
2023-10-15 23:55:44,161:INFO:Initializing predict_model()
2023-10-15 23:55:44,161:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298354dc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-15 23:55:44,161:INFO:Checking exceptions
2023-10-15 23:55:44,161:INFO:Preloading libraries
2023-10-15 23:55:44,161:INFO:Set up data.
2023-10-15 23:55:44,167:INFO:Set up index.
2023-10-15 23:55:44,240:INFO:Initializing predict_model()
2023-10-15 23:55:44,240:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29831bc40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-15 23:55:44,240:INFO:Checking exceptions
2023-10-15 23:55:44,240:INFO:Preloading libraries
2023-10-15 23:55:44,240:INFO:Set up data.
2023-10-15 23:55:44,246:INFO:Set up index.
2023-10-15 23:55:44,337:INFO:Initializing predict_model()
2023-10-15 23:55:44,337:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29831bc40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-15 23:55:44,337:INFO:Checking exceptions
2023-10-15 23:55:44,337:INFO:Preloading libraries
2023-10-15 23:55:44,337:INFO:Set up data.
2023-10-15 23:55:44,343:INFO:Set up index.
2023-10-15 23:55:44,421:INFO:Initializing predict_model()
2023-10-15 23:55:44,421:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125cdc9a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-15 23:55:44,421:INFO:Checking exceptions
2023-10-15 23:55:44,421:INFO:Preloading libraries
2023-10-15 23:55:44,421:INFO:Set up data.
2023-10-15 23:55:44,427:INFO:Set up index.
2023-10-15 23:55:58,010:INFO:Initializing predict_model()
2023-10-15 23:55:58,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298f30b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 23:55:58,012:INFO:Checking exceptions
2023-10-15 23:55:58,012:INFO:Preloading libraries
2023-10-15 23:55:58,014:INFO:Set up data.
2023-10-15 23:55:58,042:INFO:Set up index.
2023-10-15 23:55:58,204:INFO:Initializing predict_model()
2023-10-15 23:55:58,205:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2948398d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 23:55:58,205:INFO:Checking exceptions
2023-10-15 23:55:58,205:INFO:Preloading libraries
2023-10-15 23:55:58,205:INFO:Set up data.
2023-10-15 23:55:58,211:INFO:Set up index.
2023-10-15 23:55:58,284:INFO:Initializing predict_model()
2023-10-15 23:55:58,284:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2948398d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 23:55:58,284:INFO:Checking exceptions
2023-10-15 23:55:58,284:INFO:Preloading libraries
2023-10-15 23:55:58,285:INFO:Set up data.
2023-10-15 23:55:58,290:INFO:Set up index.
2023-10-15 23:55:58,364:INFO:Initializing predict_model()
2023-10-15 23:55:58,364:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125cdc8b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 23:55:58,364:INFO:Checking exceptions
2023-10-15 23:55:58,364:INFO:Preloading libraries
2023-10-15 23:55:58,364:INFO:Set up data.
2023-10-15 23:55:58,370:INFO:Set up index.
2023-10-15 23:55:58,452:INFO:Initializing predict_model()
2023-10-15 23:55:58,453:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x125cdc8b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125658b80>)
2023-10-15 23:55:58,453:INFO:Checking exceptions
2023-10-15 23:55:58,453:INFO:Preloading libraries
2023-10-15 23:55:58,453:INFO:Set up data.
2023-10-15 23:55:58,459:INFO:Set up index.
2023-10-15 23:56:12,003:INFO:Initializing predict_model()
2023-10-15 23:56:12,004:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e50f70>)
2023-10-15 23:56:12,004:INFO:Checking exceptions
2023-10-15 23:56:12,004:INFO:Preloading libraries
2023-10-15 23:56:12,005:INFO:Set up data.
2023-10-15 23:56:12,037:INFO:Set up index.
2023-10-15 23:56:12,206:INFO:Initializing predict_model()
2023-10-15 23:56:12,206:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e50f70>)
2023-10-15 23:56:12,206:INFO:Checking exceptions
2023-10-15 23:56:12,206:INFO:Preloading libraries
2023-10-15 23:56:12,206:INFO:Set up data.
2023-10-15 23:56:12,213:INFO:Set up index.
2023-10-15 23:56:12,290:INFO:Initializing predict_model()
2023-10-15 23:56:12,290:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e50f70>)
2023-10-15 23:56:12,290:INFO:Checking exceptions
2023-10-15 23:56:12,290:INFO:Preloading libraries
2023-10-15 23:56:12,290:INFO:Set up data.
2023-10-15 23:56:12,296:INFO:Set up index.
2023-10-15 23:56:12,369:INFO:Initializing predict_model()
2023-10-15 23:56:12,369:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e50f70>)
2023-10-15 23:56:12,369:INFO:Checking exceptions
2023-10-15 23:56:12,369:INFO:Preloading libraries
2023-10-15 23:56:12,369:INFO:Set up data.
2023-10-15 23:56:12,375:INFO:Set up index.
2023-10-15 23:56:12,452:INFO:Initializing predict_model()
2023-10-15 23:56:12,452:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e50f70>)
2023-10-15 23:56:12,452:INFO:Checking exceptions
2023-10-15 23:56:12,452:INFO:Preloading libraries
2023-10-15 23:56:12,452:INFO:Set up data.
2023-10-15 23:56:12,459:INFO:Set up index.
2023-10-15 23:56:26,030:INFO:Initializing predict_model()
2023-10-15 23:56:26,031:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29839a4d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab760>)
2023-10-15 23:56:26,032:INFO:Checking exceptions
2023-10-15 23:56:26,032:INFO:Preloading libraries
2023-10-15 23:56:26,034:INFO:Set up data.
2023-10-15 23:56:26,067:INFO:Set up index.
2023-10-15 23:56:26,248:INFO:Initializing predict_model()
2023-10-15 23:56:26,248:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab760>)
2023-10-15 23:56:26,248:INFO:Checking exceptions
2023-10-15 23:56:26,248:INFO:Preloading libraries
2023-10-15 23:56:26,248:INFO:Set up data.
2023-10-15 23:56:26,254:INFO:Set up index.
2023-10-15 23:56:26,331:INFO:Initializing predict_model()
2023-10-15 23:56:26,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-15 23:56:26,331:INFO:Checking exceptions
2023-10-15 23:56:26,331:INFO:Preloading libraries
2023-10-15 23:56:26,331:INFO:Set up data.
2023-10-15 23:56:26,337:INFO:Set up index.
2023-10-15 23:56:26,414:INFO:Initializing predict_model()
2023-10-15 23:56:26,414:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-15 23:56:26,414:INFO:Checking exceptions
2023-10-15 23:56:26,414:INFO:Preloading libraries
2023-10-15 23:56:26,414:INFO:Set up data.
2023-10-15 23:56:26,420:INFO:Set up index.
2023-10-15 23:56:26,499:INFO:Initializing predict_model()
2023-10-15 23:56:26,499:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298357730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-15 23:56:26,499:INFO:Checking exceptions
2023-10-15 23:56:26,499:INFO:Preloading libraries
2023-10-15 23:56:26,499:INFO:Set up data.
2023-10-15 23:56:26,505:INFO:Set up index.
2023-10-15 23:56:40,002:INFO:Initializing predict_model()
2023-10-15 23:56:40,003:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298dab5b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 23:56:40,003:INFO:Checking exceptions
2023-10-15 23:56:40,003:INFO:Preloading libraries
2023-10-15 23:56:40,005:INFO:Set up data.
2023-10-15 23:56:40,030:INFO:Set up index.
2023-10-15 23:56:40,199:INFO:Initializing predict_model()
2023-10-15 23:56:40,199:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930d810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 23:56:40,199:INFO:Checking exceptions
2023-10-15 23:56:40,199:INFO:Preloading libraries
2023-10-15 23:56:40,199:INFO:Set up data.
2023-10-15 23:56:40,205:INFO:Set up index.
2023-10-15 23:56:40,281:INFO:Initializing predict_model()
2023-10-15 23:56:40,281:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930d810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 23:56:40,281:INFO:Checking exceptions
2023-10-15 23:56:40,281:INFO:Preloading libraries
2023-10-15 23:56:40,282:INFO:Set up data.
2023-10-15 23:56:40,287:INFO:Set up index.
2023-10-15 23:56:40,364:INFO:Initializing predict_model()
2023-10-15 23:56:40,364:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930d810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 23:56:40,364:INFO:Checking exceptions
2023-10-15 23:56:40,364:INFO:Preloading libraries
2023-10-15 23:56:40,364:INFO:Set up data.
2023-10-15 23:56:40,370:INFO:Set up index.
2023-10-15 23:56:40,445:INFO:Initializing predict_model()
2023-10-15 23:56:40,446:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930d810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256970a0>)
2023-10-15 23:56:40,446:INFO:Checking exceptions
2023-10-15 23:56:40,446:INFO:Preloading libraries
2023-10-15 23:56:40,446:INFO:Set up data.
2023-10-15 23:56:40,452:INFO:Set up index.
2023-10-15 23:56:53,971:INFO:Initializing predict_model()
2023-10-15 23:56:53,973:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298f33fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-15 23:56:53,973:INFO:Checking exceptions
2023-10-15 23:56:53,974:INFO:Preloading libraries
2023-10-15 23:56:53,977:INFO:Set up data.
2023-10-15 23:56:54,007:INFO:Set up index.
2023-10-15 23:56:54,236:INFO:Initializing predict_model()
2023-10-15 23:56:54,236:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29483beb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-15 23:56:54,236:INFO:Checking exceptions
2023-10-15 23:56:54,236:INFO:Preloading libraries
2023-10-15 23:56:54,236:INFO:Set up data.
2023-10-15 23:56:54,243:INFO:Set up index.
2023-10-15 23:56:54,337:INFO:Initializing predict_model()
2023-10-15 23:56:54,337:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29483beb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-15 23:56:54,338:INFO:Checking exceptions
2023-10-15 23:56:54,338:INFO:Preloading libraries
2023-10-15 23:56:54,338:INFO:Set up data.
2023-10-15 23:56:54,346:INFO:Set up index.
2023-10-15 23:56:54,453:INFO:Initializing predict_model()
2023-10-15 23:56:54,453:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2993178e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-15 23:56:54,453:INFO:Checking exceptions
2023-10-15 23:56:54,454:INFO:Preloading libraries
2023-10-15 23:56:54,454:INFO:Set up data.
2023-10-15 23:56:54,461:INFO:Set up index.
2023-10-15 23:56:54,540:INFO:Initializing predict_model()
2023-10-15 23:56:54,541:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2993178e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149240>)
2023-10-15 23:56:54,541:INFO:Checking exceptions
2023-10-15 23:56:54,541:INFO:Preloading libraries
2023-10-15 23:56:54,541:INFO:Set up data.
2023-10-15 23:56:54,547:INFO:Set up index.
2023-10-15 23:57:08,062:INFO:Initializing predict_model()
2023-10-15 23:57:08,064:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d75e40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697130>)
2023-10-15 23:57:08,064:INFO:Checking exceptions
2023-10-15 23:57:08,064:INFO:Preloading libraries
2023-10-15 23:57:08,069:INFO:Set up data.
2023-10-15 23:57:08,115:INFO:Set up index.
2023-10-15 23:57:08,281:INFO:Initializing predict_model()
2023-10-15 23:57:08,281:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c87d30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697130>)
2023-10-15 23:57:08,282:INFO:Checking exceptions
2023-10-15 23:57:08,282:INFO:Preloading libraries
2023-10-15 23:57:08,282:INFO:Set up data.
2023-10-15 23:57:08,288:INFO:Set up index.
2023-10-15 23:57:08,364:INFO:Initializing predict_model()
2023-10-15 23:57:08,364:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c87d30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697130>)
2023-10-15 23:57:08,364:INFO:Checking exceptions
2023-10-15 23:57:08,364:INFO:Preloading libraries
2023-10-15 23:57:08,364:INFO:Set up data.
2023-10-15 23:57:08,370:INFO:Set up index.
2023-10-15 23:57:08,448:INFO:Initializing predict_model()
2023-10-15 23:57:08,448:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930ec50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697130>)
2023-10-15 23:57:08,448:INFO:Checking exceptions
2023-10-15 23:57:08,448:INFO:Preloading libraries
2023-10-15 23:57:08,448:INFO:Set up data.
2023-10-15 23:57:08,454:INFO:Set up index.
2023-10-15 23:57:08,529:INFO:Initializing predict_model()
2023-10-15 23:57:08,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29930ec50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697130>)
2023-10-15 23:57:08,529:INFO:Checking exceptions
2023-10-15 23:57:08,529:INFO:Preloading libraries
2023-10-15 23:57:08,530:INFO:Set up data.
2023-10-15 23:57:08,536:INFO:Set up index.
2023-10-15 23:57:22,067:INFO:Initializing predict_model()
2023-10-15 23:57:22,069:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298330910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fab640>)
2023-10-15 23:57:22,069:INFO:Checking exceptions
2023-10-15 23:57:22,069:INFO:Preloading libraries
2023-10-15 23:57:22,082:INFO:Set up data.
2023-10-15 23:57:22,112:INFO:Set up index.
2023-10-15 23:57:22,301:INFO:Initializing predict_model()
2023-10-15 23:57:22,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299314be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x137aa0790>)
2023-10-15 23:57:22,302:INFO:Checking exceptions
2023-10-15 23:57:22,302:INFO:Preloading libraries
2023-10-15 23:57:22,302:INFO:Set up data.
2023-10-15 23:57:22,312:INFO:Set up index.
2023-10-15 23:57:22,394:INFO:Initializing predict_model()
2023-10-15 23:57:22,394:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299314be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x137aa0790>)
2023-10-15 23:57:22,394:INFO:Checking exceptions
2023-10-15 23:57:22,394:INFO:Preloading libraries
2023-10-15 23:57:22,394:INFO:Set up data.
2023-10-15 23:57:22,400:INFO:Set up index.
2023-10-15 23:57:22,483:INFO:Initializing predict_model()
2023-10-15 23:57:22,484:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299314be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x137aa0790>)
2023-10-15 23:57:22,484:INFO:Checking exceptions
2023-10-15 23:57:22,484:INFO:Preloading libraries
2023-10-15 23:57:22,484:INFO:Set up data.
2023-10-15 23:57:22,490:INFO:Set up index.
2023-10-15 23:57:22,602:INFO:Initializing predict_model()
2023-10-15 23:57:22,602:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x299314be0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x137aa0790>)
2023-10-15 23:57:22,602:INFO:Checking exceptions
2023-10-15 23:57:22,602:INFO:Preloading libraries
2023-10-15 23:57:22,603:INFO:Set up data.
2023-10-15 23:57:22,611:INFO:Set up index.
2023-10-15 23:57:36,157:INFO:Initializing predict_model()
2023-10-15 23:57:36,158:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c1240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f7490>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x296fabac0>)
2023-10-15 23:57:36,159:INFO:Checking exceptions
2023-10-15 23:57:36,159:INFO:Preloading libraries
2023-10-15 23:57:36,161:INFO:Set up data.
2023-10-15 23:57:36,200:INFO:Set up index.
2023-10-15 23:57:36,358:INFO:Initializing predict_model()
2023-10-15 23:57:36,358:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c86950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-15 23:57:36,358:INFO:Checking exceptions
2023-10-15 23:57:36,358:INFO:Preloading libraries
2023-10-15 23:57:36,358:INFO:Set up data.
2023-10-15 23:57:36,365:INFO:Set up index.
2023-10-15 23:57:36,446:INFO:Initializing predict_model()
2023-10-15 23:57:36,446:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c86950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-15 23:57:36,446:INFO:Checking exceptions
2023-10-15 23:57:36,446:INFO:Preloading libraries
2023-10-15 23:57:36,446:INFO:Set up data.
2023-10-15 23:57:36,452:INFO:Set up index.
2023-10-15 23:57:36,532:INFO:Initializing predict_model()
2023-10-15 23:57:36,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c86950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-15 23:57:36,532:INFO:Checking exceptions
2023-10-15 23:57:36,532:INFO:Preloading libraries
2023-10-15 23:57:36,532:INFO:Set up data.
2023-10-15 23:57:36,538:INFO:Set up index.
2023-10-15 23:57:36,615:INFO:Initializing predict_model()
2023-10-15 23:57:36,615:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x293c86950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2983f6a40>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b149750>)
2023-10-15 23:57:36,615:INFO:Checking exceptions
2023-10-15 23:57:36,615:INFO:Preloading libraries
2023-10-15 23:57:36,616:INFO:Set up data.
2023-10-15 23:57:36,622:INFO:Set up index.
2023-10-16 03:39:46,710:INFO:Initializing load_model()
2023-10-16 03:39:46,711:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-16 03:39:46,727:INFO:Initializing load_model()
2023-10-16 03:39:46,727:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-16 03:39:46,734:INFO:Initializing load_model()
2023-10-16 03:39:46,734:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-16 03:39:46,737:INFO:Initializing load_model()
2023-10-16 03:39:46,737:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-16 03:39:46,739:INFO:Initializing load_model()
2023-10-16 03:39:46,739:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-16 03:40:04,578:INFO:Initializing load_model()
2023-10-16 03:40:04,579:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-16 03:40:04,587:INFO:Initializing load_model()
2023-10-16 03:40:04,587:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-16 03:40:04,590:INFO:Initializing load_model()
2023-10-16 03:40:04,590:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-16 03:40:04,592:INFO:Initializing load_model()
2023-10-16 03:40:04,592:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-16 03:40:04,593:INFO:Initializing load_model()
2023-10-16 03:40:04,593:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:11:26,538:INFO:Initializing load_model()
2023-10-17 07:11:26,539:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:11:26,569:INFO:Initializing load_model()
2023-10-17 07:11:26,569:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:11:26,591:INFO:Initializing load_model()
2023-10-17 07:11:26,591:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:11:26,594:INFO:Initializing load_model()
2023-10-17 07:11:26,595:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:11:26,598:INFO:Initializing load_model()
2023-10-17 07:11:26,598:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:46,821:INFO:Initializing load_model()
2023-10-17 07:13:46,822:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:46,840:INFO:Initializing load_model()
2023-10-17 07:13:46,840:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:46,854:INFO:Initializing load_model()
2023-10-17 07:13:46,854:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:46,858:INFO:Initializing load_model()
2023-10-17 07:13:46,858:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:46,862:INFO:Initializing load_model()
2023-10-17 07:13:46,862:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,504:INFO:Initializing load_model()
2023-10-17 07:13:54,505:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,510:INFO:Initializing load_model()
2023-10-17 07:13:54,510:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,513:INFO:Initializing load_model()
2023-10-17 07:13:54,513:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,516:INFO:Initializing load_model()
2023-10-17 07:13:54,516:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,518:INFO:Initializing load_model()
2023-10-17 07:13:54,518:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,748:INFO:Initializing load_model()
2023-10-17 07:13:54,748:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,749:INFO:Initializing load_model()
2023-10-17 07:13:54,749:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,751:INFO:Initializing load_model()
2023-10-17 07:13:54,751:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,753:INFO:Initializing load_model()
2023-10-17 07:13:54,753:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,755:INFO:Initializing load_model()
2023-10-17 07:13:54,755:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,880:INFO:Initializing load_model()
2023-10-17 07:13:54,880:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,881:INFO:Initializing load_model()
2023-10-17 07:13:54,881:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,883:INFO:Initializing load_model()
2023-10-17 07:13:54,883:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,885:INFO:Initializing load_model()
2023-10-17 07:13:54,885:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:54,886:INFO:Initializing load_model()
2023-10-17 07:13:54,886:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,050:INFO:Initializing load_model()
2023-10-17 07:13:55,051:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,052:INFO:Initializing load_model()
2023-10-17 07:13:55,052:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,053:INFO:Initializing load_model()
2023-10-17 07:13:55,053:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,055:INFO:Initializing load_model()
2023-10-17 07:13:55,055:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,056:INFO:Initializing load_model()
2023-10-17 07:13:55,056:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,173:INFO:Initializing load_model()
2023-10-17 07:13:55,173:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,174:INFO:Initializing load_model()
2023-10-17 07:13:55,174:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,176:INFO:Initializing load_model()
2023-10-17 07:13:55,176:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,177:INFO:Initializing load_model()
2023-10-17 07:13:55,177:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:55,178:INFO:Initializing load_model()
2023-10-17 07:13:55,178:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,509:INFO:Initializing load_model()
2023-10-17 07:13:56,509:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,513:INFO:Initializing load_model()
2023-10-17 07:13:56,513:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,515:INFO:Initializing load_model()
2023-10-17 07:13:56,515:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,516:INFO:Initializing load_model()
2023-10-17 07:13:56,516:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,518:INFO:Initializing load_model()
2023-10-17 07:13:56,518:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,734:INFO:Initializing load_model()
2023-10-17 07:13:56,735:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,736:INFO:Initializing load_model()
2023-10-17 07:13:56,736:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,738:INFO:Initializing load_model()
2023-10-17 07:13:56,738:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,741:INFO:Initializing load_model()
2023-10-17 07:13:56,741:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,743:INFO:Initializing load_model()
2023-10-17 07:13:56,743:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,888:INFO:Initializing load_model()
2023-10-17 07:13:56,888:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,889:INFO:Initializing load_model()
2023-10-17 07:13:56,889:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,890:INFO:Initializing load_model()
2023-10-17 07:13:56,890:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,891:INFO:Initializing load_model()
2023-10-17 07:13:56,891:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:56,893:INFO:Initializing load_model()
2023-10-17 07:13:56,893:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:57,056:INFO:Initializing load_model()
2023-10-17 07:13:57,056:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:57,059:INFO:Initializing load_model()
2023-10-17 07:13:57,059:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:57,060:INFO:Initializing load_model()
2023-10-17 07:13:57,060:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:57,062:INFO:Initializing load_model()
2023-10-17 07:13:57,062:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:57,063:INFO:Initializing load_model()
2023-10-17 07:13:57,063:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,216:INFO:Initializing load_model()
2023-10-17 07:13:58,216:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,217:INFO:Initializing load_model()
2023-10-17 07:13:58,217:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,219:INFO:Initializing load_model()
2023-10-17 07:13:58,219:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,220:INFO:Initializing load_model()
2023-10-17 07:13:58,220:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,222:INFO:Initializing load_model()
2023-10-17 07:13:58,222:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,542:INFO:Initializing load_model()
2023-10-17 07:13:58,542:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,544:INFO:Initializing load_model()
2023-10-17 07:13:58,544:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,545:INFO:Initializing load_model()
2023-10-17 07:13:58,545:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,547:INFO:Initializing load_model()
2023-10-17 07:13:58,547:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,548:INFO:Initializing load_model()
2023-10-17 07:13:58,548:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,657:INFO:Initializing load_model()
2023-10-17 07:13:58,657:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,658:INFO:Initializing load_model()
2023-10-17 07:13:58,658:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,659:INFO:Initializing load_model()
2023-10-17 07:13:58,659:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,661:INFO:Initializing load_model()
2023-10-17 07:13:58,661:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:13:58,663:INFO:Initializing load_model()
2023-10-17 07:13:58,663:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,652:INFO:Initializing load_model()
2023-10-17 07:14:05,652:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,654:INFO:Initializing load_model()
2023-10-17 07:14:05,654:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,657:INFO:Initializing load_model()
2023-10-17 07:14:05,658:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,661:INFO:Initializing load_model()
2023-10-17 07:14:05,661:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,665:INFO:Initializing load_model()
2023-10-17 07:14:05,665:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,827:INFO:Initializing load_model()
2023-10-17 07:14:05,827:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,828:INFO:Initializing load_model()
2023-10-17 07:14:05,828:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,829:INFO:Initializing load_model()
2023-10-17 07:14:05,829:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,831:INFO:Initializing load_model()
2023-10-17 07:14:05,831:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:05,832:INFO:Initializing load_model()
2023-10-17 07:14:05,832:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:15,239:INFO:Initializing load_model()
2023-10-17 07:14:15,240:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:15,242:INFO:Initializing load_model()
2023-10-17 07:14:15,242:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:15,245:INFO:Initializing load_model()
2023-10-17 07:14:15,245:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:15,246:INFO:Initializing load_model()
2023-10-17 07:14:15,246:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:15,247:INFO:Initializing load_model()
2023-10-17 07:14:15,247:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:15,362:INFO:Initializing predict_model()
2023-10-17 07:14:15,362:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29737b790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973be680>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fd360>)
2023-10-17 07:14:15,362:INFO:Checking exceptions
2023-10-17 07:14:15,362:INFO:Preloading libraries
2023-10-17 07:14:15,362:INFO:Set up data.
2023-10-17 07:14:15,370:INFO:Set up index.
2023-10-17 07:14:15,533:INFO:Initializing predict_model()
2023-10-17 07:14:15,533:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2973bca90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-17 07:14:15,533:INFO:Checking exceptions
2023-10-17 07:14:15,533:INFO:Preloading libraries
2023-10-17 07:14:15,533:INFO:Set up data.
2023-10-17 07:14:15,537:INFO:Set up index.
2023-10-17 07:14:15,621:INFO:Initializing predict_model()
2023-10-17 07:14:15,621:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983dc640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-17 07:14:15,621:INFO:Checking exceptions
2023-10-17 07:14:15,621:INFO:Preloading libraries
2023-10-17 07:14:15,622:INFO:Set up data.
2023-10-17 07:14:15,625:INFO:Set up index.
2023-10-17 07:14:15,702:INFO:Initializing predict_model()
2023-10-17 07:14:15,702:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c1240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-17 07:14:15,702:INFO:Checking exceptions
2023-10-17 07:14:15,702:INFO:Preloading libraries
2023-10-17 07:14:15,702:INFO:Set up data.
2023-10-17 07:14:15,706:INFO:Set up index.
2023-10-17 07:14:15,782:INFO:Initializing predict_model()
2023-10-17 07:14:15,782:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c1240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973bd5d0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-17 07:14:15,782:INFO:Checking exceptions
2023-10-17 07:14:15,782:INFO:Preloading libraries
2023-10-17 07:14:15,782:INFO:Set up data.
2023-10-17 07:14:15,786:INFO:Set up index.
2023-10-17 07:14:40,005:INFO:Initializing load_model()
2023-10-17 07:14:40,006:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:40,013:INFO:Initializing load_model()
2023-10-17 07:14:40,013:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:40,016:INFO:Initializing load_model()
2023-10-17 07:14:40,016:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:40,018:INFO:Initializing load_model()
2023-10-17 07:14:40,018:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:14:40,020:INFO:Initializing load_model()
2023-10-17 07:14:40,020:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:29,226:INFO:Initializing load_model()
2023-10-17 07:17:29,228:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:29,243:INFO:Initializing load_model()
2023-10-17 07:17:29,243:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:29,251:INFO:Initializing load_model()
2023-10-17 07:17:29,251:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:29,253:INFO:Initializing load_model()
2023-10-17 07:17:29,253:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:29,256:INFO:Initializing load_model()
2023-10-17 07:17:29,256:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:46,552:INFO:Initializing load_model()
2023-10-17 07:17:46,552:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:46,555:INFO:Initializing load_model()
2023-10-17 07:17:46,556:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:46,558:INFO:Initializing load_model()
2023-10-17 07:17:46,558:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:46,560:INFO:Initializing load_model()
2023-10-17 07:17:46,560:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:46,562:INFO:Initializing load_model()
2023-10-17 07:17:46,562:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:54,643:INFO:Initializing load_model()
2023-10-17 07:17:54,643:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:54,646:INFO:Initializing load_model()
2023-10-17 07:17:54,646:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:54,652:INFO:Initializing load_model()
2023-10-17 07:17:54,652:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:54,659:INFO:Initializing load_model()
2023-10-17 07:17:54,659:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:54,661:INFO:Initializing load_model()
2023-10-17 07:17:54,661:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,004:INFO:Initializing load_model()
2023-10-17 07:17:55,004:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,005:INFO:Initializing load_model()
2023-10-17 07:17:55,005:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,007:INFO:Initializing load_model()
2023-10-17 07:17:55,007:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,008:INFO:Initializing load_model()
2023-10-17 07:17:55,008:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,009:INFO:Initializing load_model()
2023-10-17 07:17:55,009:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,157:INFO:Initializing load_model()
2023-10-17 07:17:55,157:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,158:INFO:Initializing load_model()
2023-10-17 07:17:55,158:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,159:INFO:Initializing load_model()
2023-10-17 07:17:55,159:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,161:INFO:Initializing load_model()
2023-10-17 07:17:55,161:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:55,162:INFO:Initializing load_model()
2023-10-17 07:17:55,162:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:59,802:INFO:Initializing load_model()
2023-10-17 07:17:59,803:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:59,806:INFO:Initializing load_model()
2023-10-17 07:17:59,806:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:59,808:INFO:Initializing load_model()
2023-10-17 07:17:59,808:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:59,809:INFO:Initializing load_model()
2023-10-17 07:17:59,809:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:17:59,810:INFO:Initializing load_model()
2023-10-17 07:17:59,810:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:08,804:INFO:Initializing load_model()
2023-10-17 07:18:08,805:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:08,807:INFO:Initializing load_model()
2023-10-17 07:18:08,807:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:08,809:INFO:Initializing load_model()
2023-10-17 07:18:08,809:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:08,810:INFO:Initializing load_model()
2023-10-17 07:18:08,810:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:08,811:INFO:Initializing load_model()
2023-10-17 07:18:08,812:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:13,986:INFO:Initializing load_model()
2023-10-17 07:18:13,986:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:13,989:INFO:Initializing load_model()
2023-10-17 07:18:13,989:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:13,996:INFO:Initializing load_model()
2023-10-17 07:18:13,996:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:13,998:INFO:Initializing load_model()
2023-10-17 07:18:13,998:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:13,999:INFO:Initializing load_model()
2023-10-17 07:18:13,999:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:24,462:INFO:Initializing load_model()
2023-10-17 07:18:24,462:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:24,465:INFO:Initializing load_model()
2023-10-17 07:18:24,465:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:24,468:INFO:Initializing load_model()
2023-10-17 07:18:24,468:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:24,470:INFO:Initializing load_model()
2023-10-17 07:18:24,470:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:24,471:INFO:Initializing load_model()
2023-10-17 07:18:24,471:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:24,585:INFO:Initializing predict_model()
2023-10-17 07:18:24,585:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29738d900>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298f37220>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fecb0>)
2023-10-17 07:18:24,585:INFO:Checking exceptions
2023-10-17 07:18:24,586:INFO:Preloading libraries
2023-10-17 07:18:24,586:INFO:Set up data.
2023-10-17 07:18:24,595:INFO:Set up index.
2023-10-17 07:18:24,763:INFO:Initializing predict_model()
2023-10-17 07:18:24,763:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983543a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-17 07:18:24,764:INFO:Checking exceptions
2023-10-17 07:18:24,764:INFO:Preloading libraries
2023-10-17 07:18:24,764:INFO:Set up data.
2023-10-17 07:18:24,768:INFO:Set up index.
2023-10-17 07:18:24,849:INFO:Initializing predict_model()
2023-10-17 07:18:24,849:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983543a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-17 07:18:24,849:INFO:Checking exceptions
2023-10-17 07:18:24,849:INFO:Preloading libraries
2023-10-17 07:18:24,849:INFO:Set up data.
2023-10-17 07:18:24,853:INFO:Set up index.
2023-10-17 07:18:24,930:INFO:Initializing predict_model()
2023-10-17 07:18:24,930:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983543a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-17 07:18:24,930:INFO:Checking exceptions
2023-10-17 07:18:24,930:INFO:Preloading libraries
2023-10-17 07:18:24,930:INFO:Set up data.
2023-10-17 07:18:24,934:INFO:Set up index.
2023-10-17 07:18:25,010:INFO:Initializing predict_model()
2023-10-17 07:18:25,011:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983543a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973bd3c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-17 07:18:25,011:INFO:Checking exceptions
2023-10-17 07:18:25,011:INFO:Preloading libraries
2023-10-17 07:18:25,011:INFO:Set up data.
2023-10-17 07:18:25,015:INFO:Set up index.
2023-10-17 07:18:43,361:INFO:Initializing load_model()
2023-10-17 07:18:43,361:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:43,365:INFO:Initializing load_model()
2023-10-17 07:18:43,365:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:43,380:INFO:Initializing load_model()
2023-10-17 07:18:43,380:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:43,388:INFO:Initializing load_model()
2023-10-17 07:18:43,388:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:18:43,391:INFO:Initializing load_model()
2023-10-17 07:18:43,391:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:19:53,439:INFO:Initializing load_model()
2023-10-17 07:19:53,440:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:19:53,453:INFO:Initializing load_model()
2023-10-17 07:19:53,453:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:19:53,462:INFO:Initializing load_model()
2023-10-17 07:19:53,462:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:19:53,465:INFO:Initializing load_model()
2023-10-17 07:19:53,465:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:19:53,466:INFO:Initializing load_model()
2023-10-17 07:19:53,466:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:19:53,499:INFO:Initializing predict_model()
2023-10-17 07:19:53,499:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298f37bb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973fdea0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fcca0>)
2023-10-17 07:19:53,499:INFO:Checking exceptions
2023-10-17 07:19:53,499:INFO:Preloading libraries
2023-10-17 07:19:53,500:INFO:Set up data.
2023-10-17 07:19:53,533:INFO:Set up index.
2023-10-17 07:19:53,744:INFO:Initializing predict_model()
2023-10-17 07:19:53,744:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:19:53,744:INFO:Checking exceptions
2023-10-17 07:19:53,744:INFO:Preloading libraries
2023-10-17 07:19:53,744:INFO:Set up data.
2023-10-17 07:19:53,751:INFO:Set up index.
2023-10-17 07:19:53,828:INFO:Initializing predict_model()
2023-10-17 07:19:53,828:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:19:53,828:INFO:Checking exceptions
2023-10-17 07:19:53,828:INFO:Preloading libraries
2023-10-17 07:19:53,828:INFO:Set up data.
2023-10-17 07:19:53,834:INFO:Set up index.
2023-10-17 07:19:53,913:INFO:Initializing predict_model()
2023-10-17 07:19:53,913:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:19:53,913:INFO:Checking exceptions
2023-10-17 07:19:53,913:INFO:Preloading libraries
2023-10-17 07:19:53,914:INFO:Set up data.
2023-10-17 07:19:53,920:INFO:Set up index.
2023-10-17 07:19:54,009:INFO:Initializing predict_model()
2023-10-17 07:19:54,009:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973fd6c0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:19:54,009:INFO:Checking exceptions
2023-10-17 07:19:54,009:INFO:Preloading libraries
2023-10-17 07:19:54,009:INFO:Set up data.
2023-10-17 07:19:54,016:INFO:Set up index.
2023-10-17 07:20:08,169:INFO:Initializing load_model()
2023-10-17 07:20:08,169:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:20:08,175:INFO:Initializing load_model()
2023-10-17 07:20:08,175:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:20:08,178:INFO:Initializing load_model()
2023-10-17 07:20:08,178:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:20:08,180:INFO:Initializing load_model()
2023-10-17 07:20:08,181:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:20:08,183:INFO:Initializing load_model()
2023-10-17 07:20:08,183:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:20:08,195:INFO:Initializing predict_model()
2023-10-17 07:20:08,195:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298398970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298d5d3f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939ff9a0>)
2023-10-17 07:20:08,195:INFO:Checking exceptions
2023-10-17 07:20:08,195:INFO:Preloading libraries
2023-10-17 07:20:08,196:INFO:Set up data.
2023-10-17 07:20:08,207:INFO:Set up index.
2023-10-17 07:20:08,415:INFO:Initializing predict_model()
2023-10-17 07:20:08,415:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298f33850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-17 07:20:08,415:INFO:Checking exceptions
2023-10-17 07:20:08,415:INFO:Preloading libraries
2023-10-17 07:20:08,415:INFO:Set up data.
2023-10-17 07:20:08,422:INFO:Set up index.
2023-10-17 07:20:08,505:INFO:Initializing predict_model()
2023-10-17 07:20:08,505:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983334f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-17 07:20:08,505:INFO:Checking exceptions
2023-10-17 07:20:08,505:INFO:Preloading libraries
2023-10-17 07:20:08,506:INFO:Set up data.
2023-10-17 07:20:08,512:INFO:Set up index.
2023-10-17 07:20:08,600:INFO:Initializing predict_model()
2023-10-17 07:20:08,600:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983334f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-17 07:20:08,600:INFO:Checking exceptions
2023-10-17 07:20:08,600:INFO:Preloading libraries
2023-10-17 07:20:08,600:INFO:Set up data.
2023-10-17 07:20:08,606:INFO:Set up index.
2023-10-17 07:20:08,685:INFO:Initializing predict_model()
2023-10-17 07:20:08,685:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983334f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973bdf00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x292c332e0>)
2023-10-17 07:20:08,685:INFO:Checking exceptions
2023-10-17 07:20:08,685:INFO:Preloading libraries
2023-10-17 07:20:08,685:INFO:Set up data.
2023-10-17 07:20:08,691:INFO:Set up index.
2023-10-17 07:20:22,185:INFO:Initializing predict_model()
2023-10-17 07:20:22,187:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29839bd30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298d5d3f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdea0>)
2023-10-17 07:20:22,187:INFO:Checking exceptions
2023-10-17 07:20:22,188:INFO:Preloading libraries
2023-10-17 07:20:22,189:INFO:Set up data.
2023-10-17 07:20:22,214:INFO:Set up index.
2023-10-17 07:20:22,369:INFO:Initializing predict_model()
2023-10-17 07:20:22,369:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29839bd30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdea0>)
2023-10-17 07:20:22,369:INFO:Checking exceptions
2023-10-17 07:20:22,369:INFO:Preloading libraries
2023-10-17 07:20:22,369:INFO:Set up data.
2023-10-17 07:20:22,376:INFO:Set up index.
2023-10-17 07:20:22,459:INFO:Initializing predict_model()
2023-10-17 07:20:22,459:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29839b3a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125659510>)
2023-10-17 07:20:22,459:INFO:Checking exceptions
2023-10-17 07:20:22,460:INFO:Preloading libraries
2023-10-17 07:20:22,460:INFO:Set up data.
2023-10-17 07:20:22,466:INFO:Set up index.
2023-10-17 07:20:22,549:INFO:Initializing predict_model()
2023-10-17 07:20:22,549:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983334f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125659510>)
2023-10-17 07:20:22,549:INFO:Checking exceptions
2023-10-17 07:20:22,549:INFO:Preloading libraries
2023-10-17 07:20:22,549:INFO:Set up data.
2023-10-17 07:20:22,555:INFO:Set up index.
2023-10-17 07:20:22,638:INFO:Initializing predict_model()
2023-10-17 07:20:22,638:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29839b3a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973bdf00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125659510>)
2023-10-17 07:20:22,638:INFO:Checking exceptions
2023-10-17 07:20:22,638:INFO:Preloading libraries
2023-10-17 07:20:22,638:INFO:Set up data.
2023-10-17 07:20:22,645:INFO:Set up index.
2023-10-17 07:20:36,146:INFO:Initializing predict_model()
2023-10-17 07:20:36,147:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29738c520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298d5d3f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256971c0>)
2023-10-17 07:20:36,147:INFO:Checking exceptions
2023-10-17 07:20:36,147:INFO:Preloading libraries
2023-10-17 07:20:36,149:INFO:Set up data.
2023-10-17 07:20:36,178:INFO:Set up index.
2023-10-17 07:20:36,331:INFO:Initializing predict_model()
2023-10-17 07:20:36,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d5c310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256971c0>)
2023-10-17 07:20:36,331:INFO:Checking exceptions
2023-10-17 07:20:36,331:INFO:Preloading libraries
2023-10-17 07:20:36,331:INFO:Set up data.
2023-10-17 07:20:36,338:INFO:Set up index.
2023-10-17 07:20:36,417:INFO:Initializing predict_model()
2023-10-17 07:20:36,417:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29839b820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256971c0>)
2023-10-17 07:20:36,417:INFO:Checking exceptions
2023-10-17 07:20:36,417:INFO:Preloading libraries
2023-10-17 07:20:36,417:INFO:Set up data.
2023-10-17 07:20:36,423:INFO:Set up index.
2023-10-17 07:20:36,501:INFO:Initializing predict_model()
2023-10-17 07:20:36,501:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d74f10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256971c0>)
2023-10-17 07:20:36,501:INFO:Checking exceptions
2023-10-17 07:20:36,501:INFO:Preloading libraries
2023-10-17 07:20:36,502:INFO:Set up data.
2023-10-17 07:20:36,508:INFO:Set up index.
2023-10-17 07:20:36,585:INFO:Initializing predict_model()
2023-10-17 07:20:36,585:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983334f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973bdf00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1256971c0>)
2023-10-17 07:20:36,585:INFO:Checking exceptions
2023-10-17 07:20:36,585:INFO:Preloading libraries
2023-10-17 07:20:36,585:INFO:Set up data.
2023-10-17 07:20:36,591:INFO:Set up index.
2023-10-17 07:20:50,089:INFO:Initializing predict_model()
2023-10-17 07:20:50,090:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298da9990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298d5d3f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc550>)
2023-10-17 07:20:50,091:INFO:Checking exceptions
2023-10-17 07:20:50,091:INFO:Preloading libraries
2023-10-17 07:20:50,093:INFO:Set up data.
2023-10-17 07:20:50,117:INFO:Set up index.
2023-10-17 07:20:50,364:INFO:Initializing predict_model()
2023-10-17 07:20:50,364:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c0d30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc550>)
2023-10-17 07:20:50,364:INFO:Checking exceptions
2023-10-17 07:20:50,364:INFO:Preloading libraries
2023-10-17 07:20:50,365:INFO:Set up data.
2023-10-17 07:20:50,374:INFO:Set up index.
2023-10-17 07:20:50,468:INFO:Initializing predict_model()
2023-10-17 07:20:50,468:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c0d30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc550>)
2023-10-17 07:20:50,468:INFO:Checking exceptions
2023-10-17 07:20:50,468:INFO:Preloading libraries
2023-10-17 07:20:50,468:INFO:Set up data.
2023-10-17 07:20:50,474:INFO:Set up index.
2023-10-17 07:20:50,559:INFO:Initializing predict_model()
2023-10-17 07:20:50,559:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c0d30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc550>)
2023-10-17 07:20:50,559:INFO:Checking exceptions
2023-10-17 07:20:50,559:INFO:Preloading libraries
2023-10-17 07:20:50,559:INFO:Set up data.
2023-10-17 07:20:50,566:INFO:Set up index.
2023-10-17 07:20:50,644:INFO:Initializing predict_model()
2023-10-17 07:20:50,645:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2947c0d30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973bdf00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-17 07:20:50,645:INFO:Checking exceptions
2023-10-17 07:20:50,645:INFO:Preloading libraries
2023-10-17 07:20:50,645:INFO:Set up data.
2023-10-17 07:20:50,650:INFO:Set up index.
2023-10-17 07:21:04,143:INFO:Initializing predict_model()
2023-10-17 07:21:04,145:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29737aa10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298d5d3f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fd240>)
2023-10-17 07:21:04,146:INFO:Checking exceptions
2023-10-17 07:21:04,146:INFO:Preloading libraries
2023-10-17 07:21:04,148:INFO:Set up data.
2023-10-17 07:21:04,172:INFO:Set up index.
2023-10-17 07:21:04,314:INFO:Initializing predict_model()
2023-10-17 07:21:04,315:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d5f010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-17 07:21:04,315:INFO:Checking exceptions
2023-10-17 07:21:04,315:INFO:Preloading libraries
2023-10-17 07:21:04,315:INFO:Set up data.
2023-10-17 07:21:04,321:INFO:Set up index.
2023-10-17 07:21:04,397:INFO:Initializing predict_model()
2023-10-17 07:21:04,397:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d5f010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-17 07:21:04,397:INFO:Checking exceptions
2023-10-17 07:21:04,397:INFO:Preloading libraries
2023-10-17 07:21:04,398:INFO:Set up data.
2023-10-17 07:21:04,403:INFO:Set up index.
2023-10-17 07:21:04,479:INFO:Initializing predict_model()
2023-10-17 07:21:04,480:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d5f010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-17 07:21:04,480:INFO:Checking exceptions
2023-10-17 07:21:04,480:INFO:Preloading libraries
2023-10-17 07:21:04,480:INFO:Set up data.
2023-10-17 07:21:04,486:INFO:Set up index.
2023-10-17 07:21:04,563:INFO:Initializing predict_model()
2023-10-17 07:21:04,563:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d5f010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973bdf00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-17 07:21:04,563:INFO:Checking exceptions
2023-10-17 07:21:04,563:INFO:Preloading libraries
2023-10-17 07:21:04,563:INFO:Set up data.
2023-10-17 07:21:04,569:INFO:Set up index.
2023-10-17 07:21:18,128:INFO:Initializing predict_model()
2023-10-17 07:21:18,130:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29749be20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x298d5d3f0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdea0>)
2023-10-17 07:21:18,131:INFO:Checking exceptions
2023-10-17 07:21:18,132:INFO:Preloading libraries
2023-10-17 07:21:18,134:INFO:Set up data.
2023-10-17 07:21:18,159:INFO:Set up index.
2023-10-17 07:21:18,323:INFO:Initializing predict_model()
2023-10-17 07:21:18,323:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298398760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdea0>)
2023-10-17 07:21:18,324:INFO:Checking exceptions
2023-10-17 07:21:18,324:INFO:Preloading libraries
2023-10-17 07:21:18,324:INFO:Set up data.
2023-10-17 07:21:18,330:INFO:Set up index.
2023-10-17 07:21:18,406:INFO:Initializing predict_model()
2023-10-17 07:21:18,406:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298398760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdea0>)
2023-10-17 07:21:18,406:INFO:Checking exceptions
2023-10-17 07:21:18,406:INFO:Preloading libraries
2023-10-17 07:21:18,406:INFO:Set up data.
2023-10-17 07:21:18,413:INFO:Set up index.
2023-10-17 07:21:18,492:INFO:Initializing predict_model()
2023-10-17 07:21:18,492:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d758a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125659510>)
2023-10-17 07:21:18,492:INFO:Checking exceptions
2023-10-17 07:21:18,492:INFO:Preloading libraries
2023-10-17 07:21:18,492:INFO:Set up data.
2023-10-17 07:21:18,498:INFO:Set up index.
2023-10-17 07:21:18,575:INFO:Initializing predict_model()
2023-10-17 07:21:18,575:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298d758a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2973bdf00>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125659510>)
2023-10-17 07:21:18,575:INFO:Checking exceptions
2023-10-17 07:21:18,575:INFO:Preloading libraries
2023-10-17 07:21:18,575:INFO:Set up data.
2023-10-17 07:21:18,581:INFO:Set up index.
2023-10-17 07:21:31,892:INFO:Initializing load_model()
2023-10-17 07:21:31,892:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:21:31,904:INFO:Initializing load_model()
2023-10-17 07:21:31,904:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:21:31,906:INFO:Initializing load_model()
2023-10-17 07:21:31,906:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:21:31,908:INFO:Initializing load_model()
2023-10-17 07:21:31,908:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:21:31,910:INFO:Initializing load_model()
2023-10-17 07:21:31,910:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-10-17 07:21:31,936:INFO:Initializing predict_model()
2023-10-17 07:21:31,936:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29744fcd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x297498be0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdea0>)
2023-10-17 07:21:31,936:INFO:Checking exceptions
2023-10-17 07:21:31,936:INFO:Preloading libraries
2023-10-17 07:21:31,936:INFO:Set up data.
2023-10-17 07:21:31,954:INFO:Set up index.
2023-10-17 07:21:32,111:INFO:Initializing predict_model()
2023-10-17 07:21:32,111:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298f366b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdea0>)
2023-10-17 07:21:32,111:INFO:Checking exceptions
2023-10-17 07:21:32,111:INFO:Preloading libraries
2023-10-17 07:21:32,111:INFO:Set up data.
2023-10-17 07:21:32,118:INFO:Set up index.
2023-10-17 07:21:32,213:INFO:Initializing predict_model()
2023-10-17 07:21:32,300:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298f366b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fdea0>)
2023-10-17 07:21:32,300:INFO:Checking exceptions
2023-10-17 07:21:32,300:INFO:Preloading libraries
2023-10-17 07:21:32,300:INFO:Set up data.
2023-10-17 07:21:32,307:INFO:Set up index.
2023-10-17 07:21:32,397:INFO:Initializing predict_model()
2023-10-17 07:21:32,397:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-17 07:21:32,397:INFO:Checking exceptions
2023-10-17 07:21:32,397:INFO:Preloading libraries
2023-10-17 07:21:32,398:INFO:Set up data.
2023-10-17 07:21:32,404:INFO:Set up index.
2023-10-17 07:21:32,488:INFO:Initializing predict_model()
2023-10-17 07:21:32,488:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29749ab30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125697010>)
2023-10-17 07:21:32,488:INFO:Checking exceptions
2023-10-17 07:21:32,488:INFO:Preloading libraries
2023-10-17 07:21:32,488:INFO:Set up data.
2023-10-17 07:21:32,495:INFO:Set up index.
2023-10-17 07:21:45,989:INFO:Initializing predict_model()
2023-10-17 07:21:45,990:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29744fca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x297498be0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:21:45,990:INFO:Checking exceptions
2023-10-17 07:21:45,991:INFO:Preloading libraries
2023-10-17 07:21:45,993:INFO:Set up data.
2023-10-17 07:21:46,018:INFO:Set up index.
2023-10-17 07:21:46,190:INFO:Initializing predict_model()
2023-10-17 07:21:46,190:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:21:46,190:INFO:Checking exceptions
2023-10-17 07:21:46,190:INFO:Preloading libraries
2023-10-17 07:21:46,190:INFO:Set up data.
2023-10-17 07:21:46,198:INFO:Set up index.
2023-10-17 07:21:46,284:INFO:Initializing predict_model()
2023-10-17 07:21:46,284:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:21:46,284:INFO:Checking exceptions
2023-10-17 07:21:46,284:INFO:Preloading libraries
2023-10-17 07:21:46,285:INFO:Set up data.
2023-10-17 07:21:46,291:INFO:Set up index.
2023-10-17 07:21:46,373:INFO:Initializing predict_model()
2023-10-17 07:21:46,373:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:21:46,373:INFO:Checking exceptions
2023-10-17 07:21:46,373:INFO:Preloading libraries
2023-10-17 07:21:46,373:INFO:Set up data.
2023-10-17 07:21:46,380:INFO:Set up index.
2023-10-17 07:21:46,461:INFO:Initializing predict_model()
2023-10-17 07:21:46,461:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298356800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29749ab30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:21:46,461:INFO:Checking exceptions
2023-10-17 07:21:46,461:INFO:Preloading libraries
2023-10-17 07:21:46,461:INFO:Set up data.
2023-10-17 07:21:46,467:INFO:Set up index.
2023-10-17 07:21:59,930:INFO:Initializing predict_model()
2023-10-17 07:21:59,932:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29744d960>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x297498be0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe9e0>)
2023-10-17 07:21:59,932:INFO:Checking exceptions
2023-10-17 07:21:59,932:INFO:Preloading libraries
2023-10-17 07:21:59,933:INFO:Set up data.
2023-10-17 07:21:59,958:INFO:Set up index.
2023-10-17 07:22:00,129:INFO:Initializing predict_model()
2023-10-17 07:22:00,129:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983301c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fe9e0>)
2023-10-17 07:22:00,129:INFO:Checking exceptions
2023-10-17 07:22:00,129:INFO:Preloading libraries
2023-10-17 07:22:00,129:INFO:Set up data.
2023-10-17 07:22:00,136:INFO:Set up index.
2023-10-17 07:22:00,220:INFO:Initializing predict_model()
2023-10-17 07:22:00,220:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983301c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125659510>)
2023-10-17 07:22:00,220:INFO:Checking exceptions
2023-10-17 07:22:00,220:INFO:Preloading libraries
2023-10-17 07:22:00,220:INFO:Set up data.
2023-10-17 07:22:00,226:INFO:Set up index.
2023-10-17 07:22:00,310:INFO:Initializing predict_model()
2023-10-17 07:22:00,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983301c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125659510>)
2023-10-17 07:22:00,310:INFO:Checking exceptions
2023-10-17 07:22:00,310:INFO:Preloading libraries
2023-10-17 07:22:00,310:INFO:Set up data.
2023-10-17 07:22:00,316:INFO:Set up index.
2023-10-17 07:22:00,401:INFO:Initializing predict_model()
2023-10-17 07:22:00,401:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983301c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29749ab30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x125659510>)
2023-10-17 07:22:00,401:INFO:Checking exceptions
2023-10-17 07:22:00,401:INFO:Preloading libraries
2023-10-17 07:22:00,401:INFO:Set up data.
2023-10-17 07:22:00,408:INFO:Set up index.
2023-10-17 07:22:13,917:INFO:Initializing predict_model()
2023-10-17 07:22:13,919:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x297499240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x297498be0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2939fc670>)
2023-10-17 07:22:13,919:INFO:Checking exceptions
2023-10-17 07:22:13,919:INFO:Preloading libraries
2023-10-17 07:22:13,921:INFO:Set up data.
2023-10-17 07:22:13,944:INFO:Set up index.
2023-10-17 07:22:14,125:INFO:Initializing predict_model()
2023-10-17 07:22:14,125:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298dab1f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-17 07:22:14,125:INFO:Checking exceptions
2023-10-17 07:22:14,125:INFO:Preloading libraries
2023-10-17 07:22:14,125:INFO:Set up data.
2023-10-17 07:22:14,131:INFO:Set up index.
2023-10-17 07:22:14,212:INFO:Initializing predict_model()
2023-10-17 07:22:14,213:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298dab1f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-17 07:22:14,213:INFO:Checking exceptions
2023-10-17 07:22:14,213:INFO:Preloading libraries
2023-10-17 07:22:14,213:INFO:Set up data.
2023-10-17 07:22:14,219:INFO:Set up index.
2023-10-17 07:22:14,298:INFO:Initializing predict_model()
2023-10-17 07:22:14,298:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298dab1f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-17 07:22:14,298:INFO:Checking exceptions
2023-10-17 07:22:14,298:INFO:Preloading libraries
2023-10-17 07:22:14,298:INFO:Set up data.
2023-10-17 07:22:14,305:INFO:Set up index.
2023-10-17 07:22:14,385:INFO:Initializing predict_model()
2023-10-17 07:22:14,385:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298dab1f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29749ab30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x282ad9b40>)
2023-10-17 07:22:14,385:INFO:Checking exceptions
2023-10-17 07:22:14,385:INFO:Preloading libraries
2023-10-17 07:22:14,385:INFO:Set up data.
2023-10-17 07:22:14,391:INFO:Set up index.
2023-10-17 07:22:27,900:INFO:Initializing predict_model()
2023-10-17 07:22:27,901:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29737bcd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x297498be0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:22:27,901:INFO:Checking exceptions
2023-10-17 07:22:27,901:INFO:Preloading libraries
2023-10-17 07:22:27,903:INFO:Set up data.
2023-10-17 07:22:27,925:INFO:Set up index.
2023-10-17 07:22:28,060:INFO:Initializing predict_model()
2023-10-17 07:22:28,060:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983f47c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:22:28,060:INFO:Checking exceptions
2023-10-17 07:22:28,060:INFO:Preloading libraries
2023-10-17 07:22:28,060:INFO:Set up data.
2023-10-17 07:22:28,066:INFO:Set up index.
2023-10-17 07:22:28,143:INFO:Initializing predict_model()
2023-10-17 07:22:28,143:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298f32080>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:22:28,143:INFO:Checking exceptions
2023-10-17 07:22:28,143:INFO:Preloading libraries
2023-10-17 07:22:28,143:INFO:Set up data.
2023-10-17 07:22:28,149:INFO:Set up index.
2023-10-17 07:22:28,225:INFO:Initializing predict_model()
2023-10-17 07:22:28,225:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x298dab490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:22:28,225:INFO:Checking exceptions
2023-10-17 07:22:28,225:INFO:Preloading libraries
2023-10-17 07:22:28,225:INFO:Set up data.
2023-10-17 07:22:28,231:INFO:Set up index.
2023-10-17 07:22:28,307:INFO:Initializing predict_model()
2023-10-17 07:22:28,307:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2983f47c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x29749ab30>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28b148e50>)
2023-10-17 07:22:28,307:INFO:Checking exceptions
2023-10-17 07:22:28,307:INFO:Preloading libraries
2023-10-17 07:22:28,307:INFO:Set up data.
2023-10-17 07:22:28,313:INFO:Set up index.
2023-11-15 09:13:50,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-15 09:13:50,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-15 09:13:50,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-15 09:13:50,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-15 09:13:50,650:INFO:Initializing load_model()
2023-11-15 09:13:50,650:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:13:51,503:INFO:Initializing load_model()
2023-11-15 09:13:51,507:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:13:51,511:INFO:Initializing load_model()
2023-11-15 09:13:51,511:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:13:51,514:INFO:Initializing load_model()
2023-11-15 09:13:51,515:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:13:51,517:INFO:Initializing load_model()
2023-11-15 09:13:51,517:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:15:49,419:INFO:Initializing load_model()
2023-11-15 09:15:49,420:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:15:49,423:INFO:Initializing load_model()
2023-11-15 09:15:49,423:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:15:49,426:INFO:Initializing load_model()
2023-11-15 09:15:49,426:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:15:49,428:INFO:Initializing load_model()
2023-11-15 09:15:49,428:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:15:49,430:INFO:Initializing load_model()
2023-11-15 09:15:49,430:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:15:49,441:INFO:Initializing predict_model()
2023-11-15 09:15:49,441:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x284162800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x16f64aef0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11de56170>)
2023-11-15 09:15:49,441:INFO:Checking exceptions
2023-11-15 09:15:49,441:INFO:Preloading libraries
2023-11-15 09:15:49,441:INFO:Set up data.
2023-11-15 09:15:49,450:INFO:Set up index.
2023-11-15 09:15:49,555:INFO:Initializing predict_model()
2023-11-15 09:15:49,555:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16bd59f60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11de56170>)
2023-11-15 09:15:49,555:INFO:Checking exceptions
2023-11-15 09:15:49,555:INFO:Preloading libraries
2023-11-15 09:15:49,555:INFO:Set up data.
2023-11-15 09:15:49,562:INFO:Set up index.
2023-11-15 09:15:49,635:INFO:Initializing predict_model()
2023-11-15 09:15:49,635:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16bd59f60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11de56170>)
2023-11-15 09:15:49,635:INFO:Checking exceptions
2023-11-15 09:15:49,635:INFO:Preloading libraries
2023-11-15 09:15:49,635:INFO:Set up data.
2023-11-15 09:15:49,642:INFO:Set up index.
2023-11-15 09:15:49,692:INFO:Initializing predict_model()
2023-11-15 09:15:49,693:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16bd59f60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11de56170>)
2023-11-15 09:15:49,693:INFO:Checking exceptions
2023-11-15 09:15:49,693:INFO:Preloading libraries
2023-11-15 09:15:49,693:INFO:Set up data.
2023-11-15 09:15:49,704:INFO:Set up index.
2023-11-15 09:15:49,761:INFO:Initializing predict_model()
2023-11-15 09:15:49,761:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16bd59f60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x16f5e5630>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11de56170>)
2023-11-15 09:15:49,761:INFO:Checking exceptions
2023-11-15 09:15:49,761:INFO:Preloading libraries
2023-11-15 09:15:49,761:INFO:Set up data.
2023-11-15 09:15:49,768:INFO:Set up index.
2023-11-15 09:16:03,233:INFO:Initializing predict_model()
2023-11-15 09:16:03,234:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2841627a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x16f64aef0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16adb23b0>)
2023-11-15 09:16:03,235:INFO:Checking exceptions
2023-11-15 09:16:03,235:INFO:Preloading libraries
2023-11-15 09:16:03,236:INFO:Set up data.
2023-11-15 09:16:03,259:INFO:Set up index.
2023-11-15 09:16:03,329:INFO:Initializing predict_model()
2023-11-15 09:16:03,329:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x11de60f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16adb23b0>)
2023-11-15 09:16:03,329:INFO:Checking exceptions
2023-11-15 09:16:03,329:INFO:Preloading libraries
2023-11-15 09:16:03,330:INFO:Set up data.
2023-11-15 09:16:03,336:INFO:Set up index.
2023-11-15 09:16:03,381:INFO:Initializing predict_model()
2023-11-15 09:16:03,381:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x11de60f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16adb23b0>)
2023-11-15 09:16:03,381:INFO:Checking exceptions
2023-11-15 09:16:03,381:INFO:Preloading libraries
2023-11-15 09:16:03,381:INFO:Set up data.
2023-11-15 09:16:03,387:INFO:Set up index.
2023-11-15 09:16:03,435:INFO:Initializing predict_model()
2023-11-15 09:16:03,435:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x11de60f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16adb23b0>)
2023-11-15 09:16:03,435:INFO:Checking exceptions
2023-11-15 09:16:03,435:INFO:Preloading libraries
2023-11-15 09:16:03,436:INFO:Set up data.
2023-11-15 09:16:03,442:INFO:Set up index.
2023-11-15 09:16:03,487:INFO:Initializing predict_model()
2023-11-15 09:16:03,487:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f593250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x16f5e5630>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16adb23b0>)
2023-11-15 09:16:03,487:INFO:Checking exceptions
2023-11-15 09:16:03,487:INFO:Preloading libraries
2023-11-15 09:16:03,487:INFO:Set up data.
2023-11-15 09:16:03,493:INFO:Set up index.
2023-11-15 09:16:11,051:INFO:Initializing load_model()
2023-11-15 09:16:11,052:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:11,054:INFO:Initializing load_model()
2023-11-15 09:16:11,054:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:11,056:INFO:Initializing load_model()
2023-11-15 09:16:11,056:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:11,057:INFO:Initializing load_model()
2023-11-15 09:16:11,057:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:11,059:INFO:Initializing load_model()
2023-11-15 09:16:11,059:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:16,994:INFO:Initializing load_model()
2023-11-15 09:16:16,994:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:16,995:INFO:Initializing load_model()
2023-11-15 09:16:16,995:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:16,997:INFO:Initializing load_model()
2023-11-15 09:16:16,997:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:16,999:INFO:Initializing load_model()
2023-11-15 09:16:16,999:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:17,000:INFO:Initializing load_model()
2023-11-15 09:16:17,000:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:17,223:INFO:Initializing load_model()
2023-11-15 09:16:17,223:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:17,225:INFO:Initializing load_model()
2023-11-15 09:16:17,225:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:17,227:INFO:Initializing load_model()
2023-11-15 09:16:17,227:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:17,229:INFO:Initializing load_model()
2023-11-15 09:16:17,229:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:17,231:INFO:Initializing load_model()
2023-11-15 09:16:17,231:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:24,614:INFO:Initializing load_model()
2023-11-15 09:16:24,614:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:24,615:INFO:Initializing load_model()
2023-11-15 09:16:24,615:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:24,616:INFO:Initializing load_model()
2023-11-15 09:16:24,617:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:24,618:INFO:Initializing load_model()
2023-11-15 09:16:24,618:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:24,619:INFO:Initializing load_model()
2023-11-15 09:16:24,619:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:36,626:INFO:Initializing load_model()
2023-11-15 09:16:36,626:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:36,628:INFO:Initializing load_model()
2023-11-15 09:16:36,628:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:36,630:INFO:Initializing load_model()
2023-11-15 09:16:36,630:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:36,632:INFO:Initializing load_model()
2023-11-15 09:16:36,632:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:36,633:INFO:Initializing load_model()
2023-11-15 09:16:36,633:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:36,675:INFO:Initializing predict_model()
2023-11-15 09:16:36,675:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x283e596c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2842b6230>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11e0d7c70>)
2023-11-15 09:16:36,675:INFO:Checking exceptions
2023-11-15 09:16:36,675:INFO:Preloading libraries
2023-11-15 09:16:36,676:INFO:Set up data.
2023-11-15 09:16:36,680:INFO:Set up index.
2023-11-15 09:16:36,730:INFO:Initializing predict_model()
2023-11-15 09:16:36,730:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x168052410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1680d96c0>)
2023-11-15 09:16:36,730:INFO:Checking exceptions
2023-11-15 09:16:36,730:INFO:Preloading libraries
2023-11-15 09:16:36,730:INFO:Set up data.
2023-11-15 09:16:36,735:INFO:Set up index.
2023-11-15 09:16:36,784:INFO:Initializing predict_model()
2023-11-15 09:16:36,784:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x168052410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1680d96c0>)
2023-11-15 09:16:36,785:INFO:Checking exceptions
2023-11-15 09:16:36,785:INFO:Preloading libraries
2023-11-15 09:16:36,785:INFO:Set up data.
2023-11-15 09:16:36,789:INFO:Set up index.
2023-11-15 09:16:36,836:INFO:Initializing predict_model()
2023-11-15 09:16:36,836:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x168052410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1680d96c0>)
2023-11-15 09:16:36,836:INFO:Checking exceptions
2023-11-15 09:16:36,836:INFO:Preloading libraries
2023-11-15 09:16:36,836:INFO:Set up data.
2023-11-15 09:16:36,840:INFO:Set up index.
2023-11-15 09:16:36,888:INFO:Initializing predict_model()
2023-11-15 09:16:36,888:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x168052410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x2842b7b50>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1680d96c0>)
2023-11-15 09:16:36,888:INFO:Checking exceptions
2023-11-15 09:16:36,888:INFO:Preloading libraries
2023-11-15 09:16:36,888:INFO:Set up data.
2023-11-15 09:16:36,892:INFO:Set up index.
2023-11-15 09:16:51,547:INFO:Initializing load_model()
2023-11-15 09:16:51,548:INFO:load_model(model_name=model/ts_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:51,550:INFO:Initializing load_model()
2023-11-15 09:16:51,550:INFO:load_model(model_name=model/ys_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:51,552:INFO:Initializing load_model()
2023-11-15 09:16:51,552:INFO:load_model(model_name=model/el_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:51,554:INFO:Initializing load_model()
2023-11-15 09:16:51,554:INFO:load_model(model_name=model/ra_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:51,555:INFO:Initializing load_model()
2023-11-15 09:16:51,555:INFO:load_model(model_name=model/ha_final, platform=None, authentication=None, verbose=True)
2023-11-15 09:16:51,563:INFO:Initializing predict_model()
2023-11-15 09:16:51,563:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28d533c10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x283e5abf0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28d6fad40>)
2023-11-15 09:16:51,563:INFO:Checking exceptions
2023-11-15 09:16:51,563:INFO:Preloading libraries
2023-11-15 09:16:51,563:INFO:Set up data.
2023-11-15 09:16:51,570:INFO:Set up index.
2023-11-15 09:16:51,626:INFO:Initializing predict_model()
2023-11-15 09:16:51,626:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152294d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x284184c10>)
2023-11-15 09:16:51,626:INFO:Checking exceptions
2023-11-15 09:16:51,626:INFO:Preloading libraries
2023-11-15 09:16:51,626:INFO:Set up data.
2023-11-15 09:16:51,632:INFO:Set up index.
2023-11-15 09:16:51,685:INFO:Initializing predict_model()
2023-11-15 09:16:51,685:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152294d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x284184c10>)
2023-11-15 09:16:51,685:INFO:Checking exceptions
2023-11-15 09:16:51,685:INFO:Preloading libraries
2023-11-15 09:16:51,685:INFO:Set up data.
2023-11-15 09:16:51,691:INFO:Set up index.
2023-11-15 09:16:51,741:INFO:Initializing predict_model()
2023-11-15 09:16:51,741:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152294d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5',
                                             'TIME5'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LGBMRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x284184c10>)
2023-11-15 09:16:51,741:INFO:Checking exceptions
2023-11-15 09:16:51,741:INFO:Preloading libraries
2023-11-15 09:16:51,742:INFO:Set up data.
2023-11-15 09:16:51,747:INFO:Set up index.
2023-11-15 09:16:51,797:INFO:Initializing predict_model()
2023-11-15 09:16:51,797:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x152294d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Size', 'C', 'Si', 'Mn', 'P', 'S',
                                             'Ni', 'Cr', 'Mo', 'Cu', 'Sn',
                                             'Tol-Al', 'Ti', 'B', 'N', 'Co',
                                             'TEMP1', 'TIME1', 'TEMP5', 'TIME5',
                                             'unit_la'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 <catboost.core.CatBoostRegressor object at 0x168e3dcc0>)]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x284184c10>)
2023-11-15 09:16:51,797:INFO:Checking exceptions
2023-11-15 09:16:51,797:INFO:Preloading libraries
2023-11-15 09:16:51,797:INFO:Set up data.
2023-11-15 09:16:51,804:INFO:Set up index.
